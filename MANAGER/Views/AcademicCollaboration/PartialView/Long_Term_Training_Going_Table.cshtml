<div class="row mb-4">
    <div class="col-lg-10 col-xl-10 col-md-10 col-sm-10">
        <div class="row align-items-center">
            <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 mb-4">
                <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                    <select class="form-control text-center" id="search_nation_tab_1_table_1" name="param" style="width:100% !important">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 mb-4">
                <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                    <select class="form-control text-center" id="search_year_tab_1_table_1" name="param" style="width:100% !important">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 mb-4">
                <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                    <select class="form-control text-center" id="search_training_facility_tab_1_table_1" name="param" style="width:100% !important">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 mb-4">
                <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                    <select class="form-control text-center" id="search_working_facility_tab_1_table_1" name="param" style="width:100% !important">
                        <option value=""></option>
                    </select>
                </div>
            </div>
            <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mb-4">
                <a id="collab_going_search" class="btn btn-light-primary px-6 font-weight-bold text-nowrap">Tìm kiếm</a>
            </div>
        </div>
    </div>
    <div class="col-lg-2 col-xl-2 col-md-2 col-sm-2">
        <div class="row align-items-center justify-content-end">
            <div class="col-lg-offset-6 col-md-offset-6 col-sm-offset-6 mb-4">
                <a id="add_officer_button" href="#add_officer" class="btn btn-light-primary px-6 font-weight-bold" data-toggle="modal">Thêm</a>
            </div>
            <div class="col-lg-offset-6 col-md-offset-6 col-sm-offset-6 mb-4">
                <div class="dropdown dropdown-inline ml-2">
                    <button type="button" class="btn btn-light-primary font-weight-bolder dropdown-toggle"
                            data-toggle="dropdown" aria-haspopup="true"
                            aria-expanded="false">
                        Export
                    </button>
                    <!--begin::Dropdown Menu-->
                    <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right">
                        <!--begin::Navigation-->
                        <ul class="navi flex-column navi-hover py-2">
                            <li class="navi-header font-weight-bolder text-uppercase font-size-sm text-primary pb-2">
                                Choose an option:
                            </li>
                            <li class="navi-item">
                                <a href="#" class="navi-link" onclick="exportExcel()">
                                    <span class="navi-icon">
                                        <i class="la la-file-excel-o"></i>
                                    </span>
                                    <span class="navi-text">Excel</span>
                                </a>
                            </li>
                        </ul>
                        <!--end::Navigation-->
                    </div>
                    <!--end::Dropdown Menu-->
                </div>
            </div>
        </div>
    </div>
</div>
<div style="zoom: 80%;">
    <table class="table table-bordered table-hover table-checkable" id="collab_going_table">
        <thead>
            <tr>
                <th rowspan="2" class="">S<br />T<br />T</th>
                <th colspan="3" class="text-center header-modify">Thông tin cá nhân</th>
                <th colspan="2" class="text-center header-modify">Đơn vị đào tào</th>
                <th nowrap="nowrap" rowspan="2" class="text-center">Thời gian bắt đầu đi học</th>
                <th nowrap="nowrap" rowspan="2" class="text-center">Thời hạn dự kiến kết thúc</th>
                <th rowspan="2" class="text-center">Trạng thái</th>
                <th rowspan="2" class="text-center">Hỗ trợ</th>
                <th rowspan="2" class="text-center">Ghi chú</th>
            </tr>
            <tr>
                <th class="text-center">Họ và tên</th>
                <th class="text-center">Email</th>
                <th nowrap="nowrap" class="text-center">Đơn vị công tác</th>
                <th class="text-center">Tên</th>
                <th class="text-center">Quốc gia</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>
</div>

@section longTermGoingTableScripts{
    @*///////////////////////////////////////////TABLE 1: LONG-TERM GOING//////////////////////////////////////////*@
    <script>
    @*1.SEARCH*@
    $('#search_nation_tab_1_table_1').select2({
        placeholder: 'Quốc gia',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getCountries',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    country_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.country_name;
                    obj.text = obj.country_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatCountryInfo
    });

    function formatCountryInfo(country) {
        return country.country_name;
    }

    $('#search_year_tab_1_table_1').select2({
        placeholder: 'Năm đi học',
        allowClear: true
    });

    //get data to year search
    $.ajax({
        url: "/AcademicCollaboration/getYears",
        type: "GET",
        cache: true,
        dataType: "json",
        success: function (data) {
            if (data != null) {
                for (let year = data.obj.year_from; year <= data.obj.year_to; year++) {
                    let newOption = new Option(year, year, false, false);
                    $("#search_year_tab_1_table_1").val(null).trigger('change');
                    $("#search_year_tab_1_table_1").append(newOption).trigger('change');
                }
            }
        },
        error: function () {
            toastr.error("Lấy dữ liệu về năm xảy ra lỗi.");
        }
    });


    $('#search_training_facility_tab_1_table_1').select2({
        placeholder: 'Đơn vị đào tạo',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getPartners',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    partner_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.partner_name;
                    obj.text = obj.partner_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatPartnerInfo
    });

    function formatPartnerInfo(partner) {
        return partner.partner_name;
    }

    $('#search_working_facility_tab_1_table_1').select2({
        placeholder: 'Đơn vị công tác',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getOffices',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    office_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.office_name;
                    obj.text = obj.office_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatOfficeInfo
    });

    function formatOfficeInfo(office) {
        return office.office_name;
    }

    @*MODAL INFORMATION*@
    //// person infor
    var person = $('#add_officer_name').val(); //*
    var person_name = person.split('/')[0] === undefined ? '' : person.split('/')[0];
    var person_id = person.split('/')[1] === undefined ? 0 : person.split('/')[1];
    var available_person = false;

    //// partner infor
    var partner = $('#add_officer_traning').val(); //*
    var partner_name = partner.split('/')[0] === undefined ? '' : partner.split('/')[0];
    var partner_id = partner.split('/')[1] === undefined ? 0 : partner.split('/')[1];
    var available_partner = false;

    var status_id = $('#add_officer_status').val(); //*

    var plan_start_date = $('#add_officer_start_plan_date').val(); //*
    var plan_end_date = $('#add_officer_end_plan_date').val(); //*

    @*2.ADD MODAL*@
    var uppy1; //init for uppy.js
    //init loader save button
    var add_officer_save = new LoaderBtn($("#add_officer_save"));
    //2.1.SHOW BUTTON
    ///2.1.1.THÔNG TIN CÁ NHÂN
    $('#add_officer_name').select2({
        placeholder: 'Họ và tên',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getPeople',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    person_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.name + "/" + obj.people_id;
                    obj.text = obj.name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatPersonInfo
    }).on("select2:select", function () { //after select option
        checkPerson();
    }).on("select2:unselecting", function () {
        //after clear tag
        //clear email & office
        $('#add_officer_email').val("");
        $('#add_officer_facility').val(null).trigger('change');
        //enable email & office
        $('#add_officer_email').prop('disabled', false);
        $('#add_officer_facility').prop('disabled', false);
    });

    function formatPersonInfo(person) {
        if (person.id) {
            let mssv_msnv = person.mssv_msnv;
            let name = person.name;
            if (mssv_msnv === undefined && name === undefined) {
                return "Dữ liệu cá nhân mới."
            } else {
                return mssv_msnv + " - " + name;
            }
        }
    }

    function checkPerson() {
        person = $('#add_officer_name').val();
        person_name = person.split('/')[0] === undefined ? '' : person.split('/')[0];
        person_id = person.split('/')[1] === undefined ? 0 : person.split('/')[1];

        $.ajax({
            url: "/AcademicCollaboration/checkPerson",
            type: "POST",
            data: {
                people_id: person_id,
                people_name: person_name
            },
            cache: false,
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    //clear content
                    $('#add_officer_email').val("");
                    $('#add_officer_facility').val(null).trigger('change');
                    if (data.obj != null) {
                        //avaiable person data in DB
                        available_person = true; //using for Add||Edit
                        if (data.success) {
                            //auto fill data
                            let p = data.obj;
                            $('#add_officer_email').val(p.email);
                            $('#add_officer_facility').append(new Option(p.office_name, p.office_id, false, true)).trigger('change');
                            //disable email & office
                            $('#add_officer_email').prop('disabled', true);
                            $('#add_officer_facility').prop('disabled', true);
                        } else {
                            toastr.error(data.content);
                        }
                    } else {
                        //new person case
                        available_person = false;
                        ///enable email and office select
                        $('#add_officer_email').prop('disabled', false);
                        $('#add_officer_facility').prop('disabled', false);
                    }
                } else {
                    toastr.error("Kiểm tra cán bộ giảng viên có lỗi xảy ra.");
                }
            },
            error: function () {
                toastr.error("Kiểm tra cán bộ giảng viên có lỗi xảy ra.");
            }
        });
    }

    $('#add_officer_facility').select2({
        placeholder: 'Đơn vị - Cơ sở',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getOffices',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    office_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.office_id;
                    obj.text = obj.office_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatOfficeInfo
    });

    ///2.1.2.ĐƠN VỊ ĐÀO TẠO
    $('#add_officer_traning').select2({
        placeholder: 'Đơn vị đào tạo',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getPartners',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    partner_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.partner_name + '/' + obj.partner_id;
                    obj.text = obj.partner_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatPartnerInfo
    }).on("select2:select", function () { //after select partner
        //check partner
        checkPartner();
    }).on("select2:unselecting", function () {
        //after clear tag
        //clear country select
        $('#add_officer_nation').val(null).trigger('change');
        ///enable country
        $('#add_officer_nation').prop('disabled', false);
    });

    function formatPartnerInfo(partner) {
        if (partner.id) {
            let partner_name = partner.partner_name;
            if (partner_name === undefined) {
                return "Dữ liệu đơn vị đào tạo mới."
            } else {
                return partner.partner_name;
            }
        }
    }

    function checkPartner() {
        //process partner_name
        partner = $('#add_officer_traning').val();
        partner_name = partner.split('/')[0] === undefined ? '' : partner.split('/')[0];
        partner_id = partner.split('/')[1] === undefined ? 0 : partner.split('/')[1];

        $.ajax({
            url: "/AcademicCollaboration/checkPartner",
            type: "POST",
            data: {
                partner_name: partner_name,
                partner_id: partner_id
            },
            cache: false,
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    //clear content
                    $('#add_officer_nation').val(null).trigger('change');
                    if (data.obj != null) {
                        //available partner data in DB
                        available_partner = true; //using for Add||Edit
                        if (data.success) {
                            //auto fill data
                            let p = data.obj;
                            $('#add_officer_nation').append(new Option(p.country_name, p.country_id, false, true)).trigger('change');
                            //disable country
                            $('#add_officer_nation').prop('disabled', true);
                        } else {
                            toastr.error(data.content);
                        }
                    } else {
                        //new partner case
                        available_partner = false;
                        ///enable country
                        $('#add_officer_nation').prop('disabled', false);
                    }
                } else {
                    toastr.error("Kiểm tra đối tác có lỗi xảy ra.");
                }
            },
            error: function () {
                toastr.error("Kiểm tra đối tác có lỗi xảy ra.");
            }
        });
    }

    $('#add_officer_nation').select2({
        placeholder: 'Quốc gia',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getCountries',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    country_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.country_id;
                    obj.text = obj.country_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatCountryInfo
    });

    $('#add_officer_coop_scope').select2({
        placeholder: 'Phạm vi hợp tác',
        allowClear: true,
        //minimumResultsForSearch: -1, //hide search box
        ajax: {
            url: '/AcademicCollaboration/getCollabScopes',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function (params) {
                return {
                    collab_abbreviation_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.scope_id;
                    obj.text = obj.scope_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatCollabScope
    });

    function formatCollabScope(scope) {
        return scope.scope_abbreviation + " - " + scope.scope_name;
    }

    ///2.1.3.CHI TIẾT
    $('#add_officer_status').select2({
        placeholder: 'Trạng thái',
        allowClear: true,
        minimumResultsForSearch: -1, //hide search box
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getAcadCollabStatus',
            delay: 250,
            cache: true,
            dataType: 'json',
            data: function () {
                return {
                    status_type_specific: 2 //long-term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.collab_status_id;
                    obj.text = obj.collab_status_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatAcadCollabStatus
    });

    function formatAcadCollabStatus(acs) {
        return acs.collab_status_name;
    }

    //2.2. SAVE BUTTON
    $('#add_officer_save').on('click', function () {
        saveAcademicCollaboration();
    });

    function saveAcademicCollaboration() {
        //person
        person = $('#add_officer_name').val();
        person_name = person.split('/')[0];
        person_id = person.split('/')[1]

        var person_email = $('#add_officer_email').val();
        var person_profile_office_id = $('#add_officer_facility').val();

        //partner
        partner = $('#add_officer_traning').val();
        partner_name = partner.split('/')[0];
        partner_id = partner.split('/')[1];

        var partner_country_id = $('#add_officer_nation').val();

        var collab_scope_id = $('#add_officer_coop_scope').val();

        //detail
        status_id = $('#add_officer_status').val();

        plan_start_date = $('#add_officer_start_plan_date').val();
        plan_end_date = $('#add_officer_end_plan_date').val();

        var actual_start_date = $('#add_officer_start_date').val();
        var actual_end_date = $('#add_officer_end_date').val();

        var evidence = uppy1.getFiles();

        var support = $('#add_officer_support').prop('checked');
        var note = $('#add_officer_note').val();

        var obj_person = {
            available_person: available_person,
            person_name: person_name,
            person_id: person_id,
            person_email: person_email,
            person_profile_office_id: person_profile_office_id
        }

        var obj_partner = {
            available_partner: available_partner,
            partner_name: partner_name,
            partner_id: partner_id,
            partner_country_id: partner_country_id,
            collab_scope_id: collab_scope_id
        }

        var obj_academic_collab = {
            status_id: status_id,
            plan_start_date: formatDatePicker(plan_start_date),
            plan_end_date: formatDatePicker(plan_end_date),
            actual_start_date: formatDatePicker(actual_start_date),
            actual_end_date: formatDatePicker(actual_end_date),
            support: support,
            note: note,
            evidence_link: null
        }

        //check empty
        if (isEmpty(person) || isEmpty(partner) || isEmpty(collab_scope_id) || isEmpty(status_id) || isEmpty(plan_start_date) || isEmpty(plan_end_date)) {
            return toastr.error("Chưa chọn đủ trường thông tin bắt buộc.");
        } else {
            //validate datepicker from - to
            if (!datePickerFromToValidate(plan_start_date, plan_end_date) || !datePickerFromToValidate(actual_start_date, actual_end_date)) {
                return toastr.error("`TG đi học` không được vượt quá `TG kết thúc`.")
            } else {
                saveAcademicCollaborationProcess_Step1(evidence, obj_person, obj_partner, obj_academic_collab); //Step1 auto trigger Step2 when ajax success
            }
        }
    }

    function saveAcademicCollaborationProcess_Step1(evidence, obj_person, obj_partner, obj_academic_collab) {
        //start load
        add_officer_save.startLoading();

        if (evidence.length != 0) { //if file was attached
            let formData = new FormData();
            formData.append("evidence", evidence[0].data);
            formData.append("folder_name", person_name + " - " + partner_name);
            //Step 1
            //upload file
            $.ajax({
                url: "/AcademicCollaboration/uploadEvidenceFile",
                type: "POST",
                data: formData,
                cache: false,
                processData: false,
                contentType: false,
                dataType: "json",
                success: function (data) {
                    //get evidence_link after upload to Google Drive
                    var evidence_link = data.evidence_link;
                    obj_academic_collab.evidence_link = evidence_link;

                    //continuous Step 2
                    saveAcademicCollaborationProcess_Step2(obj_person, obj_partner, obj_academic_collab);
                },
                error: function () {
                    toastr.error("Có lỗi xảy ra khi upload file.");
                }
            });
        } else {
            saveAcademicCollaborationProcess_Step2(obj_person, obj_partner, obj_academic_collab);
        }
    }

    function saveAcademicCollaborationProcess_Step2(obj_person, obj_partner, obj_academic_collab) {
        $.ajax({
            url: "/AcademicCollaboration/saveAcademicCollaboration",
            type: "POST",
            data: {
                direction_id: 1, //going
                collab_type_id: 2, //long-term
                obj_person: obj_person,
                obj_partner: obj_partner,
                obj_academic_collab: obj_academic_collab
            },
            cache: false,
            dataType: "json",
            success: function (data) {
                if (data != null) {
                    if (data.success) {
                        toastr.success(data.content);
                        collab_going_table.ajax.reload();
                        $("#add_officer_close").click();
                        clearContentAddModal();
                        //stop loading
                        add_officer_save.stopLoading();
                    } else {
                        toastr.warning(data.content);
                        //stop loading
                        add_officer_save.stopLoading();
                    }
                }
            },
            error: function () {
                toastr.error("Có lỗi xảy ra.");
            }
        })
    }

    function isEmpty(value) {
        return value === "" ? true : false;
    }

    function datePickerFromToValidate(from, to) {
        if (!(from === "" || to === "")) {
            let date_from = Date.parse(formatDatePicker(from));
            let date_to = Date.parse(formatDatePicker(to));
            if (date_from > date_to) {
                return false;
            }
            return true;
        }
        return true;
    }

    function formatDatePicker(date) {
        return date.split('/')[2] + '/' + date.split('/')[1] + '/' + date.split('/')[0];
    }

    function clearContentAddModal() {
        //enable input and select
        $('#add_officer_email').prop('disabled', false);
        $("#add_officer_facility").prop('disabled', false);
        $('#add_officer_nation').prop('disabled', false);
        $('#add_officer_coop_scope').prop('disabled', false);

        //clear data
        ///THÔNG TIN CÁ NHÂN
        $('#add_officer_name').val(null).trigger('change');
        $('#add_officer_email').val('');
        $('#add_officer_facility').val(null).trigger('change');
        ///ĐƠN VỊ ĐÀO TẠO
        $('#add_officer_traning').val(null).trigger('change');
        $('#add_officer_nation').val(null).trigger('change');
        $('#add_officer_coop_scope').val(null).trigger('change');
        ///CHI TIẾT
        $('#add_officer_status').val(null).trigger('change');
        $('#add_officer_start_plan_date').val('');
        $('#add_officer_end_plan_date').val('');

        //clear upload file
        $('.uppy-list').html('');
        uppy1.removeFile(uppy1.getFiles()[0].id);

        $('#add_officer_start_date').val('');
        $('#add_officer_end_date').val('');
        $('#add_officer_support').prop('checked', false);
        $('#add_officer_note').val('');
    }

    @*3.EDIT MODAL*@
    var uppy2; //init uppy2
    $('#edit_officer').on('shown.bs.modal', function () {

    });

    </script>
    @*upload*@
    <script src="~/Content/assets/plugins/custom/uppy/uppy.bundle.js?v=7.0.6"></script>
    <script src="~/Scripts/Custom_JS/InternationalCollaboration/uppy.js"></script>
}