@{
    ViewBag.Title = "Danh sách biên bản ghi nhớ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/Custom_CSS/MOU/MOU.css" rel="stylesheet" />
<style>
    .swal2-container {
        z-index: 5000;
    }
    .mou_table th{
        font-size: 10px !important
    } 
    .mou_table td{
        font-size: 10px !important
    } 
    .mou_table td span{
        font-size: 10px !important
    } 
    .mou_table td a{
        font-size: 10px !important
    }

</style>

<div class="card card-custom collapse_tab_1" id="main-card">
    <div class="card-body p-0 ">
        <div class="row justify-content-center px-8 my-lg-5 px-lg-10">
            <div class="col-xl-12 col-xxl-12">
                <div class="tabbable-line">
                    <div class="tab-content" id="myTabContent">
                        <div class="row">
                            <div class="col-lg-9 col-xl-9 col-md-9 col-sm-9">
                                <div class="row align-items-center">
                                    <div class="col-lg-offset-3 col-md-offset-12 col-sm-offset-12 mr-3 my-3">
                                        <input type="text" class="form-control text-center" placeholder="Tên đối tác" id="search_partner_name" />
                                    </div>
                                    <div class="col-lg-offset-3 col-md-offset-12 col-sm-offset-12 mr-3 my-3">
                                        <input type="text" class="form-control text-center" placeholder="Tên người đại diện" id="search_contact_point_name" />
                                    </div>
                                    <div class="col-lg-offset-3 col-md-offset-12 col-sm-offset-12 mr-3 my-3">
                                        <input type="text" class="form-control text-center" placeholder="Số hiệu" id="search_mou_code" />
                                    </div>
                                    <div class="col-lg-offset-3 col-md-offset-12 col-sm-offset-12 my-3">
                                        <a href="javascript:" onclick="searchMOU()" class="btn btn-light-primary px-6 font-weight-bold float-right">Tìm kiếm</a>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-xl-3 col-md-3 col-sm-3">
                                <div class="row align-items-center justify-content-end">
                                    <div class="col-lg-offset-6 col-md-offset-6 col-sm-offset-6 my-3">
                                        <a href="#add_mou_modal" class="btn btn-light-primary px-6 font-weight-bold" data-toggle="modal">Thêm</a>
                                    </div>
                                    <div class="col-lg-offset-6 col-md-offset-6 col-sm-offset-6 my-3">
                                        <div class="dropdown dropdown-inline ml-2">
                                            <button type="button" class="btn btn-light-primary font-weight-bolder dropdown-toggle"
                                                    data-toggle="dropdown" aria-haspopup="true"
                                                    aria-expanded="false">
                                                Export
                                            </button>
                                            <!--begin::Dropdown Menu-->
                                            <div class="dropdown-menu dropdown-menu-sm dropdown-menu-right">
                                                <!--begin::Navigation-->
                                                <ul class="navi flex-column navi-hover py-2">
                                                    <li class="navi-header font-weight-bolder text-uppercase font-size-sm text-primary pb-2">
                                                        Choose an option:
                                                    </li>
                                                    <li class="navi-item">
                                                        <a href="javascript:" class="navi-link" onclick="exportExcel()">
                                                            <span class="navi-icon">
                                                                <i class="la la-file-excel-o"></i>
                                                            </span>
                                                            <span class="navi-text">Excel</span>
                                                        </a>
                                                    </li>
                                                </ul>
                                                <!--end::Navigation-->
                                            </div>
                                            <!--end::Dropdown Menu-->
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12">
                                <div class="row align-items-center justify-content-end">
                                    <a href="../MOU/List_Deleted" class="px-7">MOU đã xóa</a>
                                </div>
                            </div>
                        </div>
                        @{
                            Html.RenderPartial("PartialView/MOU/List_MOU_Table");
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@*modal for spe*@
@{
    Html.RenderPartial("PartialView/MOU/Manage_Spe");
}
@*modal for scopes*@
@{
    Html.RenderPartial("PartialView/MOU/Manage_Scopes");
}

@*modal add_mou*@
@{
    Html.RenderPartial("PartialView/MOU/Add_MOU");
}

@*modal add_partner_mou*@
@{
    Html.RenderPartial("PartialView/MOU/Add_Partner_MOU");
}

@*modal edit_partner_mou*@
@{
    Html.RenderPartial("PartialView/MOU/Edit_Partner_MOU");
}

@*toast alert*@
<div id="toast-container-custom" class="toast-bottom-left-custom">
    @*toastr notice inactive*@
    <div class="toast toast-warning toast-90" aria-live="assertive" style="display:none">
        <button type="button" class="toast-close-button" role="button">×</button>
        <div class="toast-message">
            Hiện có @ViewBag.noti.InactiveNumber biên bản ghi nhớ chưa hoạt động.
        </div>
    </div>

    @*toastr notice 90 days and 30 days left*@
    @foreach (string mou_code in ((List<string>)ViewBag.noti.ExpiredMOUCode))
    {
        <div class="toast toast-warning toast-30" aria-live="assertive" style="background-color: #f64e60; display:none">
            <button type="button" class="toast-close-button" role="button">×</button>
            <div class="toast-message">
                Hiện có biên bản @mou_code sắp hết hạn.
            </div>
        </div>
    }
</div>

@section scripts{
    <link href="~/Content/assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" />
    <script src="~/Content/assets/plugins/custom/datatables/datatables.bundle.js"></script>
    @*@model int*@

    @*toast*@

    <script>
        $(document).ready(function () {
            $('.select2-search__field').css('width', '100%');
        })
    </script>

    <script>
    $('.toast-close-button').click(function () {
            $(this).parent().fadeOut('slow');
        })

        $(document).ready(function () {
            var duration = @Html.Raw(Json.Encode(Model));
            if (duration < 90) {
                $('.toast-90').fadeIn('slow');
                $('.toast-30').fadeIn('slow');
            }
            if (duration < 30) {
                $('.toast-30').fadeIn('slow');
            }
        });
    </script>

    @*date-picker*@
    <script>
        var KTBootstrapDatetimepicker = function () {
            var baseDemos = function () {
                $('.kt_datetimepicker_3').datetimepicker({
                    format: 'DD/MM/yyyy'
                });
            }
            return {
                // Public functions
                init: function () {
                    baseDemos();
                }
            };
        }();

        jQuery(document).ready(function () {
            KTBootstrapDatetimepicker.init();
        });
    </script>

    <script>
        //overflow
        $(document).ready(function () {
            $('.header-modify').css('padding', '13px');

        });
    </script>

    @*custom_wizard*@
    <script>
        var list = document.getElementsByClassName("progressbar")[0];
        itemList = list.getElementsByTagName("li");

        var div_step1 = document.getElementById("step-1");
        var div_step2 = document.getElementById("step-2");
        var button_step1 = document.getElementById("step-1-button");
        var step1_close_btn = document.getElementById("step-1-close-btn");
        var button_step2 = document.getElementById("step-2-button");
        var backbutton_step2 = document.getElementById("step-2-backbutton");

        function toggleNextStep() {
            itemList[0].classList.remove("active");
            itemList[0].classList.add("done");
            itemList[1].classList.add("active");
            div_step1.style.display = "none";
            button_step1.style.display = "none";
            step1_close_btn.style.display = "none";
            div_step2.style.display = "block";
            button_step2.style.display = "block";
            backbutton_step2.style.display = "block";
        }

        function toggleBackStep() {
            itemList[0].classList.add("active");
            itemList[0].classList.remove("done");
            itemList[1].classList.remove("active");
            div_step1.style.display = "block";
            button_step1.style.display = "block";
            step1_close_btn.style.display = "block";
            div_step2.style.display = "none";
            button_step2.style.display = "none";
            backbutton_step2.style.display = "none";
        }
    </script>

    @*upload*@
    <script src="~/Content/assets/plugins/custom/uppy/uppy.bundle.js?v=7.0.6"></script>
    <script>
        "use strict";

        // Class definition
        var KTUppy = function () {
            const Tus = Uppy.Tus;
            const ProgressBar = Uppy.ProgressBar;
            const StatusBar = Uppy.StatusBar;
            const FileInput = Uppy.FileInput;
            const Informer = Uppy.Informer;

            // to get uppy companions working, please refer to the official documentation here: https://uppy.io/docs/companion/
            const Dashboard = Uppy.Dashboard;
            const Dropbox = Uppy.Dropbox;
            const GoogleDrive = Uppy.GoogleDrive;
            const Instagram = Uppy.Instagram;
            const Webcam = Uppy.Webcam;

            // Private functions

            var initUppy5 = function (id_input) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = id_input;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                var uppyMin = Uppy.Core({
                    debug: true,
                    autoProceed: true,
                    showProgressDetails: true,
                    restrictions: {
                        maxFileSize: 1000000, // 1mb
                        maxNumberOfFiles: 5,
                        minNumberOfFiles: 1
                    }
                });

                uppyMin.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyMin.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyMin.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyMin.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Attach files</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                uppyMin.on('upload', function (data) {
                    $fileLabel.text("Uploading...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                uppyMin.on('complete', function (file) {
                    $.each(file.successful, function (index, value) {
                        var sizeLabel = "bytes";
                        var filesize = value.size;
                        if (filesize > 1024) {
                            filesize = filesize / 1024;
                            sizeLabel = "kb";

                            if (filesize > 1024) {
                                filesize = filesize / 1024;
                                sizeLabel = "MB";
                            }
                        }
                        var uploadListHtml = '<div class="uppy-list-item" data-id="' + value.id + '"><div class="uppy-list-label">' + value.name + ' (' + Math.round(filesize, 2) + ' ' + sizeLabel + ')</div><span class="uppy-list-remove" data-id="' + value.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                        $uploadedList.append(uploadListHtml);
                    });

                    $fileLabel.text("Add more files");

                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');
                });

                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyMin.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                });
            }


            return {
                // public functions
                init: function (id_input) {
                    initUppy5(id_input);
                    setTimeout(function () {

                    }, 2000);
                }
            };
        }();

        KTUtil.ready(function () {
            KTUppy.init('mou_upload');
        });

    </script>

    @*custom select*@
    <script>
        $('#search_office').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#nation_add_select').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#status_mou').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#nation_edit_select').select2({
            placeholder: 'Chọn quốc gia',
            allowClear: false,
        });
        $('#partner_name_add').select2({
            placeholder: 'Chọn đối tác',
            allowClear: true,
            tags: true,
            ajax: {
                url: '/AcademicCollaboration/getPartners',
                delay: 250,
                cache: false,
                dataType: 'json',
                data: function (params) {
                    return {
                        partner_name: params.term
                    };
                },
                processResults: function (data) {
                    data.obj.map(function (obj) {
                        obj.id = obj.partner_name;
                        obj.text = obj.partner_name;
                        return data.obj;
                    });

                    return {
                        results: data.obj
                    };
                }
            },
            templateResult: formatPartnerInfo
        }).on("select2:select", function () { //after select partner
            //check partner
            checkPartnerAdd();
        }).on("select2:unselecting", function () {

        });

        $('#partner_name_edit').select2({
            placeholder: 'Chọn đối tác',
            allowClear: true,
            tags: true,
            ajax: {
                url: '/AcademicCollaboration/getPartners',
                delay: 250,
                cache: false,
                dataType: 'json',
                data: function (params) {
                    return {
                        partner_name: params.term
                    };
                },
                processResults: function (data) {
                    data.obj.map(function (obj) {
                        obj.id = obj.partner_name;
                        obj.text = obj.partner_name;
                        return data.obj;
                    });

                    return {
                        results: data.obj
                    };
                }
            },
            templateResult: formatPartnerInfo
        }).on("select2:select", function () { //after select partner
            //check partner
            checkPartnerEdit();
        }).on("select2:unselecting", function () {

        });

        function formatPartnerInfo(partner) {
            if (partner.id) {
                let partner_name = partner.partner_name;
                if (partner_name === undefined) {
                    return "Dữ liệu đối tác mới."
                } else {
                    return partner.partner_name;
                }
            }
        }
    </script>

    @*multi select*@
    <script>
        // Class definition
        var KTSelect2 = function () {
            // Private functions
            var demos = function () {
                // basic

                // multi select
                $('#specialization_add').select2({
                    placeholder: 'Chọn lĩnh vực',
                    allowClear: true,
                });
                $('#coop_scope_add').select2({
                    placeholder: 'Chọn phạm vi',
                    allowClear: true,
                    templateSelection: formatStateScope
                });
                $('#specialization_edit').select2({
                    placeholder: 'Chọn lĩnh vực',
                });
                $('#coop_scope_edit').select2({
                    placeholder: 'Chọn phạm vi',
                    allowClear: true,
                    templateSelection: formatStateScope
                });
            }
            // Public functions
            return {
                init: function () {
                    demos();
                }
            };
        }();

        // Initialization
        jQuery(document).ready(function () {
            KTSelect2.init();
        });
        function formatStateScope(state) {
            return state.text.split('-')[0];
        };
    </script>
    <script>
        $(document).ready(function () {
            $('.select2-search__field').css('width', '100%');
        })
    </script>

    @*general*@
<script>
    var listTempPartnerMOUAdd = [];
    var listScopes = [];
    var listSpe = [];
    var listPartners = [];
    var mou_table;

    $(document).ready(function () {
            getSpeListForAdd();
            getScopeListForAdd();
            getMOUList();
            getSpe();
            getScopes();
        });

    function backToStep() {
            updateMOUStartDateAndMainScope();
            toggleBackStep();
        }

    function nextStep() {
            toggleNextStep();
    }

    function updateMOUStartDateAndMainScope() {
            var max_date = '01/01/0001';
            var main_scopes = '';
            var new_main_scopes = '';
            for (idx = 0; idx < listTempPartnerMOUAdd.length; idx++) {
                var current = listTempPartnerMOUAdd[idx].sign_date_mou_add;
                if (compareDate(current, max_date)) { //compare == true <=> current > max_date
                    max_date = current;
                }
                main_scopes += (listTempPartnerMOUAdd[idx].coop_scope_add + ",");
            }

            //remove last element.
            if (main_scopes.endsWith(",")) {
                main_scopes = main_scopes.slice(0, -1);
            }

            var token = main_scopes.split(",");
            token.sort();

            //add to new_main_scopes
            var prev = null;
            for (j = 0; j < token.length; j++) {
                if (token[j] != prev) {
                    prev = token[j];
                    var obj = listScopes.find(x => x.scope_id == prev);
                    if (obj != null) {
                        new_main_scopes += (obj.scope_name + ",");
                    }
                }
            }
            //remove last element of new list
            if (new_main_scopes.endsWith(",")) {
                new_main_scopes = new_main_scopes.slice(0, -1);
            }

            if (max_date == '01/01/0001') {
                max_date = '';
            }

            $("#sign_date_mou").val(max_date);
            $("#coop_scope_mou").val(new_main_scopes);
        }

    function compareDate(current, max) {
            var currentToken = current.split("/");
            var maxToken = max.split("/");
            if (parseInt(currentToken[2]) == parseInt(maxToken[2])) {    //year
                if (parseInt(currentToken[1]) == parseInt(maxToken[1])) {   //month
                    return parseInt(currentToken[0]) <= parseInt(maxToken[0]) ? false : true;   //date.
                } else {
                    return parseInt(currentToken[1]) < parseInt(maxToken[1]) ? false : true;
                }
            } else {
                return parseInt(currentToken[2]) < parseInt(maxToken[2]) ? false : true;
            }
        }

    @*add-mou-general*@

    function MOUCodeIsInvalid(mou_code) {
        var token = mou_code.split("/");
        if (token.length == 2 && /^\d+$/.test(token[0]) && /^\d+$/.test(token[1])) {
            return false;
        } else {
            return true;
        }
    }

    function checkMOUCodeDuplicated(){
            var obj =
            {
                mou_code: $('#mou_code_add').val()
            };
            $.ajax({
                url: "@Url.Action("CheckDuplicatedMOUCode", "MOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (isDuplicated) {
                    if (isDuplicated) {
                        add_mou_loader.stopLoading();
                        toastr.error("Đã có mã hiệu " + $('#mou_code_add').val()+ " trong hệ thống");
                    } else {
                        checkIntersectPeriodMOUDate();
                    }
                },
                error: function () {

                }
            });
    }

    function checkIntersectPeriodMOUDate(){
            var obj =
            {
                PartnerInfo: listTempPartnerMOUAdd,
                start_date: $('#sign_date_mou').val(),
                end_date: $('#end_date_mou').val(),
                office_id: $('#search_office').val()
            };
            $.ajax({
                url: "@Url.Action("checkIntersectPeriodMOUDate", "MOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data.mou_id != 0) {
                        add_mou_loader.stopLoading();
                        toastr.error("Các đối tác trên đã ký kết từ ngày " + data.mou_start_date_string + " đến ngày " + data.mou_end_date_string + " ở biên bản " + data.mou_code);
                    } else {
                        addMOU();
                    }
                },
                error: function () {

                }
            });
    }

    function initAndRefreshTableMOUAdd() {
        resetTable();
        initTable();
    }

    function initTable() {
        var HTMLdata = null;
        for (idx = 0; idx < listTempPartnerMOUAdd.length; idx++) {
            HTMLdata += '<tr id="temp' + idx + '" "class="MOUPartnerTempList">';
            HTMLdata += '<td class="text-center align-middle">' + (idx + 1) + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOUAdd[idx].partnername_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOUAdd[idx].represent_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOUAdd[idx].phone_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOUAdd[idx].email_add + '</td>';
            var buttonEdit = '<a onclick="loadEditTemp(' + idx + ')" href="#edit_partner_mou" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
            var buttonDel = '<a onclick="confirm_delete_temp(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
            HTMLdata += '<td class="text-center align-middle text-nowrap">' + buttonEdit + buttonDel + '</td>';
            HTMLdata += '</tr>';
        }
        $('#mou-partner-table').append(HTMLdata);
    }

    function resetTable() {
        for (idx = 0; idx < listTempPartnerMOUAdd.length; idx++) {
            $("#temp" + idx).remove();
        }
    }

    function confirm_delete_temp(index) {
        Swal.fire({
            title: "Xác nhận xóa?",
            text: "Dữ liệu sẽ bị xóa!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Đóng",
            reverseButtons: true
        }).then(function (result) {
            if (result.isConfirmed) {
                resetTable();
                listTempPartnerMOUAdd.splice(index, 1);
                initTable();
            }
        })
    }

    var add_mou_loader;
    function doneStep(element) {
        add_mou_loader = new LoaderBtn(element);
        //start display loading:
        add_mou_loader.startLoading();
        if ($('#mou_code_add').val().trim() == "") {
            add_mou_loader.stopLoading();
            toastr.error('Số hiệu không được bỏ trống');
        }
        else if ($('#end_date_mou').val() == "") {
            add_mou_loader.stopLoading();
            toastr.error('Ngày hết hạn chưa được chọn');
        }
        else if ($('#search_office').val() == null) {
            add_mou_loader.stopLoading();
            toastr.error('Cơ sở chưa được chọn');
        }
        else if (listTempPartnerMOUAdd.length == 0) {
            add_mou_loader.stopLoading();
            toastr.error('Chưa có đối tác nào được thêm');
        }
        else if (compareDate($('#sign_date_mou').val(), $('#end_date_mou').val())) { //compare = true <=> sign_date > end_date
            add_mou_loader.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
        }
        else if (MOUCodeIsInvalid($('#mou_code_add').val().trim())) {
            add_mou_loader.stopLoading();
            toastr.error('Số hiệu không hợp lệ');
        }
        else {
            checkMOUCodeDuplicated();
        }
    }

    function addMOU() {
            //collect basicInfo data.
            var BasicInfo = {
                mou_code: $('#mou_code_add').val() ,
                mou_end_date: $('#end_date_mou').val(),
                office_id: $('#search_office').val(),
                mou_status_id: $('#status_mou').val(),
                reason: $('#note_mou').val(),
                mou_note: $('#mou_area').val()
            };

            var MOUAdd = {
                BasicInfo: BasicInfo,
                PartnerInfo: listTempPartnerMOUAdd,
            };
            $.ajax({
                url: "@Url.Action("Add_Mou", "MOU")",
                type: "POST",
                data: JSON.stringify(MOUAdd),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    add_mou_loader.stopLoading();
                    mou_table.ajax.reload();
                    Swal.fire("Thành công!", "Đã thêm biên bản ghi nhớ thành công.", "success");
                    $('#add_mou_modal').modal('hide');
                    resetTable();
                    listTempPartnerMOUAdd = [];
                    $('#note_mou').val('');
                    $('#mou_area').val('');
                },
                error: function () {
                    Swal.fire("Lỗi!", "Đã xảy ra lỗi", "error");
                }
            });
        }

    @*add-partner-for-add-mou*@

    function getSpeListForAdd() {
                $("#specialization_add option").each(function () {
                    listSpe.push({
                        spe_id: $(this).val(),
                        spe_name: $(this).text()
                    });
                });
            }

    function getScopeListForAdd() {
                $("#coop_scope_add option").each(function () {
                    listScopes.push({
                        scope_id: $(this).val(),
                        scope_name: $(this).text()
                    });
                });
            }

    function checkPartnerAdd() {
            var partner_name = $('#partner_name_add').val();
                var em = { partner_name: partner_name };
                $.ajax({
                    url: "@Url.Action("CheckPartner", "MOU")",
                    type: "POST",
                    data: JSON.stringify(em),
                    contentType: "application/json;charset=utf-8",
                    datatype: "json",
                    success: function (data) {
                        if (data == "") {
                            //set value
                            document.getElementById("website_add").value = "";
                            document.getElementById("address_add").value = "";
                            document.getElementById("partner_id_add").value = "";
                            $('#nation_add_input').val('');

                            //toggle
                            document.getElementById('website_add').removeAttribute('disabled');
                            document.getElementById('address_add').removeAttribute('disabled');
                            document.getElementById('nation_add_select').removeAttribute('hidden');
                            $('#nation_add_select').select2({
                                placeholder: 'Chọn quốc gia',
                                allowClear: false,
                            });
                            document.getElementById('nation_add_input').setAttribute('hidden', '');
                        } else {
                            //toggle
                            $("#nation_add_select").val('').trigger("change");
                            document.getElementById('nation_add_input').removeAttribute('hidden');
                            $('#nation_add_select').select2({
                                placeholder: 'Chọn quốc gia',
                                allowClear: false,
                            });
                            $('#nation_add_select').select2('destroy');
                            $("#nation_add_select").attr("hidden", true);
                            document.getElementById('website_add').setAttribute('disabled', '');
                            document.getElementById('address_add').setAttribute('disabled', '');

                            //set value
                            document.getElementById("nation_add_input").value = data.country_name == null ? "" : data.country_name;
                            document.getElementById("website_add").value = data.website == null ? "" : data.website;
                            document.getElementById("address_add").value = data.address == null ? "" : data.address;
                            document.getElementById("partner_id_add").value = data.partner_id == null ? "" : data.partner_id;

                        }
                        document.getElementById("add_mou_partner_button").removeAttribute('disabled');
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
            }

    function preventAdd() {
                document.getElementById("add_mou_partner_button").setAttribute('disabled', '');
            }

    function addToTemp() {
                if ($('#partner_name_add').val().trim() == '') {
                    toastr.error('Đối tác chưa được chọn');
                    return;
                }
                else if ($('#sign_date_mou_add').val().trim() == '') {
                    toastr.error('Ngày ký kết chưa được chọn');
                    return;
                }
                else if ($('#specialization_add').val().length == 0) {
                    toastr.error('Lĩnh vực chưa được chọn');
                    return;
                }
                else if ($('#coop_scope_add').val().length == 0) {
                    toastr.error('Phạm vi hợp tác chưa được chọn');
                    return;
                }
                else {
                    ContentAddedIsDuplicated($('#sign_date_mou_add').val(), $('#partner_name_add').val());
                }
            }

    function CheckTempAdded(partnername_add) {
                var objCheck = listTempPartnerMOUAdd.find(x => x.partnername_add == partnername_add);
                if (objCheck == null) {
                    var TempObj = {
                        partnername_add: partnername_add,
                        represent_add: document.getElementById("represent_add").value,
                        specialization_add: $("#specialization_add").val(),
                        nation_add: $('#nation_add_select').val(),
                        website_add: document.getElementById("website_add").value,
                        address_add: document.getElementById("address_add").value,
                        email_add: document.getElementById("email_add").value,
                        sign_date_mou_add: document.getElementById("sign_date_mou_add").value,
                        phone_add: document.getElementById("phone_add").value,
                        coop_scope_add: $("#coop_scope_add").val(),
                        partner_id: document.getElementById("partner_id_add").value,
                        nation_name: $("#nation_add_select option:selected").text(),
                        nation_name_input: $("#nation_add_input").val()
                    }
                    listTempPartnerMOUAdd.push(TempObj);
                    updateMOUStartDateAndMainScope();
                    clearInputAdd();
                    initAndRefreshTableMOUAdd();
                    $('#add_partner_mou').modal('hide');
                } else {
                    toastr.error('Đối tác này đã được thêm');
                }
            }

    function ContentAddedIsDuplicated(start_date_string,partner_name) {
                var obj =
                {
                    mou_start_date_string: start_date_string,
                    partner_name: partner_name
                };
                $.ajax({
                    url: "@Url.Action("CheckDuplicatedPartnerInfo", "MOU")",
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(obj),
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        if (data != "") {
                            toastr.error("Thông tin ký kết đối tác " + partner_name + " đã có trong biên bản " + data.mou_code + " được tạo bởi "+ data.full_name+".");
                        } else {
                            CheckTempAdded(partner_name);
                        }
                    },
                    error: function () {

                    }
                });
            }

    function clearInputAdd() {
                var HTMLSpedata = '';
                var HTMLScopedata = '';
                $('#specialization_add').empty();
                $('#coop_scope_add').empty();
                $("#partner_name_add").val('').trigger("change");
                $('#represent_add').val('');
                $('#nation_add_select').val('');
                $('#nation_add_input').val('');
                $('#website_add').val('');
                $('#address_add').val('');
                $('#email_add').val('');
                $('#sign_date_mou_add').val('');
                $('#phone_add').val('');

                for (i = 0; i < listSpe.length; i++) {
                    HTMLSpedata += '<option value = "' + listSpe[i].spe_id + '" >' + listSpe[i].spe_name + '</option>'
                }
                for (j = 0; j < listScopes.length; j++) {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_name + '</option>'
                }
                $('#nation_add_select').select2({
                    placeholder: 'Chọn quốc gia',
                    allowClear: false,
                });
                document.getElementById('nation_add_select').removeAttribute('disabled');
                document.getElementById('nation_add_input').setAttribute('hidden','');
                document.getElementById('website_add').removeAttribute('disabled');
                document.getElementById('address_add').removeAttribute('disabled');
                document.getElementById("add_mou_partner_button").setAttribute('disabled', '');
                $('#specialization_add').append(HTMLSpedata);
                $('#coop_scope_add').append(HTMLScopedata);
            }


    @*edit-partner-for-add-mou*@

    function loadEditTemp(index) {
            $("#idx_edit").val(index);
            var HTMLSpedata = "";
            var HTMLScopedata = "";
            $('#specialization_edit').empty();
            $('#coop_scope_edit').empty();
            for (i = 0; i < listSpe.length; i++) {
                if ((listTempPartnerMOUAdd[index].specialization_add + '').includes(listSpe[i].spe_id)) {
                    HTMLSpedata += '<option value = "' + listSpe[i].spe_id + '" selected>' + listSpe[i].spe_name + '</option>'

                } else {
                    HTMLSpedata += '<option value = "' + listSpe[i].spe_id + '" >' + listSpe[i].spe_name + '</option>'
                }
            }
            for (j = 0; j < listScopes.length; j++) {
                if (listTempPartnerMOUAdd[index].coop_scope_add.includes(listScopes[j].scope_id)) {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '" selected>' + listScopes[j].scope_name + '</option>'
                } else {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_name + '</option>'
                }
            }
            $('#specialization_edit').append(HTMLSpedata);
            $('#coop_scope_edit').append(HTMLScopedata);

            //load data of partner_name
            var partner_name = listTempPartnerMOUAdd[index].partnername_add;
            var option = new Option(partner_name, partner_name, true, true);
            $('#partner_name_edit').append(option).trigger('change');

            $('#represent_edit').val(listTempPartnerMOUAdd[index].represent_add);
            if (listTempPartnerMOUAdd[index].nation_add != "") {
                document.getElementById('nation_edit_input').setAttribute('hidden', '');
                var nation_name = listTempPartnerMOUAdd[index].nation_name;
                var nation_id = listTempPartnerMOUAdd[index].nation_add;
                var optionNation = new Option(nation_name, nation_id, true, true);
                $('#nation_edit_select').append(optionNation).trigger('change');
            } else {
                $("#nation_edit_select").val('').trigger("change");
                $('#nation_edit_select').select2('destroy');
                $("#nation_edit_select").attr("hidden", true);
                document.getElementById('nation_edit_input').setAttribute('disabled', '');
                $("#nation_edit_input").val(listTempPartnerMOUAdd[index].nation_name_input);
            }

            $('#website_edit').val(listTempPartnerMOUAdd[index].website_add);
            $('#address_edit').val(listTempPartnerMOUAdd[index].address_add);
            $('#email_edit').val(listTempPartnerMOUAdd[index].email_add);
            $('#sign_date_mou_edit').val(listTempPartnerMOUAdd[index].sign_date_mou_add);
            $('#phone_edit').val(listTempPartnerMOUAdd[index].phone_add);
            $('#partner_id_edit').val(listTempPartnerMOUAdd[index].partner_id);

            if (listTempPartnerMOUAdd[index].partner_id == "") {
                document.getElementById('website_edit').removeAttribute('disabled');
                document.getElementById('address_edit').removeAttribute('disabled');
            } else {
                document.getElementById('website_edit').setAttribute('disabled', '');
                document.getElementById('address_edit').setAttribute('disabled', '');

            }
        }

    function checkPartnerEdit() {
            var partner_name = $('#partner_name_edit').val();
            var em = { partner_name: partner_name };
            $.ajax({
                url: "@Url.Action("CheckPartner", "MOU")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data == "") {
                        document.getElementById('nation_edit_select').removeAttribute('hidden');
                        $('#nation_edit_select').select2({
                            placeholder: 'Chọn quốc gia',
                            allowClear: false,
                        });
                        document.getElementById('nation_edit_input').setAttribute('hidden', '');
                        $('#nation_edit_input').val('');

                        document.getElementById('website_edit').removeAttribute('disabled');
                        document.getElementById('address_edit').removeAttribute('disabled');
                        document.getElementById("website_edit").value = "";
                        document.getElementById("address_edit").value = "";
                        document.getElementById("partner_id_edit").value = "";
                    } else {
                        $("#nation_edit_select").val('').trigger("change");
                        document.getElementById('nation_edit_input').removeAttribute('hidden');
                        $('#nation_edit_select').select2({
                            placeholder: 'Chọn quốc gia',
                            allowClear: false,
                        });
                        $('#nation_edit_select').select2('destroy');
                        $("#nation_edit_select").attr("hidden", true);

                        document.getElementById('website_edit').setAttribute('disabled', '');
                        document.getElementById('address_edit').setAttribute('disabled', '');
                        document.getElementById("website_edit").value = data.website == null ? "" : data.website;
                        document.getElementById("address_edit").value = data.address == null ? "" : data.address;
                        document.getElementById("partner_id_edit").value = data.partner_id == null ? "" : data.partner_id;
                    }
                    document.getElementById("edit_mou_partner_button").removeAttribute('disabled');
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

    function preventEdit() {
            document.getElementById("edit_mou_partner_button").setAttribute('disabled', '');
        }

    function editTemp() {
            if ($('#partner_name_edit').val().trim() == '') {
                toastr.error('Đối tác chưa được chọn');
                return;
            }
            else if ($('#sign_date_mou_edit').val().trim() == '') {
                toastr.error('Ngày ký kết chưa được chọn');
                return;
            }
            else if ($('#specialization_edit').val().length == 0) {
                toastr.error('Lĩnh vực chưa được chọn');
                return;
            }
            else if ($('#coop_scope_edit').val().length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            else {
                ContentEditedIsDuplicated($('#sign_date_mou_edit').val(), $('#partner_name_edit').val());
            }
        }

    function ContentEditedIsDuplicated(start_date_string,partner_name) {
                var obj =
                {
                    mou_start_date_string: start_date_string,
                    partner_name: partner_name
                };
                $.ajax({
                    url: "@Url.Action("CheckDuplicatedPartnerInfo", "MOU")",
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(obj),
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        if (data != "") {
                            toastr.error("Thông tin ký kết đối tác " + partner_name + " đã có trong biên bản " + data + ".");
                        } else {
                            CheckTempEdited(partner_name);
                        }
                    },
                    error: function () {

                    }
                });
            }

    function CheckTempEdited(partnername_edit) {
            var index = $("#idx_edit").val();
            for (i = 0; i < listTempPartnerMOUAdd.length; i++) {
                if (i != index) {
                    if (listTempPartnerMOUAdd[i].partnername_add == partnername_edit) {
                        toastr.error('Đối tác này đã được thêm');
                        return;
                    }
                }
            }
            listTempPartnerMOUAdd[index].partnername_add = document.getElementById("partner_name_edit").value;
            listTempPartnerMOUAdd[index].represent_add = document.getElementById("represent_edit").value;
            listTempPartnerMOUAdd[index].specialization_add = $("#specialization_edit").val();
            listTempPartnerMOUAdd[index].nation_add = $('#nation_edit_select').val();
            listTempPartnerMOUAdd[index].nation_name = $("#nation_edit_select option:selected").text();
            listTempPartnerMOUAdd[index].nation_name_input = $("#nation_edit_input").val();
            listTempPartnerMOUAdd[index].website_add = document.getElementById("website_edit").value;
            listTempPartnerMOUAdd[index].address_add = document.getElementById("address_edit").value;
            listTempPartnerMOUAdd[index].email_add = document.getElementById("email_edit").value;
            listTempPartnerMOUAdd[index].sign_date_mou_add = document.getElementById("sign_date_mou_edit").value;
            listTempPartnerMOUAdd[index].phone_add = document.getElementById("phone_edit").value;
            listTempPartnerMOUAdd[index].coop_scope_add = $("#coop_scope_edit").val();
            listTempPartnerMOUAdd[index].partner_id = document.getElementById("partner_id_edit").value;
            initAndRefreshTableMOUAdd();
            $('#edit_partner_mou').modal('hide');
        }

    @*mou-list*@
    function getMOUList() {
        mou_table = $(".mou_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            pageLength: 5,
            lengthChange: false,
            serverSide: true,
            initComplete: function () {
                $(this).parent().css('overflow-x', 'auto');
                $(this).parent().css('width', '100%');
                $(this).parent().css('padding', '0');
                $('.mou_table th').css('padding', '5px 15px 5px 5px')
                $('.mou_table > thead > tr:nth-child(1) > th:nth-child(3)').css('padding', '5px')
                $('.mou_table > thead > tr:nth-child(1) > th:nth-child(4)').css('padding', '5px')
                $('.mou_table > thead > tr:nth-child(1) >th.text-center.text-nowrap.sorting_disabled').css('padding', '5px')
            },
            ajax: {
                url: "@Url.Action("ViewMOU", "MOU")",
                type: "POST",
                datatype: "json",
                data: {
                    "partner_name": function () { return $('#search_partner_name').val() },
                    "contact_point_name": function () { return $('#search_contact_point_name').val() },
                    "mou_code": function () { return $('#search_mou_code').val() },
                },
                cache: "false"
            },
            columns: [
                {
                    data: "RowNumber",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center', },
                {
                    data: "mou_code", name: "mou_code",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center', },
                {
                    data: "partner_name",
                    name: "partner_name",
                    width: '200px',
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "country_name",
                    name: "country_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "website",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none"><path d="M13.544 10.456a4.368 4.368 0 0 0-6.176 0l-3.089 3.088a4.367 4.367 0 1 0 6.177 6.177L12 18.177m-1.544-4.633a4.368 4.368 0 0 0 6.177 0l3.088-3.088a4.368 4.368 0 0 0-6.177-6.177L12 5.823" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></g></svg><!--end::Svg Icon--></span></a>';
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "specialization_name", name: "specialization_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap', },
                {
                    data: "contact_point_name", name: "contact_point_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap', },
                {
                    data: "contact_point_email", name: "contact_point_email",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap',
                },
                {
                    data: "contact_point_phone", name: "contact_point_phone",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap',
                },
                {
                    data: "evidence",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M7.71 3.5L1.15 15l3.43 6l6.55-11.5M9.73 15L6.3 21h13.12l3.43-6m-.57-1L15.42 2H8.57l6.86 12h6.85z" fill="#626262"/></svg><!--end::Svg Icon--></span></a>';
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "mou_start_date_string", name: "mou_start_date",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center', },
                {
                    data: "mou_end_date_string", name: "mou_end_date",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center', },
                {
                    data: "office_abbreviation", name: "office_abbreviation",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center', },
                {
                    data: "scope_abbreviation",
                    name: "scope_abbreviation",
                    render: function (data) {
                        data = data.replaceAll(',', ', ')
                        return data
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "mou_status_id",
                    width: '150px',
                    render: function (data) {
                        var status = {
                            2: {
                                'title': 'Inactive',
                                'class': 'label-light-danger'
                            },
                            1: {
                                'title': 'Active',
                                'class': 'label-light-success'
                            }
                        };
                        if (typeof status[data] === 'undefined') {
                            return data;
                        }
                        return '<span class="label label-lg font-weight-bold ' + status[data].class + ' label-inline">' + status[data].title + '</span> ';
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    title: 'Hành động',
                    data: "mou_id",
                    orderable: false,
                    width: '125px',
                    render: function (data) {
                        return '<a onclick=goDetail(' + data + ','+ 'this'+') class="load-btn btn btn-sm btn-light-primary font-weight-bold px-6" style="margin-right: 10px;">Sửa</a>' +
                            '<a onclick="confirm_delete(' + data + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '5px')
                    },
                    className: 'text-center text-nowrap',
                },
        ],
        columnDefs: [
            //{
            //    className: "text-center",
            //    targets: [0, 4, 9, 12, 13, 14],
            //},
            //{
            //    className: "text-nowrap",
            //    targets: [5, 6, 8, -1]
            //},
        ],
        });
        $('thead > tr:nth-child(2) > th:nth-child(1)').css({ 'min-width': '300px', 'max-width': '300px' });
    }

    function searchMOU() {
        mou_table.ajax.reload();
    }

    @*another-function*@
    function exportExcel() {
        $.ajax({
            url: "@Url.Action("ExportMOUExcel", "MOU")",
            type: "POST",
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            cache: false,
            success: function (data) {
                window.location = '../MOU/' + 'Download?fileGuid=' + data.data.FileGuid
                    + '&filename=' + data.data.FileName;
            },
            error: function () {
            }
        });
    }

    function goDetail(mou_id, element) {
        var mou_detail_loader = new LoaderBtn(element);
        mou_detail_loader.startLoading();
        var id = { id: mou_id };
        $.ajax({
            url: "@Url.Action("PassDataToMOUDetail", "BasicInfoMOU")",
            type: "POST",
            contentType: "application/json;charset=utf-8",
            data: JSON.stringify(id),
            datatype: "json",
            cache: false,
            success: function (data) {
                window.location.href = './Detail';
                mou_detail_loader.stopLoading();
            },
            error: function () {

            }
        });
    }

    function confirm_delete(id) {
        //function confirm_delete(id, action, controller) {
            var link = '@Url.Action("Delete_MOU", "MOU")'
            Swal.fire({
                title: "Xác nhận xóa?",
                text: "Toàn bộ dữ liệu trong biên bản ghi nhớ sẽ bị xóa và không thể khôi phục!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        data: { mou_id : id },
                        success: function (data) {
                            if (data = "") {
                                //Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                Swal.fire("Thành công", "Biên bản ghi nhớ đã được xóa", "success");
                                mou_table.ajax.reload();
                            }
                        },
                        error: function (data) {
                            //Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
        };

    //spe
    var spe_table;
    function getSpe() {
        spe_table = $("#spe_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "_START_ đến _END_ của _TOTAL_ bản ghi"
            },
            searching: false,
            lengthChange: false,
            serverSide: true,
            pageLength: 3,
            ajax: {
                url: "@Url.Action("listSpecializations", "Specialization")",
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                cache: "false"
            },
            columns: [
                { data: "specialization_name", name: "specialization_name" },
                {
                    data: "specialization_id",
                    orderable: false,
                    render: function (data) {
                        return '<a onclick="loadSpe('+ data +')" href="#edit_spe" class="btn btn-sm btn-light-primary px-6 font-weight-bold mr-2" data-toggle="modal">Sửa</a>' +
                            '<a onclick="deleteSpe('+ data +')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    }
                }
            ]
            ,
            columnDefs: [
                {
                    className: "text-center",
                    targets: "_all"
                },
                {
                    className: "text-nowrap",
                    targets: [-1]
                }
            ]
        });
    }

    function deleteSpe(spe_id) {
            Swal.fire({
                title: "Xác nhận xóa",
                text: "Xóa nội dung này?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xác nhận",
                cancelButtonText: "Hủy",
                reverseButtons: true,
            }).then(function (result) {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("deleteSpecialization", "Specialization")",
                        type: "POST",
                        data: {
                            spe_id: spe_id
                        },
                        dataType: "json",
                        success: function (data) {
                            if (data.success == true) {
                                toastr.success(data.content);
                                //refresh spe
                                refreshSpeList();
                            } else {
                                toastr.error(data.content);
                            }
                            spe_table.ajax.reload();
                        },
                        error: function (data) {
                            toastr.error(data.content);
                            spe_table.ajax.reload();
                        }
                    });
                }
            });
    }

    $("#add_spe_modal_confirm").click(function () {
            $.ajax({
                url: "@Url.Action("addSpecialization", "Specialization")",
                type: "POST",
                data: {
                    spe_name: $("#spe_name_add").val()
                },
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        //clear content
                        $("#spe_name_add").val("");
                        //close modal
                        $("#add_spe").modal('hide');
                        toastr.success(data.content);
                        //refresh spe
                        refreshSpeList();
                    } else {
                        toastr.error(data.content);
                    }
                    //reload datatable
                    spe_table.ajax.reload();
                },
                error: function () {
                    toastr.error(data.content);
                    spe_table.ajax.reload();
                }
            });
    });

    var spe_id_temp;

    function loadSpe(spe_id) {
            spe_id_temp = spe_id;
            $.ajax({
                url: "@Url.Action("getSpecialization", "Specialization")",
                type: "POST",
                data: {
                    spe_id: spe_id
                },
                cache: false,
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        $("#spe_name_edit").val(data.obj.specialization_name);
                    } else {
                        toastr.error(data.content);
                    }
                },
                error: function (data) {
                    toastr.error(data.content);
                    spe_table.ajax.reload();
                }
            });
    }

    $("#edit_spe_modal_confirm").click(function () {
            $.ajax({
                url: "@Url.Action("editSpecialization", "Specialization")",
                type: "POST",
                data: {
                    spe_id: spe_id_temp,
                    spe_name: $("#spe_name_edit").val()
                },
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        //clear content
                        $("#spe_name_edit").val("");
                        //close modal
                        $("#edit_spe").modal('hide');
                        toastr.success(data.content);
                        //refresh spe
                        refreshSpeList();
                    } else {
                        toastr.error(data.content);
                    }
                    //reload datatable
                    spe_table.ajax.reload();
                },
                error: function (data) {
                    toastr.error(data.content);
                    spe_table.ajax.reload();
                }
            });
    });

    //scopes
    var scope_table;
    function getScopes() {
        scope_table = $("#collaboration_scope_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi"
            },
            searching: false,
            lengthChange: false,
            serverSide: true,
            pageLength: 3,
            ajax: {
                url: "@Url.Action("listCollaborationScope", "CollaborationScope")",
                type: "GET",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                cache: "false"
            },
            columns: [
                { data: "scope_name", name: "scope_name" },
                { data: "scope_abbreviation", name: "scope_abbreviation" },
                {
                    data: "scope_id",
                    width: '100px',
                    orderable: false,
                    render: function (data) {
                        return '<a onclick="loadDataToEditModal(' + data +')" href="#edit_scopes" class="btn btn-sm btn-light-primary px-6 font-weight-bold mr-2" data-toggle="modal">Sửa</a>' +
                            '<a onclick="deleteCollaborationScope('+ data +')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    }
                }
            ],
            columnDefs: [
                {
                    className: "text-center",
                    targets: "_all"
                },
                {
                    className: "text-nowrap",
                    targets: [-1]
                }
            ]
        });
    }

    $("#add_modal_confirm").click(function () {
            $.ajax({
                url: "@Url.Action("addCollaborationScope", "CollaborationScope")",
                type: "POST",
                data: {
                    scope_name: $("#add_modal_scope_name").val(),
                    scope_abbreviation: $("#add_modal_scope_abbreviation").val()
                },
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        toastr.success(data.content);
                        //clear content
                        $("#add_modal_scope_name").val("");
                        $("#add_modal_scope_abbreviation").val("");
                        //close modal
                        $("#add_modal_close").click();
                        //refresh scope list
                        refreshScopeList();
                    } else {
                        toastr.error(data.content);
                    }
                    //reload datatable
                    scope_table.ajax.reload();
                },
                error: function () {
                    toastr.error(data.content);
                    scope_table.ajax.reload();
                }
            });
        });

    //loading data to modal
    var scope_id_temp;
    function loadDataToEditModal(scope_id) {
            scope_id_temp = scope_id;
            $.ajax({
                url: "@Url.Action("getCollaborationScope", "CollaborationScope")",
                type: "POST",
                data: {
                    scope_id: scope_id
                },
                cache: false,
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        $("#edit_modal_scope_name").val(data.obj.scope_name);
                        $("#edit_modal_scope_abbreviation").val(data.obj.scope_abbreviation);
                    } else {
                        toastr.error(data.content);
                    }
                },
                error: function (data) {
                    toastr.error(data.content);
                    scope_table.ajax.reload();
                }
            });
        }

    //confirm edit
    $("#edit_modal_confirm").click(function () {
            $.ajax({
                url: "@Url.Action("editCollaborationScope", "CollaborationScope")",
                type: "POST",
                data: {
                    scope_id: scope_id_temp,
                    scope_name: $("#edit_modal_scope_name").val(),
                    scope_abbreviation: $("#edit_modal_scope_abbreviation").val()
                },
                dataType: "json",
                success: function (data) {
                    if (data.success == true) {
                        toastr.success(data.content);
                        //clear content
                        $("#edit_modal_scope_name").val("");
                        $("#edit_modal_scope_abbreviation").val("");
                        //close modal
                        $("#edit_modal_close").click();
                        //refresh scopes list
                        refreshScopeList();
                    } else {
                        toastr.error(data.content);
                    }
                    //reload datatable
                    scope_table.ajax.reload();
                },
                error: function (data) {
                    toastr.error(data.content);
                    scope_table.ajax.reload();
                }
            });
    });

    function refreshScopeList() {
        $.ajax({
                url: "@Url.Action("listCollaborationScopeUpdated", "CollaborationScope")",
                type: "POST",
                dataType: "json",
                success: function (data) {
                $('#coop_scope_add').empty();
                $('#coop_scope_edit').empty();
                    var HTMLScopedata = '';
                    listScopes = [];
                    for (i = 0; i < data.length; i++) {
                        var obj = { scope_id: data[i].scope_id, scope_name: data[i].scope_abbreviation }
                        listScopes.push(obj);
                        HTMLScopedata += '<option value = "' + data[i].scope_id + '" >' + data[i].scope_abbreviation + '</option>'
                    }
                    $('#coop_scope_add').append(HTMLScopedata);
                    $('#coop_scope_edit').append(HTMLScopedata);
                },
                error: function () {
                    toastr.error(data.content);
                }
        });
    }

    function refreshSpeList() {
        $.ajax({
                url: "@Url.Action("listSpecializationsUpdated", "Specialization")",
                type: "POST",
                dataType: "json",
                success: function (data) {
                $('#specialization_add').empty();
                $('#specialization_edit').empty();
                    var HTMLSpedata = '';
                    listSpe = [];
                    for (i = 0; i < data.length; i++) {
                        var obj = { spe_id: data[i].specialization_id, spe_name: data[i].specialization_name }
                        listSpe.push(obj);
                        HTMLSpedata += '<option value = "' + data[i].specialization_id + '" >' + data[i].specialization_name + '</option>'
                    }
                    $('#specialization_add').append(HTMLSpedata);
                    $('#specialization_edit').append(HTMLSpedata);
                },
                error: function () {
                    toastr.error(data.content);
                }
        });
    }

    function deleteCollaborationScope(scope_id) {
            Swal.fire({
                title: "Xác nhận xóa",
                text: "Xóa nội dung này?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Xác nhận",
                cancelButtonText: "Hủy",
                reverseButtons: true
            }).then(function (result) {
                if (result.isConfirmed) {
                    $.ajax({
                        url: "@Url.Action("deleteCollaborationScope", "CollaborationScope")",
                        type: "POST",
                        data: {
                            scope_id: scope_id
                        },
                        dataType: "json",
                        success: function (data) {
                            if (data.success == true) {
                                toastr.success(data.content);
                                //refresh scope list
                                refreshScopeList();
                            } else {
                                toastr.error(data.content);
                            }
                            scope_table.ajax.reload();
                        },
                        error: function (data) {
                            toastr.error(data.content);
                            scope_table.ajax.reload();
                        }
                    });
                }
            });
        }
</script>
}

