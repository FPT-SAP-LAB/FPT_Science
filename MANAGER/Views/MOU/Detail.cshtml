
@{
    ViewBag.Title = "CHI TIẾT BIÊN BẢN GHI NHỚ";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .mou_table th {
        font-size: 10px !important
    }

    .mou_table td {
        font-size: 10px !important
    }

        .mou_table td span {
            font-size: 10px !important
        }

        .mou_table td a {
            font-size: 10px !important
        }
</style>
<link href="~/Content/Custom_CSS/MOU/MOU.css" rel="stylesheet" />

<div class="card card-custom ">
    <div class="card-body p-0">
        <div class="row justify-content-center px-8 my-lg-5 px-lg-10">
            <div class="col-xl-12 col-xxl-12">
                <div class="tabbable-line">
                    <ul class="nav nav-tabs nav-tabs-line" style="margin-bottom: 10px;">
                        <li class="nav-item ">
                            <a class="nav-link active" data-toggle="tab" href="#kt_tab_pane_1">CƠ BẢN</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#kt_tab_pane_2">ĐỐI TÁC</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#kt_tab_pane_3">MOA</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="kt_tab_pane_1" role="tabpanel" aria-labelledby="kt_tab_pane_1">
                            <div class="row mb-5 justify-content-center">
                                <h4 style="font-weight: bold;">
                                    THÔNG TIN VỀ BIÊN BẢN GHI NHỚ
                                </h4>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Số hiệu</label>
                                    <label style="color:red">*</label>
                                    <label style="font-style: italic;">(Năm/Số thứ tự)</label>
                                    <input class="form-control" type="text" placeholder="Số hiệu" autocomplete="off" required id="mou_code" />
                                </div>
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Đơn vị - Cơ sở ký kết</label>
                                    <label style="color:red">*</label>
                                    <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                        <select class="form-control select-search" id="office" name="param" style="width:100% !important">
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Thời gian có hiệu lực</label>
                                    <label style="font-style: italic;">(Cập nhật theo đối tác)</label>
                                    <div class="input-group date kt_datetimepicker_3" id="kt_datetimepicker_sign_date" data-target-input="nearest">
                                        <input disabled type="text" class="form-control datetimepicker-input" placeholder="Thời gian ký kết" id="sign_date_mou" readonly autocomplete="off" data-target="#kt_datetimepicker_sign_date" />
                                        <div class="input-group-append" data-target="#kt_datetimepicker_sign_date" data-toggle="datetimepicker">
                                            <span class="input-group-text">
                                                <i class="ki ki-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Thời gian hết hạn</label>
                                    <label style="color:red">*</label>
                                    <div class="input-group date kt_datetimepicker_3" id="kt_datetimepicker_end_date" data-target-input="nearest">
                                        <input type="text" class="form-control datetimepicker-input" placeholder="Thời gian hết hạn" id="end_date_mou" readonly autocomplete="off" data-target="#kt_datetimepicker_end_date" />
                                        <div class="input-group-append" data-target="#kt_datetimepicker_end_date" data-toggle="datetimepicker">
                                            <span class="input-group-text">
                                                <i class="ki ki-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-2 col-lg-2 col-md-4 col-sm-4">
                                    <label class="font-weight-bolder">Trạng thái</label>
                                    <label style="color:red">*</label>
                                    <select class="form-control" required id="status" style="width:100% !important">
                                    </select>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-8 col-sm-8">
                                    <label class="font-weight-bolder">Ghi chú</label>&nbsp;
                                    <input class="form-control" type="text" placeholder="Ghi chú" autocomplete="off" required id="reason" />
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Phạm vi hợp tác chính</label>&nbsp;
                                    <label style="font-style: italic;">
                                        (Cập nhật theo pham vi hợp tác của các đối tác ký kết)
                                    </label>
                                    <input disabled class="form-control" type="text" placeholder="Phạm vi hợp tác" autocomplete="off" required id="coop_scope" />
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Bản mềm</label>&nbsp;
                                    <label style="font-style: italic;">(Tối đa 5MB và 1 tệp tin)</label>
                                    <div class="uppy row" id="mou_detail_upload">
                                        <div class="uppy-wrapper col-3"></div>
                                        <div class="uppy-list col-7"></div>
                                        <div class="uppy-status"></div>
                                        <div class="uppy-informer uppy-informer-min"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Lưu ý</label>
                                    <textarea id="mou_note" class="form-control" rows="6"></textarea>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center last-row">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <a href="javascript:" onclick="saveBasicInfo()" class="load-btn btn btn-sm btn-light-success font-weight-bold float-right save-basic-info">Lưu</a>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <h4 style="font-weight: bold;">
                                    LỊCH SỬ KÝ KẾT BỔ SUNG BIÊN BẢN GHI NHỚ
                                </h4>
                            </div>
                            <div class="col-lg-3 col-xl-3 col-md-3 col-sm-12 mb-3">
                                <div class="row align-items-center">
                                    <a href="#add_additional_mou" onclick="addExMOU()" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold">Thêm</a>
                                </div>
                            </div>
                            @{
                                Html.RenderPartial("PartialView/MOUBasicInfo/List_Ex_MOU");
                            }
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_2" role="tabpanel" aria-labelledby="kt_tab_pane_2">
                            <div class="row mb-5">
                                <h4 style="font-weight: bold;">
                                    DANH SÁCH ĐỐI TÁC HOẠT ĐỘNG
                                </h4>
                            </div>
                            <div class="row">
                                <div class="col-lg-11 col-xl-11 col-md-11 col-sm-11">
                                    <div class="row align-items-center">
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <input type="text" class="form-control text-center" placeholder="Tên đối tác" id="search_partner_name" />
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                                <input type="text" class="form-control text-center" placeholder="Quốc gia" id="search_nation" />
                                            </div>
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                                <input type="text" class="form-control text-center" placeholder="Lĩnh vực" id="search_specialization" />
                                            </div>
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 my-1">
                                            <a href="javascript:" onclick="searchMOUPartner()" class="btn btn-light-primary px-6 font-weight-bold text-nowrap">Tìm kiếm</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-xl-1 col-md-1 col-sm-1">
                                    <div class="row align-items-center justify-content-end">
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 my-1">
                                            <a href="#add_partner_mou" class="btn btn-light-primary px-6 font-weight-bold" data-toggle="modal">Thêm</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @{
                                Html.RenderPartial("PartialView/MOUPartner/List_Partner_MOU");
                            }
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_3" role="tabpanel" aria-labelledby="kt_tab_pane_3">
                            <div class="row mb-5">
                                <h4 style="font-weight: bold;">
                                    DANH SÁCH BIÊN BẢN THỎA THUẬN
                                </h4>
                            </div>
                            <div class="row">
                                <div class="col-lg-11 col-xl-11 col-md-11 col-sm-11">
                                    <div class="row align-items-center">
                                        <div class="col-lg-offset-4 col-md-offset-4 col-sm-offset-4 my-1 mr-3">
                                            <input type="text" class="form-control text-center" placeholder="Tên đối tác" id="search_partner_name_moa" />
                                        </div>
                                        <div class="col-lg-offset-4 col-md-offset-4 col-sm-offset-4 my-1 mr-3">
                                            <input type="text" class="form-control text-center" placeholder="Số hiệu" id="search_moa_code_moa" />
                                        </div>
                                        <div class="col-lg-offset-4 col-md-offset-4 col-sm-offset-4 my-1">
                                            <a href="javascript:" onclick="searchMOA()" class="btn btn-light-primary px-6 font-weight-bold text-nowrap">Tìm kiếm</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-xl-1 col-md-1 col-sm-1">
                                    <div class="row align-items-center justify-content-end">
                                        <div class="col-lg-offset-12 col-md-offset-12 col-sm-offset-12 my-1">
                                            <a id="add_moa" href="#add_moa_modal" data-toggle="modal" class="btn btn-light-primary px-6 font-weight-bold">Thêm</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @{
                                Html.RenderPartial("../MOA/PartialView/MOA/List_MOA_Table");
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*modal add_ex_mou*@
@{
    Html.RenderPartial("PartialView/MOUBasicInfo/Add_Ex_MOU");
}

@*modal edit_ex_mou*@
@{
    Html.RenderPartial("PartialView/MOUBasicInfo/Edit_Ex_MOU");
}

@*modal mou_partner_history*@
@{
    Html.RenderPartial("PartialView/MOUPartner/List_History_MOU");
}

@*modal add_partner_mou*@
@{
    Html.RenderPartial("PartialView/MOUPartner/Add_Partner_MOU");
}

@*modal edit_partner_mou*@
@{
    Html.RenderPartial("PartialView/MOUPartner/Edit_Partner_MOU");
}

@*modal add_partner_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOA/Add_Partner_MOA");
}

@*modal edit_partner_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOA/Edit_Partner_MOA");
}

@*modal add_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOA/Add_MOA");
}

@section scripts{
    <link href="~/Content/assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" />
    <script src="~/Content/assets/plugins/custom/datatables/datatables.bundle.js"></script>

    @*delete alert*@
    <script>
         //funtion delete
        function confirm_delete(id) {
        //function confirm_delete(id, action, controller) {
            var link = '@Url.Action("action", "controller")'
            link = link.replace("action", "deleteExMOU");
            link = link.replace("controller", "BasicInfoMOU");
            Swal.fire({
                title: "Cảnh báo",
                text: "Dữ liệu trên sẽ không thể khôi phục sau khi xóa",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        data: { mou_bonus_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Lỗi", "Đã có lỗi xảy ra!", "error");
                            } else {
                                Swal.fire("Thành công",
                                    "Đã xóa thành công.", "success").then(function (result) {
                                        if (result.value) {
                                            location.reload();
                                        }
                                });
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
        };
    </script>

    @*datatable*@
    <script>
        //datepicker functions
        $(document).ready(function () {
            //split card
            //overflow
            $('.header-modify').css('padding', '13px');
        });

    </script>
    @*dropdown list*@
    <script>
        //jquery for dropdown
        $('#nation_add_select').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#office').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#status_moa').select2({
            allowClear: false,
        });
        $('#moa_partner_name_add').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        }).on("select2:select", function () { //after select
            checkPartnerAddMOA();
        }).on("select2:unselecting", function () {

        });
        $('#moa_partner_name_edit').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        }).on("select2:select", function () { //after select
            checkPartnerEditMOA();
        }).on("select2:unselecting", function () {

        });
        $('#partner_name_ex_mou_add').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: true,
        });
        $('#partner_name_ex_mou_add_for_edit').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: true,
        });
        $('#partner_name_ex_mou_edit').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: true,
        });
        $('#partner_name_ex_mou_edit_for_edit').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: true,
        });
        $('#status').select2({
            placeholder: 'Chọn cơ sở',
            allowClear: false,
        });
        $('#coop_scope_ex_mou_add').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_mou_edit').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_mou_edit_for_edit').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_mou_add_for_edit').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#mou_partner_specialization_add').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
        })
        $('#moa_partner_scope_add').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#moa_partner_scope_edit').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#mou_partner_scope_add').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#mou_partner_specialization_edit').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
        })
        $('#mou_partner_scope_edit').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })

        $('#facility').select2({
            placeholder: 'Đơn vị - Cơ sở ký kết',
            allowClear: true,
        })
        $('#partner_name_form').select2({
            placeholder: 'Tên đối tác',
            allowClear: true,
        })
        $('#specialization').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
        })
        $('#coop_scope_modal').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
        })
        $('.select2-search__field').css('width', '100%');
        //datepicker
        var KTBootstrapDatetimepicker = function () {
            var baseDemos = function () {
                $('.kt_datetimepicker_3').datetimepicker({
                    format: 'DD/MM/yyyy'
                });

            }
            return {
                // Public functions
                init: function () {
                    baseDemos();
                }
            };
        }();

        jQuery(document).ready(function () {
            KTBootstrapDatetimepicker.init();
        });
        function formatStateScope(state) {
            return state.text.split('-')[0];
        };
    </script>
    <script>
        var MultipleDropDownDemo = function () {
            var demo5 = function () {
                // Init autocompletes
                var toEl = document.getElementById('multiple-dropdown');
                var tagifyTo = new Tagify(toEl, {
                    delimiters: ", ", // add new tags when a comma or a space character is entered
                    maxTags: 10,
                    blacklist: ["fuck", "shit", "pussy"],
                    keepInvalidTags: false, // do not remove invalid tags (but keep them marked as invalid)
                    whitelist: [
                        {
                            value: 'Thắng',
                            email: '',
                            initials: '',
                            initialsState: '',
                            pic: '',
                            class: 'tagify__tag--primary'
                        }, {
                            value: 'Yêu',
                            email: '',
                            initials: 'SS',
                            initialsState: 'warning',
                            pic: ''
                        }, {
                            value: 'Nguyên',
                            email: '',
                            initials: '',
                            initialsState: '',
                            pic: ''
                        }],
                    templates: {
                        dropdownItem: function (tagData) {
                            try {
                                var html = '';
                                html += '<div class="tagify__dropdown__item">';
                                html += '   <div class="d-flex align-items-center">';
                                html += '       <span class="symbol sumbol-' + (tagData.initialsState ? tagData.initialsState : '') + ' mr-2">';
                                html += '           <span class="symbol-label" style="background-image: url(\'' + (tagData.pic ? tagData.pic : '') + '\')">' + (tagData.initials ? tagData.initials : '') + '</span>';
                                html += '</span > ';
                                html += '       <div class="d-flex flex-column">';
                                html += '           <a href="#" class="text-dark-75 text-hover-primary font-weight-bold">' + (tagData.value ? tagData.value : '') + '</a>';
                                html += '           <span class="text-muted font-weight-bold">' + (tagData.email ? tagData.email : '') + '</span>';
                                html += ' </div > ';
                                html += ' </div > ';
                                html += '</div > ';
                                return html;
                            } catch (err) { }
                        }
                    },
                    transformTag: function (tagData) {
                        tagData.class = 'tagify__tag tagify__tag--primary';
                    },
                    dropdown: {
                        classname: "color-blue",
                        enabled: 0,
                        maxItems: 5,
                        closeOnSelect: true,
                    }
                });
            }

            return {
                // public functions
                init: function () {
                    demo5();
                    $(".tagify__input").keydown(function (e) {
                        e.preventDefault()
                    })
                }
            };
        }();
        jQuery(document).ready(function () {
            MultipleDropDownDemo.init();
        });
    </script>
    @*wizard*@
    <script>
        var list = document.getElementsByClassName("progressbar")[0];
        itemList = list.getElementsByTagName("li");

        var div_step1 = document.getElementById("step-1");
        var div_step2 = document.getElementById("step-2");
        var button_step1 = document.getElementById("step-1-button");
        var step1_close_btn = document.getElementById("step-1-close-btn");
        var button_step2 = document.getElementById("step-2-button");
        var backbutton_step2 = document.getElementById("step-2-backbutton");

        function toggleNextStep() {
            itemList[0].classList.remove("active");
            itemList[0].classList.add("done");
            itemList[1].classList.add("active");
            div_step1.style.display = "none";
            button_step1.style.display = "none";
            step1_close_btn.style.display = "none";
            div_step2.style.display = "block";
            button_step2.style.display = "block";
            backbutton_step2.style.display = "block";
        }

        function toggleBackStep() {
            itemList[0].classList.add("active");
            itemList[0].classList.remove("done");
            itemList[1].classList.remove("active");
            div_step1.style.display = "block";
            button_step1.style.display = "block";
            step1_close_btn.style.display = "block";
            div_step2.style.display = "none";
            button_step2.style.display = "none";
            backbutton_step2.style.display = "none";
        }

    </script>

    @*upload file*@
    <script src="~/Content/assets/plugins/custom/uppy/uppy.bundle.js?v=7.0.6"></script>
    <script>
        "use strict";

        // Class definition
        var uppyMOAAdd;
        var uppyMOUAdd;
        var uppyExMOUAdd;
        var uppyExMOUEdit;
        var old_file_number;
        var old_file_number_ex_mou;
        var new_file_number;
        var new_file_number_ex_mou;

        var KTUppy = function () {
            const Tus = Uppy.Tus;
            const ProgressBar = Uppy.ProgressBar;
            const StatusBar = Uppy.StatusBar;
            const FileInput = Uppy.FileInput;
            const Informer = Uppy.Informer;

            // to get uppy companions working, please refer to the official documentation here: https://uppy.io/docs/companion/
            const Dashboard = Uppy.Dashboard;
            const Dropbox = Uppy.Dropbox;
            const GoogleDrive = Uppy.GoogleDrive;
            const Instagram = Uppy.Instagram;
            const Webcam = Uppy.Webcam;

            // Private functions
            //mou
            uppyMOUAdd = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyMOUAdd = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyMOUAdd.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyMOUAdd.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyMOUAdd.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyMOUAdd.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyMOUAdd.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyMOUAdd.on('file-added', function (file) {
                    if (uppyMOUAdd.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                    new_file_number = 1;
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyMOUAdd.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                    new_file_number = 0;
                });
            }

            //ex-mou
            uppyExMOUAdd = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyExMOUAdd = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyExMOUAdd.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyExMOUAdd.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyExMOUAdd.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyExMOUAdd.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyExMOUAdd.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyExMOUAdd.on('file-added', function (file) {
                    if (uppyExMOUAdd.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                    new_file_number = 1;
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyExMOUAdd.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                    new_file_number = 0;
                });
            }

            //ex-mou-edit
            uppyExMOUEdit = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyExMOUEdit = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyExMOUEdit.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyExMOUEdit.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyExMOUEdit.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyExMOUEdit.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyExMOUEdit.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyExMOUEdit.on('file-added', function (file) {
                    if (uppyExMOUEdit.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                    new_file_number_ex_mou = 1;
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyExMOUEdit.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                    new_file_number_ex_mou = 0;
                });
            }

            //moa
            uppyMOAAdd = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyMOAAdd = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyMOAAdd.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyMOAAdd.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyMOAAdd.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyMOAAdd.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyMOAAdd.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyMOAAdd.on('file-added', function (file) {
                    if (uppyMOAAdd.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyMOAAdd.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                });
            }

            return {
                // public functions
                init: function () {
                    initUppyMOUAdd('mou_detail_upload');
                    initUppyExMOUAdd('addition_mou_upload');
                    initUppyExMOUEdit('edit_addition_mou_upload');
                    initUppyMOAAdd('moa_upload');
                }
            };
        }();

        KTUtil.ready(function () {
            KTUppy.init();
        });

    </script>

    @*mou_basic_info*@
<script>
        var listStatus = [
            {
                status_id: 2,
                status_name: 'Inactive'
            }
            ,
            {
                status_id: 1,
                status_name: 'Active'
            }
        ];

        var listScopes = [];
        var listFullScopes = [];
        //var listFullCountries = [];
        //var listFull
        var listPartner = [];
        var listTempExMOUPartnerScope = [];
        var listTempExMOUPartnerScopeEdit = [];
        var mou_ex;

        $(document).ready(function () {
            getListOffice();
            loadListExMOU();
            pushDataToList();
            getFullScopes();
        });

        function getListOffice(){
            $.ajax({
                url: "@Url.Action("getOffice", "BasicInfoMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    var listOffice = data;
                    loadBasicInfo(listOffice);
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function getFullScopes(){
            $.ajax({
                url: "@Url.Action("getFullScope", "BasicInfoMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    listFullScopes = data;
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function loadBasicInfo(listOffice) {
            $.ajax({
                url: "@Url.Action("getBasicInfo", "BasicInfoMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    document.getElementById("mou_code").value = data.mou_code == null ? "" : data.mou_code;
                    document.getElementById("sign_date_mou").value = data.mou_start_date_string == null ? "" : data.mou_start_date_string;
                    document.getElementById("end_date_mou").value = data.mou_end_date_string == null ? "" : data.mou_end_date_string;
                    document.getElementById("reason").value = data.reason == null ? "" : data.reason;
                    document.getElementById("coop_scope").value = data.scopes == null ? "" : data.scopes;
                    document.getElementById("mou_note").value = data.mou_note == null ? "" : data.mou_note;
                    var OfficeData =
                    {
                        office_id: data.office_id,
                        office_abbreviation: data.office_abbreviation
                    };
                    loadOffice(listOffice, OfficeData);
                    loadStatus(data.mou_status_id);

                    //load available exist file
                    if (data.file_drive_id != null) {
                        let elemId = 'mou_detail_upload';
                        let id = '#' + elemId;
                        let $statusBar = $(id + ' .uppy-status');
                        let $uploadedList = $(id + ' .uppy-list');
                        let uploadListHtml = '<div class="uppy-list-item" data-id="' + data.file_drive_id + '"><div class="uppy-list-label">' + data.file_name + '</div><span class="uppy-list-remove" data-id="' + data.file_drive_id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                        $uploadedList.append(uploadListHtml);
                        $statusBar.addClass('uppy-status-hidden');
                        $statusBar.removeClass('uppy-status-ongoing');
                        old_file_number = 1;
                    }
                    else {
                        old_file_number = 0;
                    }
                    new_file_number = old_file_number;
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function loadListExMOU() {
            mou_ex = $(".ex_mou").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false,
            ajax: {
                    url: "@Url.Action("ViewExMOU", "BasicInfoMOU")",
                    type: "POST",
                    datatype: "json",
                    cache: "false"
                },
            columns: [
                { data: "mou_bonus_code" },
                { data: "mou_bonus_decision_date_string" },
                //{ data: "mou_bonus_end_date_string" },
                {
                    data: "mou_bonus_end_date_string",
                    render: function (data) {
                        if (data == "01/01/1900") {
                            return "";
                        } else {
                            return data;
                        }
                    }
                },
                { data: "partner_name" },
                { data: "scope_abbreviation" },
                {
                    data: "evidence",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M7.71 3.5L1.15 15l3.43 6l6.55-11.5M9.73 15L6.3 21h13.12l3.43-6m-.57-1L15.42 2H8.57l6.86 12h6.85z" fill="#626262"/></svg><!--end::Svg Icon--></span></a>';
                        }
                    }
                },
                {
                    title: 'Hành động',
                    data: "mou_bonus_id",
                    className: "text-nowrap text-center",
                    orderable: false,
                    render: function (data) {
                        return '<a href="#edit_additional_mou" onclick=editExMOU(' + data + ') class="btn btn-sm btn-light-primary px-6 font-weight-bold" data-toggle="modal" style="margin-right: 10px;">Sửa</a>' +
                        '<a onclick="confirm_delete(' + data + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    }
                }
                ],
                columnDefs: [
                    {
                        className: "text-center",
                        targets: '_all',
                    },
                ]
            });
        }

        function deleteExMOU(id) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel!",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: "@Url.Action("deleteExMOU", "BasicInfoMOU")",
                        data: { mou_bonus_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                Swal.fire("Deleted!", "Your file has been deleted.", "success")
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
        };

        function addExMOU() {
            getNewExMOUCode();
        }

        function pushDataToList() {
            $("#coop_scope_ex_mou_add option").each(function (){
                listScopes.push({
                    scope_id: $(this).val(),
                    scope_abbreviation: $(this).text().split('-')[0],
                    scope_name: $(this).text().split('-')[1],
                });
            });
            $("#partner_name_ex_mou_add option").each(function () {
                listPartner.push({
                    partner_id: $(this).val(),
                    partner_name: $(this).text()
                });
            });

        }

        function addExMOUTemp() {
            if ($('#coop_scope_ex_mou_add').val().length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            var partner_id_ex_add = $('#partner_name_ex_mou_add').val();
            var partner_name_ex_add = listPartner.find(x => x.partner_id == partner_id_ex_add).partner_name;

            var objCheck = listTempExMOUPartnerScope.find(x => x.partner_name == partner_name_ex_add);

            if (objCheck == null)
            {
                var partner_id = $('#partner_name_ex_mou_add').val();
                var scopes = $('#coop_scope_ex_mou_add').val();

                var scopes_name = '';
                for (i = 0; i < scopes.length; i++) {
                    var objScope = listScopes.find(x => x.scope_id == scopes[i]);
                    scopes_name += objScope.scope_abbreviation + ',';
                }

                var objPartner = listPartner.find(x => x.partner_id == partner_id);
                var partner_name = objPartner.partner_name;

                if (scopes_name.endsWith(",")) {
                    scopes_name = scopes_name.slice(0, -1);
                }

                var temp = {
                    partner_id: partner_id,
                    partner_name: partner_name,
                    scopes_id: scopes,
                    scopes_name: scopes_name,
                }
                $('#add-partner-scope').modal('hide');
                listTempExMOUPartnerScope.push(temp);
                clearInputAddExMOUPartner();
                initAndRefreshTableExMOUAdd();
            } else {
                toastr.error('Đối tác này đã được thêm');
            }
        }

        function clearInputAddExMOUPartner() {
            $('#coop_scope_ex_mou_add').empty();
            var HTMLScopedata = '';
            for (j = 0; j < listScopes.length; j++) {
                HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '</option>'
            }
            $('#coop_scope_ex_mou_add').append(HTMLScopedata);
        }

        function clearInputAddExMOUPartnerForEdit() {
            $('#coop_scope_ex_mou_add_for_edit').empty();
            var HTMLScopedata = '';
            for (j = 0; j < listScopes.length; j++) {
                HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '</option>'
            }
            $('#coop_scope_ex_mou_add_for_edit').append(HTMLScopedata);
        }

        function initAndRefreshTableExMOUAdd() {
            resetExMOUAddTable();
            initExMOUAddTable();
        }

        function resetExMOUAddTable() {
            for (idx = 0; idx < listTempExMOUPartnerScope.length; idx++) {
                $("#tempExMOU" + idx).remove();
            }
        }

        function initExMOUAddTable() {
            var HTMLdata = null;
            for (idx = 0; idx < listTempExMOUPartnerScope.length; idx++) {
                HTMLdata += '<tr id="tempExMOU' + idx + '" "class="MOUPartnerTempList">';
                HTMLdata += '<td>' + (idx + 1) + '</td>';
                HTMLdata += '<td>' + listTempExMOUPartnerScope[idx].partner_name + '</td>';
                HTMLdata += '<td>' + listTempExMOUPartnerScope[idx].scopes_name + '</td>';

                var buttonEdit = '<a onclick="loadEditExMOUTemp(' + idx + ')" href="#edit-partner-scope" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
                var buttonDel = '<a onclick="confirm_delete_ex_mou_temp(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                HTMLdata += '<td class="text-center">' + buttonEdit + buttonDel + '</td>';
                HTMLdata += '</tr>';
            }
            $('#ex_mou_table_add').append(HTMLdata);
        }

        function loadEditExMOUTemp(index) {
            $("#idx_ex_mou_edit").val(index);
            var HTMLPartnerdata = "";
            var HTMLScopedata = "";
            $('#partner_name_ex_mou_edit').empty();
            $('#coop_scope_ex_mou_edit').empty();
            for (i = 0; i < listPartner.length; i++) {
                if (listTempExMOUPartnerScope[index].partner_id == listPartner[i].partner_id) {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" selected>' + listPartner[i].partner_name + '</option>'
                } else {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" >' + listPartner[i].partner_name + '</option>'
                }
            }
            for (j = 0; j < listScopes.length; j++) {
                if (listTempExMOUPartnerScope[index].scopes_id.includes(listScopes[j].scope_id)) {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '" selected>' + listScopes[j].scope_abbreviation +'-'+ listScopes[j].scope_name + '</option>'
                } else {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '-' + listScopes[j].scope_name +  '</option>'
                }
            }

            $('#partner_name_ex_mou_edit').append(HTMLPartnerdata);
            $('#coop_scope_ex_mou_edit').append(HTMLScopedata);
        };

        function editExMOUTemp() {
            if ($('#coop_scope_ex_mou_edit').val().length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            var index = $("#idx_ex_mou_edit").val();
            var partner_id = $('#partner_name_ex_mou_edit').val();
            var scopes = $('#coop_scope_ex_mou_edit').val();

            //create value for scopes and partner edited
            var scopes_name = '';
            for (i = 0; i < scopes.length; i++) {
                var objScope = listScopes.find(x => x.scope_id == scopes[i]);
                scopes_name += objScope.scope_abbreviation + ',';
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);

            var partner_name = objPartner.partner_name;
            if (scopes_name.endsWith(",")) {
                scopes_name = scopes_name.slice(0, -1);
            }

            //check existed partner_name at diff position.
            for (j = 0; j < listTempExMOUPartnerScope.length; j++) {
                if (j != index) {
                    if (listTempExMOUPartnerScope[j].partner_name == partner_name) {
                        toastr.error('Đối tác này đã được thêm');
                        return;
                    }
                }
            }

            listTempExMOUPartnerScope[index].partner_id = partner_id;
            listTempExMOUPartnerScope[index].partner_name = partner_name;
            listTempExMOUPartnerScope[index].scopes_id = scopes;
            listTempExMOUPartnerScope[index].scopes_name = scopes_name;
            initAndRefreshTableExMOUAdd();
            $('#edit-partner-scope').modal('hide');

        }

        function confirm_delete_ex_mou_temp(index) {
            Swal.fire({
                title: "Cảnh báo",
                text: "Dữ liệu sẽ bị xóa !",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy bỏ",
                reverseButtons: true
            }).then(function (result) {
                if (result.isConfirmed) {
                    resetExMOUAddTable();
                    listTempExMOUPartnerScope.splice(index, 1);
                    initAndRefreshTableExMOUAdd();
                }
            })
        }

        function getNewExMOUCode() {
            $.ajax({
                url: "@Url.Action("getNewExtraMOUCode", "BasicInfoMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#ex_mou_id_add').val(data);
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function checkLastPartner(id) {
            $.ajax({
                url: "@Url.Action("isLastPartnerMOU", "PartnerMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (isLast) {
                    if (isLast) {
                        toastr.error('Một biên bản ghi nhớ phải có ít nhất 1 đối tác');
                    } else {
                        MOUBonusIsExisted(id);
                    }
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function MOUBonusIsExisted(mou_partner_id) {
            var obj = {
                mou_partner_id: mou_partner_id
            }
            $.ajax({
                    url: "@Url.Action("CheckMOUBonusExisted", "PartnerMOU")",
                    type: "POST",
                    data: JSON.stringify(obj),
                    contentType: "application/json;charset=utf-8",
                    datatype: "json",
                    cache: false,
                    success: function (isExisted) {
                        if (isExisted) {
                            toastr.error('Không thể xóa đối tác đã có trong biên bản ghi nhớ bổ sung');
                        } else {
                            checkMOAPartnerExistedInMOU(mou_partner_id);
                            //showSwalDelMOAPartner(moa_partner_id);
                        }
                    },
                    error: function () {
                        //alert("fail");
                    }
            });
        }

        function checkMOAPartnerExistedInMOU(mou_partner_id) {
            var obj = {
                mou_partner_id: mou_partner_id
            }
            $.ajax({
                    url: "@Url.Action("CheckMOAPartnerExistedInMOU", "PartnerMOU")",
                    type: "POST",
                    data: JSON.stringify(obj),
                    contentType: "application/json;charset=utf-8",
                    datatype: "json",
                    cache: false,
                    success: function (isExisted) {
                        if (isExisted) {
                            toastr.error('Không thể xóa đối tác đã có trong biên bản thỏa thuận');
                        } else {
                            showSwalDelMOUPartner(mou_partner_id);
                        }
                    },
                    error: function () {
                        //alert("fail");
                    }
            });
        }

        function loadOffice(listOffice, OfficeData) {
            var HTMLOfficedata = "";
            for (i = 0; i < listOffice.length; i++) {
                if (listOffice[i].office_id == OfficeData.office_id) {
                    HTMLOfficedata += '<option value = "' + listOffice[i].office_id + '" selected>' + listOffice[i].office_abbreviation + '</option>'
                    //update for office_moa_add.
                    $('#facility_moa').val(listOffice[i].office_abbreviation);
                } else {
                    HTMLOfficedata += '<option value = "' + listOffice[i].office_id + '">' + listOffice[i].office_abbreviation + '</option>'
                }
            }
            $('#office').append(HTMLOfficedata);
        }

        function loadStatus(mou_status_id) {
            var HTMLStatusData = "";
            for (i = 0; i < listStatus.length; i++) {
                if (listStatus[i].status_id == mou_status_id) {
                    HTMLStatusData += '<option value = "' + listStatus[i].status_id + '" selected>' + listStatus[i].status_name + '</option>'
                } else {
                    HTMLStatusData += '<option value = "' + listStatus[i].status_id + '">' + listStatus[i].status_name + '</option>'
                }
            }
            $('#status').append(HTMLStatusData);
        }

        function compareDate(current, max) {
            var currentToken = current.split("/");
            var maxToken = max.split("/");
            if (parseInt(currentToken[2]) == parseInt(maxToken[2])) {    //year
                if (parseInt(currentToken[1]) == parseInt(maxToken[1])) {   //month
                    return parseInt(currentToken[0]) <= parseInt(maxToken[0]) ? false : true;   //date.
                } else {
                    return parseInt(currentToken[1]) < parseInt(maxToken[1]) ? false : true;
                }
            } else {
                return parseInt(currentToken[2]) < parseInt(maxToken[2]) ? false : true;
            }
        }

        function MOUCodeIsInvalid(mou_code) {
            var token = mou_code.split("/");
            if (token.length == 2 && /^\d+$/.test(token[0]) && /^\d+$/.test(token[1])) {
                return false;
            } else {
                return true;
            }
        }

        function ExMOUCodeIsInvalid(mou_code) {
            //ex : 2021/1_BS/2.
            var bigToken = mou_code.split("_");
            if (bigToken.length != 2) {
                return true;
            } else {
                var old_mou_code = bigToken[0].split("/");
                if (old_mou_code.length == 2 && /^\d+$/.test(old_mou_code[0]) && /^\d+$/.test(old_mou_code[1])) {
                    var ex_code = bigToken[1].split("/");
                    if (ex_code.length == 2 && ex_code[0] == 'BS' && /^\d+$/.test(ex_code[1])) {
                        return false;
                    } else {
                        return true;
                    }
                } else {
                    return true;
                }
            }
        }

        function MOACodeIsInvalid(mou_code) {
            //ex : 2021/1_MOA/2.
            var bigToken = mou_code.split("_");
            if (bigToken.length != 2) {
                return true;
            } else {
                var old_mou_code = bigToken[0].split("/");
                if (old_mou_code.length == 2 && /^\d+$/.test(old_mou_code[0]) && /^\d+$/.test(old_mou_code[1])) {
                    var ex_code = bigToken[1].split("/");
                    if (ex_code.length == 2 && ex_code[0] == 'MOA' && /^\d+$/.test(ex_code[1])) {
                        return false;
                    } else {
                        return true;
                    }
                } else {
                    return true;
                }
            }
        }

        function saveBasicInfo() {
            if ($('#mou_code').val().trim() == "") {
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if ($('#end_date_mou').val().trim() == "") {
                toastr.error('Ngày hết hạn chưa được chọn');
                return;
            }
            else if (compareDate($('#sign_date_mou').val(), $('#end_date_mou').val())) { //compare = true <=> sign_date > end_date
                toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                return;
            }
            else if (MOUCodeIsInvalid($('#mou_code').val().trim())) {
                toastr.error('Số hiệu không hợp lệ');
                return;
            } else {
                //start loading
                var basic_info_loader = new LoaderBtn($('.save-basic-info'));
                basic_info_loader.startLoading();

                //collect basicInfo data
                evidence = uppyMOUAdd.getFiles();
                var BasicInfo = {
                    mou_code: $('#mou_code').val(),
                    mou_end_date_string: $('#end_date_mou').val(),
                    office_id: $('#office').val(),
                    reason: $('#reason').val(),
                    mou_note: $('#mou_note').val(),
                    mou_status_id: $('#status').val()
                };
                //init FormData

                let formData = new FormData();
                formData.append("input", JSON.stringify(BasicInfo));
                formData.append("old_file_number", old_file_number);
                formData.append("new_file_number", new_file_number);
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

                $.ajax({
                    url: "@Url.Action("editMOUBasicInfo", "BasicInfoMOU")",
                    type: "POST",
                    //data: JSON.stringify(BasicInfo),
                    data: formData,
                    //contentType: "application/json;charset=utf-8",
                    contentType: false,
                    processData: false,
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        basic_info_loader.stopLoading();
                        Swal.fire("Thành công",
                            "Thông tin được cập nhật thành công.", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                        });
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
            }
        }

        var button_loader;
        function finishExMOUAdd(){
            button_loader = new LoaderBtn($('#add_ex_mou_modal'));
            button_loader.startLoading();
            if ($('#ex_mou_id_add').val().trim() == "") {
                button_loader.stopLoading();
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if (ExMOUCodeIsInvalid($('#ex_mou_id_add').val().trim())) {
                button_loader.stopLoading();
                toastr.error('Số hiệu không hợp lệ');
                return;
            }
            else if (compareDate($('#sign_date_mou').val(), $('#mou_addition_sign_time').val())) { //compare = true <=> sign_date > end_date
                button_loader.stopLoading();
                toastr.error('Ngày ký kết của biên bản bổ sung phải sau ngày ký kết của biên bản gốc');
                return;
            }
            else if ($('#mou_addition_end_time').val().trim() != "") {
                if (compareDate($('#mou_addition_sign_time').val(), $('#mou_addition_end_time').val())) { //compare = true <=> sign_date > end_date
                    button_loader.stopLoading();
                    toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                    return;
                }
                else if (compareDate($('#end_date_mou').val(), $('#mou_addition_end_time').val())) { //compare = true <=> sign_date > end_date
                    button_loader.stopLoading();
                    toastr.error('Ngày hết hạn của biên bản bổ sung phải sau ngày hết hạn của biên bản gốc');
                    return;
                }
                else {
                    addExMOUAction();
                }
            }
            else {
                addExMOUAction();
            }
        }

        function addExMOUAction() {
            var ExBasicInfo = {
                    ex_mou_code: $('#ex_mou_id_add').val() ,
                    ex_mou_sign_date: $('#mou_addition_sign_time').val(),
                    ex_mou_end_date: $('#mou_addition_end_time').val()
                };
                var ExMOUAdd = {
                    ExBasicInfo: ExBasicInfo,
                    PartnerScopeInfo: listTempExMOUPartnerScope,
                };
                evidence = uppyExMOUAdd.getFiles();
                let formData = new FormData();
                formData.append("input", JSON.stringify(ExMOUAdd));
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

                $.ajax({
                    url: "@Url.Action("Add_Ex_Mou", "BasicInfoMOU")",
                    type: "POST",
                    //data: JSON.stringify(ExMOUAdd),
                    data: formData,
                    //contentType: "application/json;charset=utf-8",
                    contentType: false,
                    datatype: "json",
                    cache: false,
                    processData: false,
                    success: function (data) {
                        listTempExMOUPartnerScope = [];
                        $('#add_additional_mou').modal('hide');
                        button_loader.stopLoading();
                        Swal.fire("Thành công",
                            "Đã bổ sung biên bản ghi nhớ thành công.", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                        });
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
        }

        function editExMOU(mou_bonus_id) {
            $.ajax({
                url: "@Url.Action("ViewExMOUDetail", "BasicInfoMOU")",
                data: { mou_bonus_id: mou_bonus_id },
                success: function (data) {
                    $('#ex_mou_id_edit').val(data.ExBasicInfo.ex_mou_code);
                    $('#mou_bonus_id').val(mou_bonus_id);
                    $('#mou_addition_sign_time_edit').val(data.ExBasicInfo.ex_mou_sign_date);
                    if (data.ExBasicInfo.ex_mou_end_date == '01/01/1900') {
                        $('#mou_addition_end_time_edit').val('');
                    } else {
                        $('#mou_addition_end_time_edit').val(data.ExBasicInfo.ex_mou_end_date);
                    }
                    //load available exist file
                    if (data.file_drive_id != null) {
                        if ($('#edit_addition_mou_upload .uppy-list').text() == "") {
                            let elemId = 'edit_addition_mou_upload';
                            let id = '#' + elemId;
                            let $statusBar = $(id + ' .uppy-status');
                            let $uploadedList = $(id + ' .uppy-list');
                            let uploadListHtml = '<div class="uppy-list-item" data-id="' + data.file_drive_id + '"><div class="uppy-list-label">' + data.file_name + '</div><span class="uppy-list-remove" data-id="' + data.file_drive_id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                            $uploadedList.append(uploadListHtml);
                            $statusBar.addClass('uppy-status-hidden');
                            $statusBar.removeClass('uppy-status-ongoing');
                        }
                        old_file_number_ex_mou = 1;
                    }
                    else {
                        old_file_number_ex_mou = 0;
                    }
                    new_file_number_ex_mou = old_file_number_ex_mou;
                    addToPartnerScopeListEdit(data);
                },
                error: function (data) {

                },
            });
        }

        function addToPartnerScopeListEdit(data) {
            resetExMOUEditTable();
            listTempExMOUPartnerScopeEdit = [];
            for (i = 0; i < data.PartnerScopeInfo.length; i++){
                var partner_id = data.PartnerScopeInfo[i].partner_id;
                var scopes = data.PartnerScopeInfo[i].scopes_id;
                var scopes_name = '';
                for (j = 0; j < scopes.length; j++) {
                    var objScope = listFullScopes.find(x => x.scope_id == scopes[j]);
                    if (objScope != null) {
                        scopes_name += objScope.scope_abbreviation + ',';
                    }
                }
                var objPartner = listPartner.find(x => x.partner_id == partner_id);
                var partner_name = objPartner.partner_name;

                if (scopes_name.endsWith(",")) {
                    scopes_name = scopes_name.slice(0, -1);
                }
                var temp = {
                    partner_id: partner_id,
                    partner_name: partner_name,
                    scopes_id: scopes,
                    scopes_name: scopes_name,
                }
                listTempExMOUPartnerScopeEdit.push(temp);
            }
            initAndRefreshTableExMOUEdit();
        }

        function initAndRefreshTableExMOUEdit(){
            resetExMOUEditTable();
            initExMOUEditTable();
        }

        function resetExMOUEditTable() {
            for (idx = 0; idx < listTempExMOUPartnerScopeEdit.length; idx++) {
                $("#tempExMOUEdit" + idx).remove();
            }
        }

        function initExMOUEditTable() {
            var HTMLdata = null;
            for (idx = 0; idx < listTempExMOUPartnerScopeEdit.length; idx++) {
                HTMLdata += '<tr id="tempExMOUEdit' + idx + '" "class="MOUPartnerTempList">';
                HTMLdata += '<td>' + (idx + 1) + '</td>';
                HTMLdata += '<td>' + listTempExMOUPartnerScopeEdit[idx].partner_name + '</td>';
                HTMLdata += '<td>' + listTempExMOUPartnerScopeEdit[idx].scopes_name + '</td>';

                var buttonEdit = '<a onclick="loadEditExMOUTempForEdit(' + idx + ')" href="#edit-partner-scope-edit" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
                var buttonDel = '<a onclick="confirm_delete_ex_mou_temp_edit(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                HTMLdata += '<td class="text-center">' + buttonEdit + buttonDel + '</td>';
                HTMLdata += '</tr>';
            }
            $('#ex_mou_table_edit').append(HTMLdata);
        }

        function loadEditExMOUTempForEdit(index){
            $("#idx_ex_mou_edit_for_edit").val(index);
            var HTMLPartnerdata = "";
            var HTMLScopedata = "";
            $('#partner_name_ex_mou_edit_for_edit').empty();
            $('#coop_scope_ex_mou_edit_for_edit').empty();
            for (i = 0; i < listPartner.length; i++) {
                if (listTempExMOUPartnerScopeEdit[index].partner_id == listPartner[i].partner_id) {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" selected>' + listPartner[i].partner_name + '</option>'
                } else {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" >' + listPartner[i].partner_name + '</option>'
                }
            }
            for (j = 0; j < listScopes.length; j++) {
                if ((listTempExMOUPartnerScopeEdit[index].scopes_id+'').includes(listScopes[j].scope_id)) {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '" selected>' + listScopes[j].scope_abbreviation + '-' + listScopes[j].scope_name+ '</option>'
                } else {
                    HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '-' + listScopes[j].scope_name +'</option>'
                }
            }
            $('#partner_name_ex_mou_edit_for_edit').append(HTMLPartnerdata);
            $('#coop_scope_ex_mou_edit_for_edit').append(HTMLScopedata);
        }

        function confirm_delete_ex_mou_temp_edit(index) {
            Swal.fire({
                title: "Cảnh báo?",
                text: "Dữ liệu sẽ bị xóa!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.isConfirmed) {
                    resetExMOUEditTable();
                    listTempExMOUPartnerScopeEdit.splice(index, 1);
                    initAndRefreshTableExMOUEdit();
                }
            })
        }

        function editExMOUTempForEdit() {
            var index = $("#idx_ex_mou_edit_for_edit").val();
            var partner_id = $('#partner_name_ex_mou_edit_for_edit').val();
            var scopes = $('#coop_scope_ex_mou_edit_for_edit').val();
            var scopes_name = '';

            if (scopes.length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }

            for (i = 0; i < scopes.length; i++) {
                var objScope = listFullScopes.find(x => x.scope_id == scopes[i]);
                scopes_name += objScope.scope_abbreviation + ',';
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);
            var partner_name = objPartner.partner_name;

            if (scopes_name.endsWith(",")) {
                scopes_name = scopes_name.slice(0, -1);
            }

            //check existed partner_name at diff position.
            for (j = 0; j < listTempExMOUPartnerScopeEdit.length; j++) {
                if (j != index) {
                    if (listTempExMOUPartnerScopeEdit[j].partner_name == partner_name) {
                        toastr.error('Đối tác này đã được thêm');
                        return;
                    }
                }
            }

            listTempExMOUPartnerScopeEdit[index].partner_id = partner_id;
            listTempExMOUPartnerScopeEdit[index].partner_name = partner_name;
            listTempExMOUPartnerScopeEdit[index].scopes_id = scopes;
            listTempExMOUPartnerScopeEdit[index].scopes_name = scopes_name;
            initAndRefreshTableExMOUEdit();
            $('#edit-partner-scope-edit').modal('hide');
        }

        function addExMOUTempForEdit() {
            var partner_id = $('#partner_name_ex_mou_add_for_edit').val();
            var scopes = $('#coop_scope_ex_mou_add_for_edit').val();
            if (scopes.length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }

            var scopes_name = '';
            for (i = 0; i < scopes.length; i++) {
                var objScope = listScopes.find(x => x.scope_id == scopes[i]);
                scopes_name += objScope.scope_abbreviation + ',';
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);
            var partner_name = objPartner.partner_name;

            if (scopes_name.endsWith(",")) {
                scopes_name = scopes_name.slice(0, -1);
            }

            //add to temp if pass all conditions.
            var objCheck = listTempExMOUPartnerScopeEdit.find(x => x.partner_name == partner_name);
            if (objCheck == null) {
                var temp = {
                    partner_id: partner_id,
                    partner_name: partner_name,
                    scopes_id: scopes,
                    scopes_name: scopes_name,
                }
                listTempExMOUPartnerScopeEdit.push(temp);
                clearInputAddExMOUPartnerForEdit();
                $('#add-partner-scope-edit').modal('hide');
                initAndRefreshTableExMOUEdit();
            }
            else {
                toastr.error('Đối tác này đã được thêm');
            }
        }

        var button_loader_ex_mou_edit;
        function finishExMOUEdit(element) {
            button_loader_ex_mou_edit = new LoaderBtn(element);
            button_loader_ex_mou_edit.startLoading();
            if ($('#ex_mou_id_edit').val().trim() == "") {
                button_loader_ex_mou_edit.stopLoading();
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if (ExMOUCodeIsInvalid($('#ex_mou_id_edit').val().trim())) {
                button_loader_ex_mou_edit.stopLoading();
                toastr.error('Số hiệu không hợp lệ');
                return;
            }
            else if ($('#mou_addition_end_time_edit').val().trim() != "") {
                if (compareDate($('#mou_addition_sign_time_edit').val(), $('#mou_addition_end_time_edit').val())) { //compare = true <=> sign_date > end_date
                    button_loader_ex_mou_edit.stopLoading();
                    toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                    return;
                } else {
                    editExMOUAction();
                }
            }
            else {
                editExMOUAction();
            }
        }

    function editExMOUAction() {
        var ExBasicInfo = {
                    ex_mou_code: $('#ex_mou_id_edit').val() ,
                    ex_mou_sign_date: $('#mou_addition_sign_time_edit').val(),
                    ex_mou_end_date: $('#mou_addition_end_time_edit').val()
                };

                var ExMOUAdd = {
                    ExBasicInfo: ExBasicInfo,
                    PartnerScopeInfo: listTempExMOUPartnerScopeEdit,
                    mou_bonus_id: $('#mou_bonus_id').val()
                };
                //collect basicInfo data
                evidence = uppyExMOUEdit.getFiles();
                let formData = new FormData();
                formData.append("input", JSON.stringify(ExMOUAdd));
                formData.append("old_file_number_ex_mou", old_file_number_ex_mou);
                formData.append("new_file_number_ex_mou", new_file_number_ex_mou);
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);


                $.ajax({
                    url: "@Url.Action("Edit_Ex_Mou", "BasicInfoMOU")",
                    type: "POST",
                    //data: JSON.stringify(ExMOUAdd),
                    //contentType: "application/json;charset=utf-8",
                    data: formData,
                    contentType: false,
                    processData: false,
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        listTempExMOUPartnerScopeEdit = [];
                        $('#edit_additional_mou').modal('hide');
                        button_loader_ex_mou_edit.stopLoading();
                        Swal.fire("Thành công!",
                            "Đã sửa biên bản ghi nhớ bổ sung thành công.", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                            });
                        //mou_ex.ajax.reload();
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
    }



    @*mou_partner*@
        var listSpeMOUPartner = [];
        var listScopeMOUPartner = [];
        var listPartnerMOUPartner = [];
        var mou_partner_table;

    $(document).ready(function () {
        loadListPartnerMOU();
        addToList();
        loadMOAList();
    });

    function searchMOUPartner() {
        rowIdxMOUPartner = 1;
        mou_partner_table.ajax.reload();
    }

    function addToList() {
        $("#mou_partner_specialization_add option").each(function () {
            listSpeMOUPartner.push({
                spe_id: $(this).val(),
                spe_name: $(this).text()
            });
        });
        $("#mou_partner_scope_add option").each(function () {
            listScopeMOUPartner.push({
                scope_id: $(this).val(),
                scope_abbreviation: $(this).text().split('-')[0],
                scope_name: $(this).text().split('-')[1],
            });
        });
        $("#partnerList option").each(function () {
            listPartnerMOUPartner.push({
                partner_name: $(this).val()
            });
        });
    }

    var rowIdxMOUPartner = 1;
    function loadListPartnerMOU() {
        mou_partner_table = $("#partner_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false,
            ajax: {
                    url: "@Url.Action("ViewListMOUPartner", "PartnerMOU")",
                    type: "POST",
                    datatype: "json",
                    data: {
                        "partner_name": function () { return $('#search_partner_name').val() },
                        "nation": function () { return $('#search_nation').val() },
                        "specialization": function () { return $('#search_specialization').val() },
                    },
                    cache: "false"
            },
            order: [[8, "desc"]],
            columns: [
                {
                    render: function () {
                        return rowIdxMOUPartner++;
                    },
                    className: 'text-center',
                    orderable: false,
                },
                {
                    data: "partner_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center', },
                {
                    data: "country_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center', },
                {
                    data: "specialization_name",
                    render: function (data) {
                        if (data == "" || data == null) {
                            return "";
                        } else {
                            return data.replaceAll(',', ', <br/>')
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "website",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none"><path d="M13.544 10.456a4.368 4.368 0 0 0-6.176 0l-3.089 3.088a4.367 4.367 0 1 0 6.177 6.177L12 18.177m-1.544-4.633a4.368 4.368 0 0 0 6.177 0l3.088-3.088a4.368 4.368 0 0 0-6.177-6.177L12 5.823" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></g></svg><!--end::Svg Icon--></span></a>';
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                    orderable: false,
                },
                {
                    data: "contact_point_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "contact_point_phone",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "contact_point_email",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "mou_start_date_string",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "scope_abbreviation",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center', render: function (data) {
                        if (data == "" || data == null) {
                            return "";
                        } else {
                            return data.replaceAll(',', ', ')
                        }
                    },
                },
                {
                    title: 'Hành động',
                    data:
                    {
                        mou_partner_id: "mou_partner_id",
                        mou_code: "mou_code",
                        partner_name: "partner_name"
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-nowrap text-center',
                    orderable: false,
                    render: function (data, type, full, meta, row) {
                        return '<a onclick="show_status_history(' + data.mou_partner_id + ',\'' + data.mou_code +'\',\'' + data.partner_name + '\')" class="show-status-history" href="#mou_partner_history" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-sm"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Code/Time-schedule.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 512 512"><path d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468c-59.015.042-113.223-20.53-155.822-54.911c-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184c0-101.705-82.311-184-184-184c-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z" fill="black"/></svg><!--end::Svg Icon--></span></a> '
                            + '<a href="#edit_partner_mou" onclick=goDetailMOUPartner(' + data.mou_partner_id + ') class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;" data-toggle="modal">Sửa</a>' +
                            '<a onclick="confirm_delete_partner_mou(' + data.mou_partner_id + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    }
                },
            ],
            initComplete: function () {
                $(this).parent().css('overflow-x', 'auto');
                $(this).parent().css('width', '100%');
                $(this).parent().css('padding', '0');
                $('.mou_table th').css('padding', '5px 15px 5px 5px')
                $('.sorting_disabled').css('padding', '5px')
                $('.header-modify').css('padding', '5px')
            }
        });
    }

    function checkPartnerAdd() {
        var partner_name = document.getElementById("partner_name_add").value;
        var em = { partner_name: partner_name };
        $.ajax({
            url: "@Url.Action("CheckPartner", "MOU")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == "") {
                    //change toggle
                    document.getElementById('mou_partner_website_add').removeAttribute('disabled');
                    document.getElementById('mou_partner_address_add').removeAttribute('disabled');
                    document.getElementById('nation_add_select').removeAttribute('hidden');
                    $('#nation_add_select').select2({
                        placeholder: 'Chọn quốc gia',
                        allowClear: false,
                    });
                    document.getElementById('mou_partner_nation_add').setAttribute('hidden', '');

                    //change value
                    $('#mou_partner_nation_add').val('');
                    $('#mou_partner_website_add').val('');
                    $('#mou_partner_address_add').val('');
                    $('#partner_id_add').val('');
                } else {
                    //toggle
                    document.getElementById('mou_partner_website_add').setAttribute('disabled', '');
                    document.getElementById('mou_partner_address_add').setAttribute('disabled', '');
                    $("#nation_add_select").val('').trigger("change");
                    document.getElementById('mou_partner_nation_add').removeAttribute('hidden');
                    $('#nation_add_select').select2({
                        placeholder: 'Chọn quốc gia',
                        allowClear: false,
                    });
                    $('#nation_add_select').select2('destroy');
                    $("#nation_add_select").attr("hidden", true);

                    //value
                    document.getElementById("mou_partner_nation_add").value = data.country_name == null ? "" : data.country_name;
                    document.getElementById("mou_partner_website_add").value = data.website == null ? "" : data.website;
                    document.getElementById("mou_partner_address_add").value = data.address == null ? "" : data.address;
                    document.getElementById("partner_id_add").value = data.partner_id == null ? "" : data.partner_id;
                }
                document.getElementById("add_mou_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    function preventEditMOUPartner() {
        document.getElementById("edit_mou_partner_button").setAttribute('disabled', '');
    }

    function preventAddMOUPartner() {
        document.getElementById("add_mou_partner_button").setAttribute('disabled', '');
    }

    function addMOUPartner(element) {
        var button_loader = new LoaderBtn(element);
        button_loader.startLoading();
        if ($('#partner_name_add').val().trim() == '') {
            button_loader.stopLoading();
            toastr.error('Đối tác chưa được chọn');
            return;
        }
        else if ($('#mou_sign_date_partner_add').val().trim() == '') {
            button_loader.stopLoading();
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#mou_partner_specialization_add').val().length == 0) {
            button_loader.stopLoading();
            toastr.error('Lĩnh vực chưa được chọn');
            return;
        }
        else if ($('#mou_partner_scope_add').val().length == 0) {
            button_loader.stopLoading();
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else if (compareDate($('#mou_sign_date_partner_add').val(), $('#end_date_mou').val())) { //compare = true <=> sign_date > end_date
            button_loader.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn của biên bản ghi nhớ');
        }
        else if (checkMOUPartnerAddDuplicated()) {
            button_loader.stopLoading();
            toastr.error('Đối tác đã có trong biên bản ghi nhớ');
            return;
        }
        else {
            var PartnerInfo = {
                partnername_add: document.getElementById("partner_name_add").value,
                represent_add: document.getElementById("mou_partner_represent_add").value,
                specialization_add: $("#mou_partner_specialization_add").val(),
                nation_add: $('#nation_add_select').val(),
                website_add: document.getElementById("mou_partner_website_add").value,
                address_add: document.getElementById("mou_partner_address_add").value,
                email_add: document.getElementById("mou_partner_email_add").value,
                sign_date_mou_add: document.getElementById("mou_sign_date_partner_add").value,
                phone_add: document.getElementById("mou_partner_phone_add").value,
                coop_scope_add: $("#mou_partner_scope_add").val(),
                partner_id: document.getElementById("partner_id_add").value,
            }
            $.ajax({
                url: "@Url.Action("Add_Mou_Partner", "PartnerMOU")",
                type: "POST",
                data: JSON.stringify(PartnerInfo),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#add_partner_mou').modal('hide');
                    button_loader.stopLoading();
                    Swal.fire("Thành công!",
                        "Đã thêm đối tác thành công.", "success").then(function (result) {
                            if (result.value) {
                                location.reload();
                            }
                        });
                },
                error: function () {
                    //alert("fail");
                }
            });
        }
    }

    function checkMOUPartnerAddDuplicated(){
            var obj =
            {
                partner_name: $('#partner_name_add').val()
            };
            $.ajax({
                url: "@Url.Action("CheckPartnerExistedInMOU", "PartnerMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data == "") {
                        return false;
                    } else {
                        return true;
                    }
                },
                error: function () {

                }
            });
    }

    function checkMOUPartnerEditDuplicated(){
            var obj =
            {
                partner_name: $('#mou_partner_name_edit').val(),
                mou_partner_id: $('#mou_partner_id_edit').val()
            };
            $.ajax({
                url: "@Url.Action("CheckPartnerExistedInEditMOU", "PartnerMOU")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data == "") {
                        return false;
                    } else {
                        return true;
                    }
                },
                error: function () {

                }
            });
    }

    function goDetailMOUPartner(mou_partner_id) {
        var em = { mou_partner_id: mou_partner_id };
        $.ajax({
            url: "@Url.Action("Get_Data_Partner_Detail", "PartnerMOU")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            cache: false,
            success: function (data) {
                $("#mou_partner_nation_edit").val(data.country_name);
                $("#mou_partner_email_edit").val(data.contact_point_email);
                $("#mou_sign_date_partner_edit").val(data.mou_start_date_string);
                $("#mou_partner_website_edit").val(data.website);
                $("#mou_partner_phone_edit").val(data.contact_point_phone);
                $("#mou_partner_address_edit").val(data.address);
                $("#mou_partner_represent_edit").val(data.contact_point_name);
                $('#mou_partner_name_edit').val(data.partner_name);
                $('#mou_partner_id_edit').val(mou_partner_id);
                loadDataMOUPartnerForEdit(data);
                checkPartnerEdit();
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    function loadDataMOUPartnerForEdit(data) {
            var HTMLSpedata = "";
            var HTMLScopedata = "";
            $('#mou_partner_specialization_edit').empty();
            $('#mou_partner_scope_edit').empty();

            for (i = 0; i < listSpeMOUPartner.length; i++) {
                if (data.specialization_name.includes(listSpeMOUPartner[i].spe_name)) {
                    HTMLSpedata += '<option value = "' + listSpeMOUPartner[i].spe_id + '" selected>' + listSpeMOUPartner[i].spe_name + '</option>'
                } else {
                    HTMLSpedata += '<option value = "' + listSpeMOUPartner[i].spe_id + '" >' + listSpeMOUPartner[i].spe_name + '</option>'
                }
            }
            for (j = 0; j < listScopeMOUPartner.length; j++) {
                if (data.scope_abbreviation.includes(listScopeMOUPartner[j].scope_abbreviation)) {
                    HTMLScopedata += '<option value = "' + listScopeMOUPartner[j].scope_id + '" selected>' + listScopeMOUPartner[j].scope_abbreviation + '-'+ listScopeMOUPartner[j].scope_name + '</option>'
                } else {
                    HTMLScopedata += '<option value = "' + listScopeMOUPartner[j].scope_id + '">' + listScopeMOUPartner[j].scope_abbreviation + '-' + listScopeMOUPartner[j].scope_name + '</option>'
                }
            }
            //add current choice of partner_name_for_edit
            //load data of partner_name
            var option = new Option(data.partner_name, data.partner_name, true, true);
            $('#mou_partner_name_edit').append(option).trigger('change');
            $('#mou_partner_specialization_edit').append(HTMLSpedata);
            $('#mou_partner_scope_edit').append(HTMLScopedata);

            //hide select
            $('#nation_edit_select').select2({
                placeholder: 'Chọn quốc gia',
                allowClear: false,
            });
            $('#nation_edit_select').select2('destroy');
            $("#nation_edit_select").attr("hidden", true);
        }

    function checkPartnerEdit() {
            var partner_name = document.getElementById("mou_partner_name_edit").value;
            var em = { partner_name: partner_name };
            $.ajax({
                url: "@Url.Action("CheckPartner", "MOU")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    if (data == "") {
                        //change value
                        $('#partner_id_edit').val('');
                        $('#mou_partner_address_edit').val('');
                        $('#mou_partner_website_edit').val('');
                        $('#mou_partner_nation_edit').val('');

                        //change toggle
                        document.getElementById('mou_partner_nation_edit').removeAttribute('disabled');
                        document.getElementById('mou_partner_website_edit').removeAttribute('disabled');
                        document.getElementById('mou_partner_address_edit').removeAttribute('disabled');

                        document.getElementById('nation_edit_select').removeAttribute('hidden');
                        $('#nation_edit_select').select2({
                            placeholder: 'Chọn quốc gia',
                            allowClear: false,
                        });
                        document.getElementById('mou_partner_nation_edit').setAttribute('hidden', '');
                    } else {
                        //change toggle
                        document.getElementById('mou_partner_nation_edit').setAttribute('disabled', '');
                        document.getElementById('mou_partner_website_edit').setAttribute('disabled', '');
                        document.getElementById('mou_partner_address_edit').setAttribute('disabled', '');
                        $("#nation_edit_select").val('').trigger("change");
                        document.getElementById('mou_partner_nation_edit').removeAttribute('hidden');
                        $('#nation_edit_select').select2({
                            placeholder: 'Chọn quốc gia',
                            allowClear: false,
                        });
                        $('#nation_edit_select').select2('destroy');
                        $("#nation_edit_select").attr("hidden", true);

                        //change value
                        document.getElementById("mou_partner_nation_edit").value = data.country_name == null ? "" : data.country_name;
                        document.getElementById("mou_partner_website_edit").value = data.website == null ? "" : data.website;
                        document.getElementById("mou_partner_address_edit").value = data.address == null ? "" : data.address;
                        document.getElementById("partner_id_edit").value = data.partner_id == null ? "" : data.partner_id;
                    }
                    document.getElementById("edit_mou_partner_button").removeAttribute('disabled');
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

    function editMOUPartner(element) {
        var button_loader = new LoaderBtn(element);
        button_loader.startLoading();
        if ($('#mou_partner_name_edit').val().trim() == '') {
            button_loader.stopLoading();
            toastr.error('Đối tác chưa được chọn');
            return;
        }
        else if ($('#mou_sign_date_partner_edit').val().trim() == '') {
            button_loader.stopLoading();
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#mou_partner_specialization_edit').val().length == 0) {
            button_loader.stopLoading();
            toastr.error('Lĩnh vực chưa được chọn');
            return;
        }
        else if ($('#mou_partner_scope_edit').val().length == 0) {
            button_loader.stopLoading();
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else if (compareDate($('#mou_sign_date_partner_edit').val(), $('#end_date_mou').val())) { //compare = true <=> sign_date > end_date
            button_loader.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn của biên bản ghi nhớ');
        }
        else if (checkMOUPartnerEditDuplicated()) {
            button_loader.stopLoading();
            toastr.error('Đối tác đã có trong biên bản ghi nhớ');
            return;
        }
        else {
            var PartnerInfo = {
                partnername_add: document.getElementById("mou_partner_name_edit").value,
                represent_add: document.getElementById("mou_partner_represent_edit").value,
                specialization_add: $("#mou_partner_specialization_edit").val(),
                nation_add: $('#nation_edit_select').val(),
                website_add: document.getElementById("mou_partner_website_edit").value,
                address_add: document.getElementById("mou_partner_address_edit").value,
                email_add: document.getElementById("mou_partner_email_edit").value,
                sign_date_mou_add: document.getElementById("mou_sign_date_partner_edit").value,
                phone_add: document.getElementById("mou_partner_phone_edit").value,
                coop_scope_add: $("#mou_partner_scope_edit").val(),
                partner_id: document.getElementById("partner_id_edit").value,
                mou_partner_id: $('#mou_partner_id_edit').val()
            }
            $.ajax({
                url: "@Url.Action("Edit_Mou_Partner", "PartnerMOU")",
                type: "POST",
                data: JSON.stringify(PartnerInfo),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    button_loader.stopLoading();
                    Swal.fire("Thành công!",
                        "Đã chỉnh sửa thông tin đối tác thành công.", "success").then(function (result) {
                            if (result.value) {
                                location.reload();
                            }
                    });
                },
                error: function () {
                    //alert("fail");
                }
            });
        }
    }

    function confirm_delete_partner_mou(id) {
        checkLastPartner(id);
    }


    function showSwalDelMOUPartner(id) {
            var link = '@Url.Action("deletePartnerMOU", "PartnerMOU")'
            Swal.fire({
                title: "Cảnh báo",
                text: "Dữ liệu bị xóa sẽ không thể khôi phục",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Hủy",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        data: { mou_bonus_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Lỗi", "Đã có lỗi xảy ra", "error");
                            } else {
                                Swal.fire("Thành công!",
                                    "Bạn đã xóa thành công", "success").then(function (result) {
                                        if (result.value) {
                                            location.reload();
                                        }
                                });
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
    };
    var history_table;
    function show_status_history(mou_partner_id, mou_id, partner_name){
        var rowIdx = 1;
        $('#mou_id_history').val(mou_id);
        $('#partner_name_history').val(partner_name);
        if ($.fn.DataTable.isDataTable('#history-table')) {
            history_table.destroy();
        }
        history_table = $("#history-table").DataTable({
                oLanguage: {
                    oPaginate: {
                        sPrevious: "Trang trước",
                        sNext: "Trang sau"
                    },
                    sEmptyTable: "Không có dữ liệu",
                    sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
                },
                searching: false,
                lengthChange: false,
                ajax: {
                        url: "@Url.Action("Get_MOU_History", "PartnerMOU")",
                        type: "POST",
                        data: { mou_partner_id: mou_partner_id },
                        datatype: "json",
                        cache: "false"
                    },
                columns: [
                    {
                        render: function () {
                            return rowIdx++;
                        },
                        className: 'text-center',
                    },
                    {
                        data: "content",
                        className: 'text-center',
                    },
                    {
                        data: "full_name",
                        className: 'text-center',
                    },
                    {
                        data: "add_time",
                        render: function (data, type) {
                            if (type === "sort" || type === "") {
                                return data;
                            }
                            return moment(data).format('DD-MM-YYYY hh:mm:ss A');
                        },
                        className: 'text-center',
                    }
                ],
                initComplete: function () {
                    $('#history-table').parent().css('overflow-x', 'auto');
                }
        });
    }

    @*moa*@
    var moa_table;
    var listTempPartnerMOAAdd = [];
    var listScopesMOA = [];
    var listPartnersMOA = [];

    function searchMOA() {
        reloadMOATable();
    }

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            $.fn.dataTable.tables({ visible: true, api: true }).columns.adjust();
        });

    var rowIdxMOA = 1;
    function loadMOAList() {
        moa_table = $("#moa_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false
            ,
            initComplete: function () {
                $(this).parent().css('overflow-x', 'auto');
                $(this).parent().css('width', '100%');
                $(this).parent().css('padding', '0');
            },
            ajax: {
                url: "@Url.Action("ViewMOA", "MOA")",
                type: "POST",
                datatype: "json",
                data: {
                    "partner_name": function () { return $('#search_partner_name_moa').val() },
                    "moa_code": function () { return $('#search_moa_code_moa').val() },
                },
                cache: "false"
            },
            columns: [
                {
                    render: function () {
                        return rowIdxMOA++;
                    },
                    className: 'text-center',
                },
                {
                    data: "moa_code",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "partner_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "evidence",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M7.71 3.5L1.15 15l3.43 6l6.55-11.5M9.73 15L6.3 21h13.12l3.43-6m-.57-1L15.42 2H8.57l6.86 12h6.85z" fill="#626262"/></svg><!--end::Svg Icon--></span></a>';
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "moa_start_date_string",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "moa_end_date_string",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "office_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "scope_abbreviation",
                    render: function (data) {
                        data = data.replaceAll(',', ', ')
                        return data
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    data: "mou_status_id",
                    render: function (data) {
                        var status = {
                            2: {
                                'title': 'Inactive',
                                'class': 'label-light-danger'
                            },
                            1: {
                                'title': 'Active',
                                'class': 'label-light-success'
                            }
                        };
                        if (typeof status[data] === 'undefined') {
                            return data;
                        }
                        return '<span class="label label-lg font-weight-bold ' + status[data].class + ' label-inline">' + status[data].title + '</span> ';
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0')
                    },
                    className: 'text-center',
                },
                {
                    title: 'Hành động',
                    data: "moa_id",
                    orderable: false,
                    render: function (data, type, full, meta) {
                        return '<a onclick=goDetailMOA(' + data + ') class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>' +
                            '<a onclick="confirm_delete_moa(' + data + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap',
                },
            ],
        });
    }

    function nextStep() {
        toggleNextStep();
    }

    function backToStep() {
        updateMOAStartDateAndMainScope();
        toggleBackStep();
    }

    //temp code
    function goDetailMOA(moa_id) {
        var id = { id: moa_id };
        $.ajax({
            url: "@Url.Action("PassDataToMOADetail", "BasicInfoMOA")",
            type: "POST",
            contentType: "application/json;charset=utf-8",
            data: JSON.stringify(id),
            datatype: "json",
            cache: false,
            success: function (data) {
                window.location.href = '../MOA/Detail_MOA';
            },
            error: function () {

            }
        });
    }

    function addMOA() {
        //collect basicInfo data.
        var BasicInfo = {
            moa_code: $('#moa_code').val() ,
            moa_end_date: $('#end_date_moa').val(),
            mou_status_id: $('#status_moa').val(),
            reason: $('#note_moa').val(),
            moa_note: $('#moa_area').val()
        };
        var MOAAdd = {
            MOABasicInfo: BasicInfo,
            MOAPartnerInfo: listTempPartnerMOAAdd,
        };
        evidence = uppyMOAAdd.getFiles();
        let formData = new FormData();
        formData.append("input", JSON.stringify(MOAAdd));
        formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

        $.ajax({
            url: "@Url.Action("Add_Moa", "MOA")",
            type: "POST",
            //data: JSON.stringify(MOAAdd),
            //contentType: "application/json;charset=utf-8",
            data: formData,
            //contentType: "application/json;charset=utf-8",
            contentType: false,
            processData: false,
            datatype: "json",
            cache: false,
            success: function (data) {
                moa_add_button_loader.stopLoading();
                $('#add_moa_modal').modal('hide');
                toastr.success('Thêm thành công');
                $('#end_date_moa').val('');
                $('#note_moa').val('');
                $('#moa_area').val('');
                resetTableMOA();
                reloadMOATable();
                listTempPartnerMOAAdd = [];
            },
            error: function () {
                //alert("fail");
            }
        });

        //collect Partner data.
        //Send to controller.
    }

    function reloadMOATable() {
        rowIdxMOA = 1;
        moa_table.ajax.reload();
    }

    function updateMOAStartDateAndMainScope() {
        var max_date = '01/01/0001';
        var main_scopes = '';

        for (idx = 0; idx < listTempPartnerMOAAdd.length; idx++){
            compareDate
            if (compareDate(listTempPartnerMOAAdd[idx].sign_date_moa_add,max_date)){
                max_date = listTempPartnerMOAAdd[idx].sign_date_moa_add;
            }
            for (i = 0; i < listTempPartnerMOAAdd[idx].list_scope.length; i++){
                if ((listTempPartnerMOAAdd[idx].coop_scope_add+'').includes(listTempPartnerMOAAdd[idx].list_scope[i].scope_id)) {
                    if (!main_scopes.includes(listTempPartnerMOAAdd[idx].list_scope[i].scope_abbreviation)) {
                        main_scopes += listTempPartnerMOAAdd[idx].list_scope[i].scope_abbreviation + ',';
                    }
                }
            }
        }

        //remove last element.
        if (main_scopes.endsWith(",")) {
            main_scopes = main_scopes.slice(0, -1);
        }

        if (max_date == '01/01/0001') {
            max_date = '';
        }

        $("#sign_date_moa").val(max_date);
        $("#coop_scope_moa").val(main_scopes);
    }

    function loadEditTempMOA(index) {
        $("#idx_moa_edit").val(index);
        var HTMLScopesdata = "";
        var HTMLPartnerdata = "";

        $('#moa_partner_scope_edit').empty();
        $('#moa_partner_name_edit').empty();

        var coop_scope_add = listTempPartnerMOAAdd[index].coop_scope_add + '';
        var partnername_add = listTempPartnerMOAAdd[index].partnername_add + '';
        var list_scope = listTempPartnerMOAAdd[index].list_scope;

        for (i = 0; i < list_scope.length; i++) {
            if (coop_scope_add.includes(list_scope[i].scope_id)) {
                HTMLScopesdata += '<option value="' + list_scope[i].scope_id + '" selected>' + list_scope[i].scope_abbreviation + '-'+ list_scope[i].scope_name + '</option>';
            } else {
                HTMLScopesdata += '<option value="' + list_scope[i].scope_id + '">' + list_scope[i].scope_abbreviation + '-' + list_scope[i].scope_name + '</option>';
            }
        }
        $('#moa_partner_scope_edit').append(HTMLScopesdata);
        for (j = 0; j < listPartnersMOA.length; j++) {
            if (partnername_add == listPartnersMOA[j].partner_name) {
                HTMLPartnerdata += '<option value="' + listPartnersMOA[j].partner_id + '" selected>' + listPartnersMOA[j].partner_name + '</option>';
            } else {
                HTMLPartnerdata += '<option value="' + listPartnersMOA[j].partner_id + '">' + listPartnersMOA[j].partner_name + '</option>';
            }
        }
        $('#moa_partner_name_edit').append(HTMLPartnerdata);

        $('#moa_partner_represent_edit').val(listTempPartnerMOAAdd[index].represent_add);
        $('#moa_partner_nation_edit').val(listTempPartnerMOAAdd[index].nation_add);
        $('#moa_partner_website_edit').val(listTempPartnerMOAAdd[index].website_add);
        $('#moa_partner_address_edit').val(listTempPartnerMOAAdd[index].address_add);
        $('#moa_partner_email_edit').val(listTempPartnerMOAAdd[index].email_add);
        $('#moa_sign_date_partner_edit').val(listTempPartnerMOAAdd[index].sign_date_moa_add);
        $('#moa_partner_specialization_edit').val(listTempPartnerMOAAdd[index].specialization_add);
        $('#moa_partner_phone_edit').val(listTempPartnerMOAAdd[index].phone_add);
        $('#moa_partner_id_edit').val(listTempPartnerMOAAdd[index].partner_id);
    }

    function confirm_delete_temp_moa(index) {
        Swal.fire({
            title: "Cảnh báo?",
            text: "Dữ liệu sẽ bị xóa!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Đồng ý",
            cancelButtonText: "Đóng",
            reverseButtons: true
        }).then(function (result) {
            if (result.isConfirmed) {
                resetTableMOA();
                listTempPartnerMOAAdd.splice(index, 1);
                initTableMOA();
            }
        })
    }

    function initTableMOA() {
        var HTMLdata = null;
        for (idx = 0; idx < listTempPartnerMOAAdd.length; idx++) {
            HTMLdata += '<tr id="tempMOA' + idx + '" "class="MOAPartnerTempList">';
            HTMLdata += '<td class="text-center align-middle">' + (idx + 1) + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOAAdd[idx].partnername_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOAAdd[idx].represent_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOAAdd[idx].phone_add + '</td>';
            HTMLdata += '<td class="text-center align-middle">' + listTempPartnerMOAAdd[idx].email_add + '</td>';
            var buttonEdit = '<a onclick="loadEditTempMOA(' + idx + ')" href="#edit_partner_moa" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
            var buttonDel = '<a onclick="confirm_delete_temp_moa(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
            HTMLdata += '<td class="text-center align-middle text-nowrap">' + buttonEdit + buttonDel + '</td>';
            HTMLdata += '</tr>';
        }
        $('#moa-partner-table').append(HTMLdata);
    }

    function resetTableMOA() {
        for (idx = 0; idx < listTempPartnerMOAAdd.length; idx++) {
            $("#tempMOA" + idx).remove();
        }
    }

    function initAndRefreshTableMOAAdd() {
        resetTableMOA();
        initTableMOA();
    }

    $('#partner_name_add').select2({
        placeholder: 'Chọn đối tác',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getPartners',
            delay: 250,
            cache: false,
            dataType: 'json',
            data: function (params) {
                return {
                    partner_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.partner_name;
                    obj.text = obj.partner_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatPartnerInfo
    }).on("select2:select", function () { //after select partner
        //check partner
        checkPartnerAdd();
    }).on("select2:unselecting", function () {

    });

    $('#mou_partner_name_edit').select2({
        placeholder: 'Chọn đối tác',
        allowClear: true,
        tags: true,
        ajax: {
            url: '/AcademicCollaboration/getPartners',
            delay: 250,
            cache: false,
            dataType: 'json',
            data: function (params) {
                return {
                    partner_name: params.term
                };
            },
            processResults: function (data) {
                data.obj.map(function (obj) {
                    obj.id = obj.partner_name;
                    obj.text = obj.partner_name;
                    return data.obj;
                });

                return {
                    results: data.obj
                };
            }
        },
        templateResult: formatPartnerInfo
    }).on("select2:select", function () { //after select partner
        //check partner
        checkPartnerEdit();
    }).on("select2:unselecting", function () {

    });

    function formatPartnerInfo(partner) {
        if (partner.id) {
            let partner_name = partner.partner_name;
            if (partner_name === undefined) {
                return "Dữ liệu đơn vị đào tạo mới."
            } else {
                return partner.partner_name;
            }
        }
    }

    function clearInputAddMOA() {
        document.getElementById("moa_partner_name_add").value = "";
        document.getElementById("moa_partner_represent_add").value = "";
        document.getElementById("moa_partner_specialization_add").value = "";
        document.getElementById("moa_partner_nation_add").value = "";
        document.getElementById("moa_partner_website_add").value = "";
        document.getElementById("moa_partner_address_add").value = "";
        document.getElementById("moa_partner_email_add").value = "";
        document.getElementById("moa_sign_date_partner_add").value = "";
        document.getElementById("moa_partner_phone_add").value = "";
        $('#moa_partner_scope_add').empty();
    }

    function addToTempMOA() {
        if ($('#moa_partner_name_add').val().trim() == '') {
            toastr.error('Đối tác chưa được chọn');
            return;
        }
        else if ($('#moa_sign_date_partner_add').val().trim() == '') {
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#moa_partner_scope_add').val().length == 0) {
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else if (compareDate($('#sign_date_mou').val(), $('#moa_sign_date_partner_add').val())) { //compare = true <=> sign_date > end_date
            toastr.error('Ngày ký kết đối tác trong biên bản thỏa thuận phải sau ngày ký kết trong biên bản ghi nhớ');
            return;
        }
        else {
            var objCheck = listTempPartnerMOAAdd.find(x => x.partnername_add == $('#moa_partner_name_add').val());
            if (objCheck == null) {
                var TempObj = {
                    partnername_add: $("#moa_partner_name_add option:selected").text(),
                    represent_add: document.getElementById("moa_partner_represent_add").value,
                    specialization_add: $("#moa_partner_specialization_add").val(),
                    nation_add: document.getElementById("moa_partner_nation_add").value,
                    website_add: document.getElementById("moa_partner_website_add").value,
                    address_add: document.getElementById("moa_partner_address_add").value,
                    email_add: document.getElementById("moa_partner_email_add").value,
                    sign_date_moa_add: document.getElementById("moa_sign_date_partner_add").value,
                    phone_add: document.getElementById("moa_partner_phone_add").value,
                    coop_scope_add: $("#moa_partner_scope_add").val(),
                    partner_id: $('#moa_partner_name_add').val(),
                    list_scope: listScopesMOA
                }
                listTempPartnerMOAAdd.push(TempObj);
                clearInputAddMOA();
                initAndRefreshTableMOAAdd();
                updateMOAStartDateAndMainScope();
                $('#add_partner_moa').modal('hide');
            } else {
                toastr.error('Đối tác này đã được thêm');
            }
        }
    }

    function editTempMOA() {
        if ($('#moa_sign_date_partner_edit').val().trim() == '') {
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#moa_partner_scope_edit').val().length == 0) {
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else {
            var index = $("#idx_moa_edit").val();
            listTempPartnerMOAAdd[index].partnername_add = $("#moa_partner_name_edit option:selected").text(),
            listTempPartnerMOAAdd[index].represent_add = document.getElementById("moa_partner_represent_edit").value;
            listTempPartnerMOAAdd[index].specialization_add = $("#moa_partner_specialization_edit").val();
            listTempPartnerMOAAdd[index].nation_add = document.getElementById("moa_partner_nation_edit").value;
            listTempPartnerMOAAdd[index].website_add = document.getElementById("moa_partner_website_edit").value;
            listTempPartnerMOAAdd[index].address_add = document.getElementById("moa_partner_address_edit").value;
            listTempPartnerMOAAdd[index].email_add = document.getElementById("moa_partner_email_edit").value;
            listTempPartnerMOAAdd[index].sign_date_moa_add = document.getElementById("moa_sign_date_partner_edit").value;
            listTempPartnerMOAAdd[index].phone_add = document.getElementById("moa_partner_phone_edit").value;
            listTempPartnerMOAAdd[index].coop_scope_add = $("#moa_partner_scope_edit").val();
            listTempPartnerMOAAdd[index].list_scope = listScopesMOA;
            listTempPartnerMOAAdd[index].partner_id = $('#moa_partner_name_edit').val();
            initAndRefreshTableMOAAdd();
            updateMOAStartDateAndMainScope();
            $('#edit_partner_moa').modal('hide');
        }
    }

    function preventEditMOA() {
        document.getElementById("edit_moa_partner_button").setAttribute('disabled', '');
    }

    function preventAddMOA() {
        document.getElementById("add_moa_partner_button").setAttribute('disabled', '');
    }

    function clearInputAdd() {
        document.getElementById("moa_partner_name_add").value = "";
        document.getElementById("moa_partner_represent_add").value = "";
        document.getElementById("moa_partner_specialization_add").value = "";
        document.getElementById("moa_partner_nation_add").value = "";
        document.getElementById("moa_partner_website_add").value = "";
        document.getElementById("moa_partner_address_add").value = "";
        document.getElementById("moa_partner_email_add").value = "";
        document.getElementById("moa_sign_date_partner_add").value = "";
        document.getElementById("moa_partner_phone_add").value = "";
        document.getElementById("moa_partner_scope_add").value = "";
    }

    function updateListScopeMOA(data){
        $('#moa_partner_scope_add').empty();
        var HTMLScopesdata = "";
        listScopesMOA = [];
        for (j = 0; j < data.length; j++) {
            HTMLScopesdata += '<option value = "' + data[j].scope_id + '">' + data[j].scope_abbreviation + '-'+ data[j].scope_name +'</option>';
            var obj = {
                scope_id: data[j].scope_id,
                scope_abbreviation: data[j].scope_abbreviation,
                scope_name: data[j].scope_name,
            }
            listScopesMOA.push(obj);
        }
        $('#moa_partner_scope_add').append(HTMLScopesdata);
    }

    function updateListScopeMOAEdit(data) {
        $('#moa_partner_scope_edit').empty();
        var HTMLScopesdata = "";
        listScopesMOA = [];
        for (j = 0; j < data.length; j++) {
            HTMLScopesdata += '<option value = "' + data[j].scope_id + '">' + data[j].scope_abbreviation + '-' + data[j].scope_name + '</option>';
            var obj = {
                scope_id: data[j].scope_id,
                scope_abbreviation: data[j].scope_abbreviation,
                scope_name: data[j].scope_name,
            }
            listScopesMOA.push(obj);
        }
        $('#moa_partner_scope_edit').append(HTMLScopesdata);
    }

    function checkPartnerEditMOA(){
        var partner_id = document.getElementById("moa_partner_name_edit").value;
        var em = { partner_id: partner_id };
        $.ajax({
            url: "@Url.Action("GetMOAScopesByPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                updateListScopeMOAEdit(data);
                document.getElementById("edit_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
        $.ajax({
            url: "@Url.Action("CheckPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == "") {

                } else {
                    document.getElementById("moa_partner_represent_edit").value = data.contact_point_name == null ? "" : data.contact_point_name;
                    document.getElementById("moa_partner_website_edit").value = data.website == null ? "" : data.website;
                    document.getElementById("moa_partner_address_edit").value = data.address == null ? "" : data.address;
                    document.getElementById("moa_partner_email_edit").value = data.contact_point_email == null ? "" : data.contact_point_email;
                    document.getElementById("moa_partner_nation_edit").value = data.country_name == null ? "" : data.country_name;
                    document.getElementById("moa_partner_phone_edit").value = data.contact_point_phone == null ? "" : data.contact_point_phone;
                    document.getElementById("moa_partner_id_edit").value = data.partner_id == null ? "" : data.partner_id;
                    document.getElementById("moa_partner_specialization_edit").value = data.specialization_name == null ? "" : data.specialization_name;
                }
                document.getElementById("edit_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    function checkPartnerAddMOA() {
        var partner_id= document.getElementById("moa_partner_name_add").value;
        var em = { partner_id: partner_id };
        $.ajax({
            url: "@Url.Action("GetMOAScopesByPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                updateListScopeMOA(data);
                document.getElementById("add_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
        $.ajax({
            url: "@Url.Action("CheckPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == "") {

                } else {
                    document.getElementById("moa_partner_represent_add").value = data.contact_point_name == null ? "" : data.contact_point_name;
                    document.getElementById("moa_partner_website_add").value = data.website == null ? "" : data.website;
                    document.getElementById("moa_partner_address_add").value = data.address == null ? "" : data.address;
                    document.getElementById("moa_partner_email_add").value = data.contact_point_email == null ? "" : data.contact_point_email;
                    document.getElementById("moa_partner_nation_add").value = data.country_name == null ? "" : data.country_name;
                    document.getElementById("moa_partner_phone_add").value = data.contact_point_phone == null ? "" : data.contact_point_phone;
                    document.getElementById("moa_partner_id_add").value = data.partner_id == null ? "" : data.partner_id;
                    document.getElementById("moa_partner_specialization_add").value = data.specializations == null ? "" : data.specializations;
                }
                document.getElementById("add_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    $(document).ready(function () {
        $("#moa_partner_name_add option").each(function () {
            listPartnersMOA.push({
                partner_id: $(this).val(),
                partner_name: $(this).text()
            });
        });
    });

    var moa_add_button_loader;
    function doneStep(element) {
        moa_add_button_loader = new LoaderBtn(element);
        moa_add_button_loader.startLoading();
        if (listTempPartnerMOAAdd.length == 0) {
            moa_add_button_loader.stopLoading();
            toastr.error('Chưa có đối tác nào được thêm');
        }
        else if ($('#end_date_moa').val() == "") {
            moa_add_button_loader.stopLoading();
            toastr.error('Ngày hết hạn chưa được chọn');
        }
        else if (compareDate($('#sign_date_moa').val(), $('#end_date_moa').val())) { //compare = true <=> sign_date > end_date
            moa_add_button_loader.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
        }
        else if (MOACodeIsInvalid($('#moa_code').val().trim())) {
            moa_add_button_loader.stopLoading();
            toastr.error('Số hiệu không hợp lệ');
        }
        else {
            checkMOACodeDuplicated();
        }
    }

    function checkMOACodeDuplicated(){
            var obj =
            {
                moa_code: $('#moa_code').val()
            };
            $.ajax({
                url: "@Url.Action("CheckDuplicatedMOACode", "MOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (isDuplicated) {
                    if (isDuplicated) {
                        moa_add_button_loader.stopLoading();
                        toastr.error("Đã có mã hiệu " + $('#moa_code').val()+ " trong hệ thống");
                    } else {
                        checkDuplicatePartnersMOA();
                    }
                },
                error: function () {

                }
            });
    }

    function checkDuplicatePartnersMOA(){
            var obj =
            {
                MOAPartnerInfo: listTempPartnerMOAAdd
            };
            $.ajax({
                url: "@Url.Action("checkDuplicatePartnersMOA", "MOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data == true) {
                        moa_add_button_loader.stopLoading();
                        toastr.error("Các đối tác trên đã được ký kết biên bản thỏa thuận");
                    } else {
                        addMOA();
                    }
                },
                error: function () {

                }
            });
    }

    function confirm_delete_moa(id){
        var link = '@Url.Action("Delete_Moa", "MOA")'
            Swal.fire({
                title: "Cảnh báo",
                text: "Toàn bộ dữ liệu trong biên bản thỏa thuận sẽ bị xóa và không thể khôi phục",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        type: "POST",
                        data: { moa_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                reloadMOATable();
                                Swal.fire("Thành công!", "Biên bản thỏa thuận đã được xóa thành công.", "success")
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
    }
</script>
}
