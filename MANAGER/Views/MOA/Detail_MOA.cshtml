
@{
    ViewBag.Title = "CHI TIẾT BIÊN BẢN THỎA THUẬN";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .last-row {
        border-bottom: 2px solid #cdcaca;
        padding-bottom: 20px;
    }

    .modal {
        overflow-y: auto;
    }

    .uppy-list-item {
        margin: 0 !important;
    }

    .select2-dropdown {
        z-index: 8888;
    }

    .mou_table th {
        font-size: 10px !important
    }

    .mou_table td {
        font-size: 10px !important
    }

        .mou_table td span {
            font-size: 10px !important
        }

        .mou_table td a {
            font-size: 10px !important
        }
</style>

<div class="card card-custom ">
    <div class="card-body p-0">
        <div class="row justify-content-center px-8 my-lg-5 px-lg-10">
            <div class="col-xl-12 col-xxl-12">
                <div class="tabbable-line">
                    <ul class="nav nav-tabs nav-tabs-line" style="margin-bottom: 10px;" id="MOATab">
                        <li class="nav-item ">
                            <a class="nav-link active" data-toggle="tab" href="#kt_tab_pane_1">CƠ BẢN</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#kt_tab_pane_2">ĐỐI TÁC</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="kt_tab_pane_1" role="tabpanel" aria-labelledby="kt_tab_pane_1">
                            <div class="row mb-5 justify-content-center">
                                <h4 style="font-weight: bold;">
                                    THÔNG TIN VỀ BIÊN BẢN THỎA THUẬN
                                </h4>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label style="color:red">*</label><label class="font-weight-bolder">Số hiệu</label>&nbsp;
                                    <label style="font-style: italic;">(Năm/Số thứ tự)</label>
                                    <input class="form-control" type="text" placeholder="Số hiệu" autocomplete="off" required id="moa_code" />
                                </div>
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Đơn vị - Cơ sở kí kết</label>&nbsp;
                                    <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                        <input class="form-control" type="text" required id="office_moa" style="width:100% !important" disabled />
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label class="font-weight-bolder">Thời gian kí kết</label>&nbsp;
                                    <label style="font-style: italic;"></label>
                                    <div class="input-group date kt_datetimepicker_3" id="kt_datetimepicker_sign_date_moa" data-target-input="nearest">
                                        <input disabled type="text" class="form-control datetimepicker-input" placeholder="Thời gian kí kết" id="sign_date_moa" readonly autocomplete="off" data-target="#kt_datetimepicker_sign_date_moa" />
                                        <div class="input-group-append" data-target="#kt_datetimepicker_sign_date_moa" data-toggle="datetimepicker">
                                            <span class="input-group-text">
                                                <i class="ki ki-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xl-4 col-lg-4 col-md-6 col-sm-12">
                                    <label style="color:red">*</label><label class="font-weight-bolder">Thời gian hết hạn</label>&nbsp;
                                    <div class="input-group date kt_datetimepicker_3" id="kt_datetimepicker_end_date_moa" data-target-input="nearest">
                                        <input type="text" class="form-control datetimepicker-input" placeholder="Thời gian hết hạn" id="end_date_moa" readonly autocomplete="off" data-target="#kt_datetimepicker_end_date_moa" />
                                        <div class="input-group-append" data-target="#kt_datetimepicker_end_date_moa" data-toggle="datetimepicker">
                                            <span class="input-group-text">
                                                <i class="ki ki-calendar"></i>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-2 col-lg-2 col-md-4 col-sm-4">
                                    <label style="color:red">*</label>
                                    <label class="font-weight-bolder">Trạng thái</label>&nbsp;
                                    <select class="form-control" required id="moa_status">
                                        @*<option value="0">Inactive</option>
                                            <option value="1">Active</option>*@
                                    </select>
                                </div>
                                <div class="col-xl-6 col-lg-6 col-md-8 col-sm-8">
                                    <label class="font-weight-bolder">Ghi chú</label>&nbsp;
                                    <input class="form-control" type="text" placeholder="Ghi chú" autocomplete="off" required id="moa_reason" />
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Phạm vi hợp tác chính</label>&nbsp;
                                    <label style="font-style: italic;">
                                        (Cập nhật theo pham vi hợp tác của các đối tác kí kết)
                                    </label>
                                    <input disabled class="form-control" type="text" placeholder="Phạm vi hợp tác" autocomplete="off" required id="moa_coop_scope" />
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Bản mềm</label>&nbsp;
                                    <label style="font-style: italic;">(Tối đa 5MB và 1 tệp tin)</label>
                                    <div class="uppy row" id="moa_detail_upload">
                                        <div class="uppy-wrapper col-3"></div>
                                        <div class="uppy-list col-7"></div>
                                        <div class="uppy-status"></div>
                                        <div class="uppy-informer uppy-informer-min"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <label class="font-weight-bolder">Lưu ý</label>
                                    <textarea id="moa_note" class="form-control" rows="6"></textarea>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center last-row">
                                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12">
                                    <a href="javascript:" onclick="saveBasicInfo(this)" class="load-btn btn btn-sm btn-light-success font-weight-bold float-right">Lưu</a>
                                </div>
                            </div>
                            <div class="row mb-5 justify-content-center">
                                <h4 style="font-weight: bold;">
                                    LỊCH SỬ KÍ KẾT BỔ SUNG BIÊN BẢN THỎA THUẬN
                                </h4>
                            </div>
                            <div class="col-lg-3 col-xl-3 col-md-3 col-sm-12 mb-3">
                                <div class="row align-items-center">
                                    <a href="#add_additional_moa" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold">Thêm</a>
                                </div>
                            </div>
                            @{
                                Html.RenderPartial("../MOA/PartialView/MOABasicInfo/List_Ex_MOA");
                            }
                        </div>
                        <div class="tab-pane fade" id="kt_tab_pane_2" role="tabpanel" aria-labelledby="kt_tab_pane_2">
                            <div class="row mb-5">
                                <h4 style="font-weight: bold;">
                                    DANH SÁCH ĐỐI TÁC HOẠT ĐỘNG
                                </h4>
                            </div>
                            <div class="row">
                                <div class="col-lg-11 col-xl-11 col-md-11 col-sm-11">
                                    <div class="row align-items-center">
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <input type="text" class="form-control text-center" placeholder="Tên đối tác" id="search_partner_name" />
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                                <input type="text" class="form-control text-center" placeholder="Quốc gia" id="search_nation" />
                                            </div>
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 mr-3 my-1">
                                            <div class="d-flex align-items-center col-xl-12 col-lg-12 px-0">
                                                <input type="text" class="form-control text-center" placeholder="Lĩnh vực" id="search_specialization" />
                                            </div>
                                        </div>
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 my-1">
                                            <a href="javascript:" onclick="searchMOAPartner()" class="btn btn-light-primary px-6 font-weight-bold text-nowrap">Tìm kiếm</a>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-lg-1 col-xl-1 col-md-1 col-sm-1">
                                    <div class="row align-items-center justify-content-end">
                                        <div class="col-lg-offset-3 col-md-offset-3 col-sm-offset-3 my-1">
                                            <a href="#add_partner_moa" class="btn btn-light-primary px-6 font-weight-bold" data-toggle="modal">Thêm</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @{
                                Html.RenderPartial("../MOA/PartialView/MOAPartner/List_Partner_MOA");
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*modal add_additional_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOABasicInfo/Add_Ex_MOA");
}

@*modal edit_additional_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOABasicInfo/Edit_Ex_MOA");
}

@*modal add_partner_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOAPartner/Add_Partner_MOA");
}

@*modal edit_partner_moa*@
@{
    Html.RenderPartial("../MOA/PartialView/MOAPartner/Edit_Partner_MOA");
}

@*modal mou_partner_history*@
@{
    Html.RenderPartial("../MOA/PartialView/MOAPartner/List_History_MOA");
}

@section scripts{

    <link href="~/Content/assets/plugins/custom/datatables/datatables.bundle.css" rel="stylesheet" />
    <script src="~/Content/assets/plugins/custom/datatables/datatables.bundle.js"></script>
    <script>

    //funtion delete
    function confirm_delete(id) {
        //function confirm_delete(id, action, controller) {
            var link = '@Url.Action("action", "controller")'
            link = link.replace("action", "Delete_MOU");
            link = link.replace("controller", "MOU");
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel!",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        data: { mou_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                Swal.fire("Deleted!", "Your file has been deleted.", "success")
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
        };

    </script>
    <script>
        $('#facility_detail_mou').select2({
            placeholder: 'Đơn vị - Cơ sở kí kết',
            allowClear: true,
        })
        $('#moa_status').select2({
            placeholder: 'Trạng thái',
            allowClear: false,
        })
        $('#partner_name_ex_moa_add').select2({
            placeholder: 'Tên đối tác',
            allowClear: false,
        })
        $('#partner_name_ex_moa_edit').select2({
            placeholder: 'Tên đối tác',
            allowClear: false,
        })
        $('#partner_name_ex_moa_add_for_edit').select2({
            placeholder: 'Tên đối tác',
            allowClear: false,
        })
        $('#partner_name_ex_moa_edit_for_edit').select2({
            placeholder: 'Tên đối tác',
            allowClear: false,
        })
        $('#partner_name_form').select2({
            placeholder: 'Tên đối tác',
            allowClear: true,
        }).on("select2:select", function () { //after select
            checkPartnerAddMOA();
        }).on("select2:unselecting", function () {

        });
        $('#partner_name_form_edit').select2({
            placeholder: 'Tên đối tác',
            allowClear: true,
        }).on("select2:select", function () { //after select
            checkPartnerEditMOA();
        }).on("select2:unselecting", function () {

        });
        $('#coop_scope').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_edit').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_moa_add').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_moa_edit').select2({
            placeholder: 'Lĩnh vực',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_moa_edit_for_edit').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        $('#coop_scope_ex_moa_add_for_edit').select2({
            placeholder: 'Phạm vi hợp tác',
            allowClear: true,
            templateSelection: formatStateScope
        })
        //datepicker
        var KTBootstrapDatetimepicker = function () {
            var baseDemos = function () {
                $('.kt_datetimepicker_3').datetimepicker({
                    format: 'DD/MM/yyyy'
                });

            }
            return {
                // Public functions
                init: function () {
                    baseDemos();
                }
            };
        }();

        jQuery(document).ready(function () {
            KTBootstrapDatetimepicker.init();
        });
        function formatStateScope(state) {
            return state.text.split('-')[0];
        };
    </script>
    <script>

         //modal tab 2
        function show_data_partner_detail(id) {
                $('#add_partner_mou_title').text('SỬA ĐỐI TÁC TRONG BIÊN BẢN THỎA THUẬN');
            $.ajax({
                url: '@Url.Action("Get_Data_Partner_Detail", "MOU")',
                data: { 'id': id },
                success: function (data) {
                    if (data = "") {
                        toastr.error("Có lỗi xảy ra");
                    } else {
                        //toastr.success("Lmao");
                    }
                },
            });
        };

         //modal tab 2
        function show_status_history(id){
            $.ajax({
                url: '@Url.Action("Get_MOU_History", "MOU")',
                data: { 'id': id },
                success: function (data) {
                    if (data = "") {
                        toastr.error("Có lỗi xảy ra");
                    } else {
                        var temp = '';
                        var partner_name_temp = 'Bunkyou University';
                        var mou_id_temp = '2021/01';
                        for (i = 0; i < 3; i++) {
                            temp += '<tr><td  class="text-center">' + i + 1 + '</td><td class="text-center">Ký kết biên bản ghi nhớ</td><td class="text-center">Lê Phương Anh</td><td class="text-center">18/03/2020 13:01:23</td></tr>';
                        }
                        $('#body_mou_history').html(temp);
                        $('#partner_name').val(partner_name_temp);
                        $('#mou_id').val(mou_id_temp);
                    }
                },
            });
        };

        $(document).ready(function () {
            //split card
            //overflow
            $('.header-modify').css('padding', '13px');
        });
    </script>

    <script src="~/Content/assets/plugins/custom/uppy/uppy.bundle.js?v=7.0.6"></script>
    <script>
        "use strict";
        var uppyMOAAdd;
        var uppyExMOAAdd;
        var uppyExMOAEdit;
        var old_file_number;
        var old_file_number_ex_moa;
        var new_file_number;
        var new_file_number_ex_moa;


        var KTUppy = function () {
            const Tus = Uppy.Tus;
            const ProgressBar = Uppy.ProgressBar;
            const StatusBar = Uppy.StatusBar;
            const FileInput = Uppy.FileInput;
            const Informer = Uppy.Informer;

            // to get uppy companions working, please refer to the official documentation here: https://uppy.io/docs/companion/
            const Dashboard = Uppy.Dashboard;
            const Dropbox = Uppy.Dropbox;
            const GoogleDrive = Uppy.GoogleDrive;
            const Instagram = Uppy.Instagram;
            const Webcam = Uppy.Webcam;

            // Private functions

            //ex-moa
            uppyExMOAAdd = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyExMOAAdd = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyExMOAAdd.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyExMOAAdd.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyExMOAAdd.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyExMOAAdd.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyExMOAAdd.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyExMOAAdd.on('file-added', function (file) {
                    if (uppyExMOAAdd.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyExMOAAdd.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                });
            }

            //ex-mou-edit
            uppyExMOAEdit = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyExMOAEdit = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyExMOAEdit.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyExMOAEdit.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyExMOAEdit.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyExMOAEdit.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyExMOAEdit.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyExMOAEdit.on('file-added', function (file) {
                    if (uppyExMOAEdit.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                    new_file_number_ex_moa = 1;
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyExMOAEdit.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                    new_file_number_ex_moa = 0;
                });
            }

            //moa
            uppyMOAAdd = Uppy.Core({
                debug: true,
                autoProceed: false,
                showProgressDetails: true,
                restrictions: {
                    maxFileSize: 5000000, //5mb
                    allowedFileTypes: ['.pdf', '.jfif', '.jpg', '.jpeg', '.png']
                    //maxNumberOfFiles: 1,
                    //minNumberOfFiles: 0
                }
            });
            var initUppyMOAAdd = function (data) {
                // Uppy variables
                // For more info refer: https://uppy.io/
                var elemId = data;
                var id = '#' + elemId;
                var $statusBar = $(id + ' .uppy-status');
                var $uploadedList = $(id + ' .uppy-list');
                var timeout;

                uppyMOAAdd.use(FileInput, { target: id + ' .uppy-wrapper', pretty: false });
                uppyMOAAdd.use(Informer, { target: id + ' .uppy-informer' });

                // demo file upload server
                uppyMOAAdd.use(Tus, { endpoint: 'https://master.tus.io/files/' });
                uppyMOAAdd.use(StatusBar, {
                    target: id + ' .uppy-status',
                    hideUploadButton: true,
                    hideAfterFinish: false
                });

                $(id + ' .uppy-FileInput-input').addClass('uppy-input-control').attr('id', elemId + '_input_control');
                $(id + ' .uppy-FileInput-container').append('<label class="uppy-input-label btn btn-light-primary btn-sm btn-bold" for="' + (elemId + '_input_control') + '">Tải file</label>');

                var $fileLabel = $(id + ' .uppy-input-label');

                //uploading toggle
                uppyMOAAdd.on('upload', function () {
                    $fileLabel.text("Đang tải...");
                    $statusBar.addClass('uppy-status-ongoing');
                    $statusBar.removeClass('uppy-status-hidden');
                    clearTimeout(timeout);
                });

                //update file
                uppyMOAAdd.on('file-added', function (file) {
                    if (uppyMOAAdd.getFiles().length != 0) {
                        $(id + ' .uppy-list .uppy-list-remove').click();
                    }
                    var uploadListHtml = '<div class="uppy-list-item" data-id="' + file.id + '"><div class="uppy-list-label">' + file.name + '</div><span class="uppy-list-remove" data-id="' + file.id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                    $uploadedList.append(uploadListHtml);
                    $statusBar.addClass('uppy-status-hidden');
                    $statusBar.removeClass('uppy-status-ongoing');

                    $fileLabel.text("Tải file");
                    new_file_number = 1
                });

                //remove current file
                $(document).on('click', id + ' .uppy-list .uppy-list-remove', function () {
                    var itemId = $(this).attr('data-id');
                    uppyMOAAdd.removeFile(itemId);
                    $(id + ' .uppy-list-item[data-id="' + itemId + '"').remove();
                    new_file_number = 0
                });
            }

            return {
                // public functions
                init: function () {
                    initUppyExMOAAdd('addition_moa_upload');
                    initUppyExMOAEdit('edit_addition_moa_upload');
                    initUppyMOAAdd('moa_detail_upload');
                }
            };
        }();

        KTUtil.ready(function () {
            KTUppy.init();
        });

    </script>

    @*moa*@
<script>
        var listStatus = [
            {
                status_id: 2,
                status_name: 'Inactive'
            }
            ,
            {
                status_id: 1,
                status_name: 'Active'
            }
        ];
        var listScopes = [];
        var listPartner = [];
        var listTempExMOAPartnerScope = [];
        var listTempExMOAPartnerScopeEdit = [];
        var moa_ex;

        $(document).ready(function () {
            //getListOffice();
            loadBasicInfo();
            loadListExMOA();
            pushDataToList();
            loadLastActiveTab();
        });

        function loadLastActiveTab() {
            $('a[data-toggle="tab"]').on('show.bs.tab', function (e) {
                localStorage.setItem('activeTab', $(e.target).attr('href'));
            });
            var activeTab = localStorage.getItem('activeTab');
            if (activeTab) {
                $('#MOATab a[href="' + activeTab + '"]').tab('show');
            }
            //$('#kt_aside_toggle').click();
        }

        function getListOffice(){
            $.ajax({
                url: "@Url.Action("getOffice", "BasicInfoMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    //var listOffice = data;
                    //loadBasicInfo(listOffice);
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function loadOffice(OfficeData) {
            var HTMLOfficedata = "";
            for (i = 0; i < listOffice.length; i++) {
                if (listOffice[i].office_id == OfficeData.office_id) {
                    HTMLOfficedata += '<option value = "' + listOffice[i].office_id + '" selected>' + listOffice[i].office_abbreviation + '</option>'
                } else {
                    HTMLOfficedata += '<option value = "' + listOffice[i].office_id + '">' + listOffice[i].office_abbreviation + '</option>'
                }
            }
            $('#office_moa').append(HTMLOfficedata);
        }

        function loadBasicInfo() {
            $.ajax({
                url: "@Url.Action("getBasicInfo", "BasicInfoMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                success: function (data) {
                    document.getElementById("moa_code").value = data.moa_code == null ? "" : data.moa_code;
                    document.getElementById("sign_date_moa").value = data.moa_start_date_string == null ? "" : data.moa_start_date_string;
                    document.getElementById("end_date_moa").value = data.moa_end_date_string == null ? "" : data.moa_end_date_string;
                    document.getElementById("moa_reason").value = data.reason == null ? "" : data.reason;
                    document.getElementById("moa_coop_scope").value = data.scope_abbreviation == null ? "" : data.scope_abbreviation;
                    document.getElementById("moa_note").value = data.moa_note == null ? "" : data.moa_note;
                    document.getElementById("office_moa").value = data.office_abbreviation == null ? "" : data.office_abbreviation;

                    //load available exist file
                    if (data.file_drive_id != null) {
                        let elemId = 'moa_detail_upload';
                        let id = '#' + elemId;
                        let $statusBar = $(id + ' .uppy-status');
                        let $uploadedList = $(id + ' .uppy-list');
                        let uploadListHtml = '<div class="uppy-list-item" data-id="' + data.file_drive_id + '"><div class="uppy-list-label">' + data.file_name + '</div><span class="uppy-list-remove" data-id="' + data.file_drive_id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                        $uploadedList.append(uploadListHtml);
                        $statusBar.addClass('uppy-status-hidden');
                        $statusBar.removeClass('uppy-status-ongoing');
                        old_file_number = 1;
                    }
                    else {
                        old_file_number = 0;
                    }
                    new_file_number = old_file_number;
                    loadStatus(data.moa_status_id);
                },
                error: function () {
                    //alert("fail");
                }
            });
    }

        function loadStatus(moa_status_id) {
            var HTMLStatusData = "";
            for (i = 0; i < listStatus.length; i++) {
                if (listStatus[i].status_id == moa_status_id) {
                    HTMLStatusData += '<option value = "' + listStatus[i].status_id + '" selected>' + listStatus[i].status_name + '</option>'
                } else {
                    HTMLStatusData += '<option value = "' + listStatus[i].status_id + '">' + listStatus[i].status_name + '</option>'
                }
            }
            $('#moa_status').append(HTMLStatusData);
        }

        var button_loader_moa;
        function saveBasicInfo(element) {
            button_loader_moa = new LoaderBtn(element);
            button_loader_moa.startLoading();
            if ($('#moa_code').val().trim() == "") {
                button_loader_moa.stopLoading();
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if ($('#end_date_moa').val().trim() == "") {
                button_loader_moa.stopLoading();
                toastr.error('Ngày hết hạn chưa được chọn');
                return;
            }
            else if (compareDate($('#sign_date_moa').val(), $('#end_date_moa').val())) { //compare = true <=> sign_date > end_date
                button_loader_moa.stopLoading();
                toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                return;
            }
            else if (MOACodeIsInvalid($('#moa_code').val().trim())) {
                button_loader_moa.stopLoading();
                toastr.error('Số hiệu không hợp lệ');
                return;
            }
            else {
                saveBasicInfoMOAAction();
            }
        }

        function saveBasicInfoMOAAction(){
                var BasicInfo = {
                    moa_code: $('#moa_code').val(),
                    moa_end_date_string: $('#end_date_moa').val(),
                    reason: $('#moa_reason').val(),
                    moa_note: $('#moa_note').val(),
                    moa_status_id: $('#moa_status').val()
                };
                evidence = uppyMOAAdd.getFiles();
                //init FormData

                let formData = new FormData();
                formData.append("input", JSON.stringify(BasicInfo));
                formData.append("old_file_number", old_file_number);
                formData.append("new_file_number", new_file_number);
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

                $.ajax({
                    url: "@Url.Action("editMOABasicInfo", "BasicInfoMOA")",
                    type: "POST",
                    //data: JSON.stringify(BasicInfo),
                    data: formData,
                    //contentType: "application/json;charset=utf-8",
                    contentType: false,
                    processData: false,
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        button_loader_moa.stopLoading();
                        Swal.fire("Thành công",
                            "Thông tin được cập nhật thành công", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                        });
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
        }

        function compareDate(current, max) {
            var currentToken = current.split("/");
            var maxToken = max.split("/");
            if (parseInt(currentToken[2]) == parseInt(maxToken[2])) {    //year
                if (parseInt(currentToken[1]) == parseInt(maxToken[1])) {   //month
                    return parseInt(currentToken[0]) <= parseInt(maxToken[0]) ? false : true;   //date.
                } else {
                    return parseInt(currentToken[1]) < parseInt(maxToken[1]) ? false : true;
                }
            } else {
                return parseInt(currentToken[2]) < parseInt(maxToken[2]) ? false : true;
            }
        }

        function MOACodeIsInvalid(mou_code) {
            //ex : 2021/1_MOA/2.
            var bigToken = mou_code.split("_");
            if (bigToken.length != 2) {
                return true;
            } else {
                var old_mou_code = bigToken[0].split("/");
                if (old_mou_code.length == 2 && /^\d+$/.test(old_mou_code[0]) && /^\d+$/.test(old_mou_code[1])) {
                    var ex_code = bigToken[1].split("/");
                    if (ex_code.length == 2 && ex_code[0] == 'MOA' && /^\d+$/.test(ex_code[1])) {
                        return false;
                    } else {
                        return true;
                    }
                } else {
                    return true;
                }
            }
        }

        function ExMOACodeIsInvalid(code) {
            //ex : 2021/1_MOA/2_BS/1.
            var bigToken = code.split("_");
            if (bigToken.length != 3) {
                return true;
            } else {
                var old_code = bigToken[0] + '_' + bigToken[1];
                if (MOACodeIsInvalid(old_code)) {
                    return true;
                }
                else {
                    var ex_code = bigToken[2].split("/");
                    if (ex_code.length == 2 && ex_code[0] == 'BS' && /^\d+$/.test(ex_code[1])) {
                        return false;
                    } else {
                        return true;
                    }
                }
            }
        }

        function loadListExMOA() {
            moa_ex = $("#moa_update_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false,
            ajax: {
                    url: "@Url.Action("ViewExMOA", "BasicInfoMOA")",
                    type: "POST",
                    datatype: "json",
                    cache: "false"
                }
                ,
                columns: [
                { data: "moa_bonus_code" },
                { data: "moa_bonus_decision_date_string" },
                { data: "moa_bonus_end_date_string" },
                { data: "partner_name" },
                { data: "scope_abbreviation" },
                {
                    data: "link",
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><path d="M7.71 3.5L1.15 15l3.43 6l6.55-11.5M9.73 15L6.3 21h13.12l3.43-6m-.57-1L15.42 2H8.57l6.86 12h6.85z" fill="#626262"/></svg><!--end::Svg Icon--></span></a>';
                        }
                    }
                },
                {
                    title: 'Hành động',
                    data: "moa_bonus_id",
                    orderable: false,
                    render: function (data) {
                        return '<a href="#edit_additional_moa" onclick=editExMOA(' + data + ') class="btn btn-sm btn-light-primary px-6 font-weight-bold" data-toggle="modal" style="margin-right: 10px;">Sửa</a>' +
                        '<a onclick="deleteExMOA(' + data + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    }
                }
                ],
                columnDefs: [
                    {
                        className: "text-center",
                        targets: '_all',
                    },
                ]
            });
        }

        function deleteExMOA(id) {
            Swal.fire({
                title: "Cảnh báo",
                text: "Dữ liệu trên sẽ không thể khôi phục sau khi xóa",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: "@Url.Action("deleteExMOA", "BasicInfoMOA")",
                        data: { moa_bonus_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                Swal.fire("Thành công",
                                    "Đã xóa thành công.", "success").then(function (result) {
                                        if (result.value) {
                                            location.reload();
                                        }
                                    });
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
        }

        function addExMOA() {
            getNewExMOACode();
        }

        function pushDataToList() {
            $("#coop_scope_ex_moa_add option").each(function (){
                listScopes.push({
                    scope_id: $(this).val(),
                    scope_abbreviation: $(this).text()
                });
            });
            $("#partner_name_ex_moa_add option").each(function () {
                listPartner.push({
                    partner_id: $(this).val(),
                    partner_name: $(this).text()
                });
            });
        }

        $('#partner_name_ex_moa_add').on('change', function () {
            var em = { partner_id: this.value };
            $.ajax({
                url: "@Url.Action("getNewExMOAScopesList", "BasicInfoMOA")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#coop_scope_ex_moa_add').empty();
                    for (i = 0; i < data.length; i++) {
                        var newOption = new Option(data[i].scope_abbreviation+'-'+data[i].scope_name, data[i].scope_id, false, false);
                        $('#coop_scope_ex_moa_add').append(newOption).trigger('change');
                    }
                },
                error: function () {
                    //alert("fail");
                }
            });
        });

        $('#partner_name_ex_moa_edit').on('change', function () {
            var em = { partner_id: this.value };
            $.ajax({
                url: "@Url.Action("getNewExMOAScopesList", "BasicInfoMOA")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#coop_scope_ex_moa_edit').empty();
                    for (i = 0; i < data.length; i++) {
                        var newOption = new Option(data[i].scope_abbreviation, data[i].scope_id, false, false);
                        $('#coop_scope_ex_moa_edit').append(newOption).trigger('change');
                    }
                },
                error: function () {
                    //alert("fail");
                }
            });
        });

        $('#partner_name_ex_moa_add_for_edit').on('change', function () {
            var em = { partner_id: this.value };
            $.ajax({
                url: "@Url.Action("getNewExMOAScopesList", "BasicInfoMOA")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#coop_scope_ex_moa_add_for_edit').empty();
                    for (i = 0; i < data.length; i++) {
                        var newOption = new Option(data[i].scope_abbreviation + '-' + data[i].scope_name, data[i].scope_id, false, false);
                        $('#coop_scope_ex_moa_add_for_edit').append(newOption).trigger('change');
                    }
                },
                error: function () {
                    //alert("fail");
                }
            });
        });

        $('#partner_name_ex_moa_edit_for_edit').on('change', function () {
            var em = { partner_id: this.value };
            $.ajax({
                url: "@Url.Action("getNewExMOAScopesList", "BasicInfoMOA")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#coop_scope_ex_moa_edit_for_edit').empty();
                    for (i = 0; i < data.length; i++) {
                        var newOption = new Option(data[i].scope_abbreviation + '-' + data[i].scope_name, data[i].scope_id, false, false);
                        $('#coop_scope_ex_moa_edit_for_edit').append(newOption).trigger('change');
                    }
                },
                error: function () {
                    //alert("fail");
                }
            });
        });

        function addExMOATemp() {
            if ($('#partner_name_ex_moa_add').val() == "") {
                toastr.error('Đối tác chưa được chọn');
                return;
            }
            else if ($('#coop_scope_ex_moa_add').val().length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            else {
                var partner_id = $('#partner_name_ex_moa_add').val();
                var ListScopesOfExMOA = [];
                var partner_name_ex_add = listPartner.find(x => x.partner_id == partner_id).partner_name;
                var objCheck = listTempExMOAPartnerScope.find(x => x.partner_name == partner_name_ex_add);
                if (objCheck == null) {
                    var scopes = $("#coop_scope_ex_moa_add").select2('data');
                    var scopes_abbreviation = '';
                    for (i = 0; i < scopes.length; i++) {
                        scopes_abbreviation += scopes[i].text.split('-')[0] + ',';
                    }
                    if (scopes_abbreviation.endsWith(",")) {
                        scopes_abbreviation = scopes_abbreviation.slice(0, -1);
                    }

                    var objPartner = listPartner.find(x => x.partner_id == partner_id);
                    var partner_name = objPartner.partner_name;


                    $("#coop_scope_ex_moa_add option").each(function () {
                        ListScopesOfExMOA.push({
                            scope_id: $(this).val(),
                            scope_abbreviation: $(this).text().split('-')[0],
                            scope_name: $(this).text().split('-')[1],
                        });
                    });

                    var temp = {
                        partner_id: partner_id,
                        partner_name: partner_name,
                        scopes_id: $("#coop_scope_ex_moa_add").val(),
                        scopes_abbreviation: scopes_abbreviation,
                        list_scopes: ListScopesOfExMOA
                    }
                    $('#add-partner-scope').modal('hide');
                    listTempExMOAPartnerScope.push(temp);
                    clearInputAddExMOAPartner();
                    initAndRefreshTableExMOAAdd();
                }
                else {
                    toastr.error('Đối tác này đã được thêm');
                }
            }
        }

        function clearInputAddExMOAPartner() {
            $('#partner_name_ex_moa_add').val('');
            $('#coop_scope_ex_moa_add').empty();
            var HTMLScopedata = '';
            for (j = 0; j < listScopes.length; j++) {
                HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '</option>'
            }
            $('#coop_scope_ex_moa_add').append(HTMLScopedata);
        }

        function initAndRefreshTableExMOAAdd() {
            resetExMOAAddTable();
            initExMOAAddTable();
        }

        function resetExMOAAddTable() {
            for (idx = 0; idx < listTempExMOAPartnerScope.length; idx++) {
                $("#tempExMOA" + idx).remove();
            }
        }

        function initExMOAAddTable() {
            var HTMLdata = null;
            for (idx = 0; idx < listTempExMOAPartnerScope.length; idx++) {
                HTMLdata += '<tr id="tempExMOA' + idx + '" "class="MOAPartnerTempList">';
                HTMLdata += '<td>' + (idx + 1) + '</td>';
                HTMLdata += '<td>' + listTempExMOAPartnerScope[idx].partner_name + '</td>';
                HTMLdata += '<td>' + listTempExMOAPartnerScope[idx].scopes_abbreviation + '</td>';

                var buttonEdit = '<a onclick="loadEditExMOATemp(' + idx + ')" href="#edit-partner-scope" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
                var buttonDel = '<a onclick="confirm_delete_ex_moa_temp(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                HTMLdata += '<td class="text-center">' + buttonEdit + buttonDel + '</td>';
                HTMLdata += '</tr>';
            }
            $('#ex_moa_table_add').append(HTMLdata);
        }

        function loadEditExMOATemp(index) {
            $("#idx_ex_moa_edit").val(index);
            //load partner info
            var HTMLPartnerdata = "";
            $('#partner_name_ex_moa_edit').empty();
            for (i = 0; i < listPartner.length; i++) {
                if (listTempExMOAPartnerScope[index].partner_id == listPartner[i].partner_id) {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" selected>' + listPartner[i].partner_name + '</option>'
                } else {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" >' + listPartner[i].partner_name + '</option>'
                }
            }
            $('#partner_name_ex_moa_edit').append(HTMLPartnerdata);

            //load scopes info
            $('#coop_scope_ex_moa_edit').empty();
            for (j = 0; j < listTempExMOAPartnerScope[index].list_scopes.length; j++) {
                var isSelected = false;
                var scope_id = listTempExMOAPartnerScope[index].list_scopes[j].scope_id;
                var scope_abbreviation = listTempExMOAPartnerScope[index].list_scopes[j].scope_abbreviation;
                var scope_name = listTempExMOAPartnerScope[index].list_scopes[j].scope_name;
                var option;
                for (k = 0; k < listTempExMOAPartnerScope[index].scopes_id.length; k++) {
                    if (listTempExMOAPartnerScope[index].scopes_id[k] == listTempExMOAPartnerScope[index].list_scopes[j].scope_id) {
                        option = new Option(scope_abbreviation+'-'+scope_name, scope_id, true, true);
                        isSelected = true;
                        break;
                    }
                }
                if (!isSelected) {
                    option = new Option(scope_abbreviation + '-' + scope_name, scope_id, false, false);
                }
                $('#coop_scope_ex_moa_edit').append(option).trigger('change');
            }
        };

        function editExMOATemp() {
            if ($('#partner_name_ex_moa_edit').val() == "") {
                toastr.error('Đối tác chưa được chọn');
                return;
            }
            if ($('#coop_scope_ex_moa_edit').val().length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            var index = $("#idx_ex_moa_edit").val();
            var partner_id = $('#partner_name_ex_moa_edit').val();
            var scopes = $('#coop_scope_ex_moa_edit').val();

            //create value for scopes and partner edited
            var scopes = $("#coop_scope_ex_moa_edit").select2('data');
            var scopes_abbreviation = '';
            for (i = 0; i < scopes.length; i++) {
                scopes_abbreviation += scopes[i].text.split('-')[0] + ',';
            }
            if (scopes_abbreviation.endsWith(",")) {
                scopes_abbreviation = scopes_abbreviation.slice(0, -1);
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);
            var partner_name = objPartner.partner_name;

            //check existed partner_name at diff position.
            for (j = 0; j < listTempExMOAPartnerScope.length; j++) {
                if (j != index) {
                    if (listTempExMOAPartnerScope[j].partner_name == partner_name) {
                        toastr.error('Đối tác này đã được thêm');
                        return;
                    }
                }
            }

            listTempExMOAPartnerScope[index].partner_id = partner_id;
            listTempExMOAPartnerScope[index].partner_name = partner_name;
            listTempExMOAPartnerScope[index].scopes_id = $("#coop_scope_ex_moa_edit").val();
            listTempExMOAPartnerScope[index].scopes_abbreviation = scopes_abbreviation;
            initAndRefreshTableExMOAAdd();
            $('#edit-partner-scope').modal('hide');
    }

        function editExMOATempForEdit() {
            var index = $("#idx_ex_moa_edit_for_edit").val();
            var partner_id = $('#partner_name_ex_moa_edit_for_edit').val();
            var scopes_num = $('#coop_scope_ex_moa_edit_for_edit').val();

            if ($('#partner_name_ex_moa_edit_for_edit').val() == "") {
                toastr.error('Đối tác chưa được chọn');
                return;
            }
            else if (scopes_num.length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }

            //create value for scopes and partner edited
            var scopes = $("#coop_scope_ex_moa_edit_for_edit").select2('data');
            var scopes_abbreviation = '';
            for (i = 0; i < scopes.length; i++) {
                scopes_abbreviation += scopes[i].text.split('-')[0] + ',';
            }
            if (scopes_abbreviation.endsWith(",")) {
                scopes_abbreviation = scopes_abbreviation.slice(0, -1);
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);
            var partner_name = objPartner.partner_name;

            //check existed partner_name at diff position.
            for (j = 0; j < listTempExMOAPartnerScopeEdit.length; j++) {
                if (j != index) {
                    if (listTempExMOAPartnerScopeEdit[j].partner_name == partner_name) {
                        toastr.error('Đối tác này đã được thêm');
                        return;
                    }
                }
            }

            listTempExMOAPartnerScopeEdit[index].partner_id = partner_id;
            listTempExMOAPartnerScopeEdit[index].partner_name = partner_name;
            listTempExMOAPartnerScopeEdit[index].scopes_id = $("#coop_scope_ex_moa_edit_for_edit").val();
            listTempExMOAPartnerScopeEdit[index].scopes_abbreviation = scopes_abbreviation;
            initAndRefreshTableExMOAEdit();
            $('#edit-partner-scope-for-edit').modal('hide');
        }

        function confirm_delete_ex_moa_temp(index) {
            Swal.fire({
                title: "Cảnh báo?",
                text: "Dữ liệu sẽ bị xóa!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.isConfirmed) {
                    resetExMOAAddTable();
                    listTempExMOAPartnerScope.splice(index, 1);
                    initAndRefreshTableExMOAAdd();
                }
            })
        }

        function getNewExMOACode() {
            $.ajax({
                url: "@Url.Action("getNewExtraMOACode", "BasicInfoMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    //$('#ex_moa_id_add').val(data);
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        var button_loader_ex_moa_add;
        function finishExMOAAdd(element) {
            button_loader_ex_moa_add = new LoaderBtn(element);
            button_loader_ex_moa_add.startLoading();
            if ($('#moa_id_addition').val().trim() == "") {
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if ($('#moa_addition_end_time').val().trim() == "") {
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Ngày hết hạn chưa được chọn');
                return;
            }
            else if (compareDate($('#moa_addition_sign_time').val(), $('#moa_addition_end_time').val())) { //compare = true <=> sign_date > end_date
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                return;
            }
            else if (ExMOACodeIsInvalid($('#moa_id_addition').val().trim())) {
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Số hiệu không hợp lệ');
                return;
            }
            else if (compareDate($('#sign_date_moa').val(), $('#moa_addition_sign_time').val())) { //compare = true <=> sign_date > end_date
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Ngày ký kết của biên bản bổ sung phải sau ngày ký kết của biên bản gốc');
                return;
            }
            else if (compareDate($('#end_date_moa').val(), $('#moa_addition_end_time').val())) { //compare = true <=> sign_date > end_date
                button_loader_ex_moa_add.stopLoading();
                toastr.error('Ngày hết hạn của biên bản bổ sung phải sau ngày hết hạn của biên bản gốc');
                return;
            }
            else {
                addExMOAAction();
            }
        }

        function addExMOAAction() {
                var ExMOABasicInfo = {
                    ex_moa_code: $('#moa_id_addition').val() ,
                    ex_moa_sign_date: $('#moa_addition_sign_time').val(),
                    ex_moa_end_date: $('#moa_addition_end_time').val()
                };
                var ExMOAAdd = {
                    ExMOABasicInfo: ExMOABasicInfo,
                    PartnerScopeInfoMOA: listTempExMOAPartnerScope
                };

                evidence = uppyExMOAAdd.getFiles();
                let formData = new FormData();
                formData.append("input", JSON.stringify(ExMOAAdd));
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

                $.ajax({
                    url: "@Url.Action("Add_Ex_Moa", "BasicInfoMOA")",
                    type: "POST",
                    data: formData,
                    //contentType: "application/json;charset=utf-8",
                    contentType: false,
                    processData: false,
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        listTempExMOAPartnerScope = [];
                        $('#add_additional_moa').modal('hide');
                        button_loader_ex_moa_add.stopLoading();
                        Swal.fire("Thành công",
                            "Đã bổ sung biên bản ghi nhớ thành công", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                        });
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
        }

        function editExMOA(moa_bonus_id) {
            $.ajax({
                url: "@Url.Action("ViewExMOADetail", "BasicInfoMOA")",
                type: "POST",
                data: { moa_bonus_id: moa_bonus_id },
                success: function (data) {
                    $('#moa_id_edit').val(data.ExMOABasicInfo.ex_moa_code);
                    $('#moa_bonus_id').val(moa_bonus_id);
                    $('#moa_edit_sign_time').val(data.ExMOABasicInfo.ex_moa_sign_date);
                    $('#moa_edit_end_time').val(data.ExMOABasicInfo.ex_moa_end_date);
                    //getListScopesByPartnerID(data);
                    //load available exist file
                    if (data.file_drive_id != null) {
                        if ($('#edit_addition_moa_upload .uppy-list').text() == "") {
                            let elemId = 'edit_addition_moa_upload';
                            let id = '#' + elemId;
                            let $statusBar = $(id + ' .uppy-status');
                            let $uploadedList = $(id + ' .uppy-list');
                            let uploadListHtml = '<div class="uppy-list-item" data-id="' + data.file_drive_id + '"><div class="uppy-list-label">' + data.file_name + '</div><span class="uppy-list-remove" data-id="' + data.file_drive_id + '"><i class="flaticon2-cancel-music"></i></span></div>';
                            $uploadedList.append(uploadListHtml);
                            $statusBar.addClass('uppy-status-hidden');
                            $statusBar.removeClass('uppy-status-ongoing');
                        }
                        old_file_number_ex_moa = 1;
                    }
                    else {
                        old_file_number_ex_moa = 0;
                    }
                    new_file_number_ex_moa = old_file_number_ex_moa;
                    addToPartnerScopeListEdit(data);
                },
                error: function (data) {

                },
            });
        }

        function getListScopesByPartnerID(partner_id) {
            var em = { partner_id: partner_id };
            $.ajax({
                url: "@Url.Action("getNewExMOAScopesList", "BasicInfoMOA")",
                type: "POST",
                data: JSON.stringify(em),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (listScopes) {
                    //alert(JSON.stringify(listScopes[0]));
                    return listScopes;
                },
                error: function () {
                    //alert("fail");
                }
            });
        }

        function addToPartnerScopeListEdit(data) {
            listTempExMOAPartnerScopeEdit = [];
            for (i = 0; i < data.PartnerScopeInfoMOA.length; i++){
                var partner_id = data.PartnerScopeInfoMOA[i].partner_id;
                var scopes = data.PartnerScopeInfoMOA[i].scopes_id;
                var scopes_name = data.PartnerScopeInfoMOA[i].scopes_name;
                var partner_name = data.PartnerScopeInfoMOA[i].partner_name;
                var total_scopes = data.PartnerScopeInfoMOA[i].total_scopes;

                var temp = {
                    partner_id: partner_id,
                    partner_name: partner_name,
                    scopes_id: scopes,
                    scopes_abbreviation: scopes_name,
                    list_scopes: total_scopes
                }
                listTempExMOAPartnerScopeEdit.push(temp);
            }
            initAndRefreshTableExMOAEdit();
        }

        function initAndRefreshTableExMOAEdit(){
            resetExMOAEditTable();
            initExMOAEditTable();
        }

        function resetExMOAEditTable() {
            for (idx = 0; idx < listTempExMOAPartnerScopeEdit.length; idx++) {
                $("#tempExMOAEdit" + idx).remove();
            }
        }

        function initExMOAEditTable() {
            var HTMLdata = null;
            for (idx = 0; idx < listTempExMOAPartnerScopeEdit.length; idx++) {
                HTMLdata += '<tr id="tempExMOAEdit' + idx + '" "class="MOAPartnerTempList">';
                HTMLdata += '<td>' + (idx + 1) + '</td>';
                HTMLdata += '<td>' + listTempExMOAPartnerScopeEdit[idx].partner_name + '</td>';
                HTMLdata += '<td>' + listTempExMOAPartnerScopeEdit[idx].scopes_abbreviation + '</td>';

                var buttonEdit = '<a onclick="loadEditExMOATempForEdit(' + idx + ')" href="#edit-partner-scope-for-edit" data-toggle="modal" class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;">Sửa</a>';
                var buttonDel = '<a onclick="confirm_delete_ex_moa_temp_edit(' + (idx) + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                HTMLdata += '<td class="text-center">' + buttonEdit + buttonDel + '</td>';
                HTMLdata += '</tr>';
            }
            $('#ex_moa_table_edit').append(HTMLdata);
        }

        function loadEditExMOATempForEdit(index) {
            $("#idx_ex_moa_edit_for_edit").val(index);
            var HTMLPartnerdata = "";
            $('#partner_name_ex_moa_edit_for_edit').empty();
            $('#coop_scope_ex_moa_edit_for_edit').empty();
            for (i = 0; i < listPartner.length; i++) {
                if (listTempExMOAPartnerScopeEdit[index].partner_id == listPartner[i].partner_id) {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" selected>' + listPartner[i].partner_name + '</option>'
                } else {
                    HTMLPartnerdata += '<option value = "' + listPartner[i].partner_id + '" >' + listPartner[i].partner_name + '</option>'
                }
            }
            //load scopes info
            $('#coop_scope_ex_moa_edit_for_edit').empty();
            for (j = 0; j < listTempExMOAPartnerScopeEdit[index].list_scopes.length; j++) {
                var isSelected = false;
                var scope_id = listTempExMOAPartnerScopeEdit[index].list_scopes[j].scope_id;
                var scope_name = listTempExMOAPartnerScopeEdit[index].list_scopes[j].scope_name;
                var scope_abbreviation = listTempExMOAPartnerScopeEdit[index].list_scopes[j].scope_abbreviation;
                var option;
                for (k = 0; k < listTempExMOAPartnerScopeEdit[index].scopes_id.length; k++) {
                    if (listTempExMOAPartnerScopeEdit[index].scopes_id[k] == listTempExMOAPartnerScopeEdit[index].list_scopes[j].scope_id) {
                        option = new Option(scope_abbreviation + '-' + scope_name, scope_id, true, true);
                        isSelected = true;
                        break;
                    }
                }
                if (!isSelected) {
                    option = new Option(scope_abbreviation + '-' + scope_name, scope_id, false, false);
                }
                $('#coop_scope_ex_moa_edit_for_edit').append(option).trigger('change');
            }
            $('#partner_name_ex_moa_edit_for_edit').append(HTMLPartnerdata);
        }

        function confirm_delete_ex_moa_temp_edit(index) {
            Swal.fire({
                title: "Cảnh báo?",
                text: "Dữ liệu sẽ bị xóa!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.isConfirmed) {
                    resetExMOAEditTable();
                    listTempExMOAPartnerScopeEdit.splice(index, 1);
                    initAndRefreshTableExMOAEdit();
                }
            })
        }

        function editExMOUTempForEdit() {
            var index = $("#idx_ex_moa_edit_for_edit").val();

            var partner_id = $('#partner_name_ex_moa_edit_for_edit').val();
            var scopes = $('#coop_scope_ex_moa_edit_for_edit').val();

            var scopes_name = '';
            for (i = 0; i < scopes.length; i++) {
                var objScope = listScopes.find(x => x.scope_id == scopes[i]);
                scopes_name += objScope.scope_abbreviation + ',';
            }

            var objPartner = listPartner.find(x => x.partner_id == partner_id);
            var partner_name = objPartner.partner_name;

            if (scopes_name.endsWith(",")) {
                scopes_name = scopes_name.slice(0, -1);
            }

            listTempExMOAPartnerScopeEdit[index].partner_id = partner_id;
            listTempExMOAPartnerScopeEdit[index].partner_name = partner_name;
            listTempExMOAPartnerScopeEdit[index].scopes_id = scopes;
            listTempExMOAPartnerScopeEdit[index].scopes_name = scopes_name;
            initAndRefreshTableExMOAEdit();
        }

        function addExMOATempForEdit() {
            var partner_id = $('#partner_name_ex_moa_add_for_edit').val();
            var scopes_num = $('#coop_scope_ex_moa_add_for_edit').val();
            var ListScopesOfExMOA = [];

            if (scopes_num.length == 0) {
                toastr.error('Phạm vi hợp tác chưa được chọn');
                return;
            }
            else if ($('#partner_name_ex_moa_add_for_edit').val() == "") {
                toastr.error('Đối tác chưa được chọn');
                return;
            }
            else {
                var scopes = $("#coop_scope_ex_moa_add_for_edit").select2('data');
                var scopes_abbreviation = '';
                for (i = 0; i < scopes.length; i++) {
                    scopes_abbreviation += scopes[i].text.split('-')[0] + ',';
                }
                if (scopes_abbreviation.endsWith(",")) {
                    scopes_abbreviation = scopes_abbreviation.slice(0, -1);
                }

                var objPartner = listPartner.find(x => x.partner_id == partner_id);
                var partner_name = objPartner.partner_name;

                $("#coop_scope_ex_moa_add_for_edit option").each(function () {
                    ListScopesOfExMOA.push({
                        scope_id: $(this).val(),
                        scope_abbreviation: $(this).text().split('-')[0],
                        scope_name: $(this).text().split('-')[1],
                    });
                });

                //add to temp if pass all conditions.
                var objCheck = listTempExMOAPartnerScopeEdit.find(x => x.partner_name == partner_name);
                if (objCheck == null) {
                    var temp = {
                        partner_id: partner_id,
                        partner_name: partner_name,
                        scopes_id: $("#coop_scope_ex_moa_add_for_edit").val(),
                        scopes_abbreviation: scopes_abbreviation,
                        list_scopes: ListScopesOfExMOA
                    }
                    listTempExMOAPartnerScopeEdit.push(temp);
                    clearInputAddExMOAPartnerForEdit();
                    $('#add-partner-scope-for-edit').modal('hide');
                    initAndRefreshTableExMOAEdit();
                }
                else {
                    toastr.error('Đối tác này đã được thêm');
                }
            }
        }

        function clearInputAddExMOAPartnerForEdit() {
            $('#partner_name_ex_moa_add_for_edit').val('');
            $('#coop_scope_ex_moa_add_for_edit').empty();
            var HTMLScopedata = '';
            for (j = 0; j < listScopes.length; j++) {
                HTMLScopedata += '<option value = "' + listScopes[j].scope_id + '">' + listScopes[j].scope_abbreviation + '-'+ listScopes[j].scope_name +'</option>'
            }
            $('#coop_scope_ex_moa_add_for_edit').append(HTMLScopedata);
        }

        var button_loader_ex_moa_edit;
        function finishExMOAEdit(element) {
            button_loader_ex_moa_edit = new LoaderBtn(element);
            button_loader_ex_moa_edit.startLoading();

            if ($('#moa_id_edit').val().trim() == "") {
                button_loader_ex_moa_edit.stopLoading();
                toastr.error('Số hiệu không được bỏ trống');
                return;
            }
            else if ($('#moa_edit_end_time').val().trim() == "") {
                button_loader_ex_moa_edit.stopLoading();
                toastr.error('Ngày hết hạn chưa được chọn');
                return;
            }
            else if (compareDate($('#moa_edit_sign_time').val(), $('#moa_edit_end_time').val())) { //compare = true <=> sign_date > end_date
                button_loader_ex_moa_edit.stopLoading();
                toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn');
                return;
            }
            else if (ExMOACodeIsInvalid($('#moa_id_edit').val().trim())) {
                button_loader_ex_moa_edit.stopLoading();
                toastr.error('Số hiệu không hợp lệ');
                return;
            }
            else {
                editExMOAEditAction();
            }
        }

        function editExMOAEditAction() {
            var ExMOABasicInfo = {
                    ex_moa_code: $('#moa_id_edit').val() ,
                    ex_moa_sign_date: $('#moa_edit_sign_time').val(),
                    ex_moa_end_date: $('#moa_edit_end_time').val()
                };

                var ExMOAAdd = {
                    ExMOABasicInfo: ExMOABasicInfo,
                    PartnerScopeInfoMOA: listTempExMOAPartnerScopeEdit,
                    moa_bonus_id: $('#moa_bonus_id').val()
                };

                //collect basicInfo data
                evidence = uppyExMOAEdit.getFiles();
                let formData = new FormData();
                formData.append("input", JSON.stringify(ExMOAAdd));
                formData.append("old_file_number_ex_moa", old_file_number_ex_moa);
                formData.append("new_file_number_ex_moa", new_file_number_ex_moa);
                formData.append("evidence", evidence.length == 0 ? null : evidence[0].data);

                $.ajax({
                    url: "@Url.Action("Edit_Ex_Moa", "BasicInfoMOA")",
                    type: "POST",
                    //data: JSON.stringify(ExMOAAdd),
                    //contentType: "application/json;charset=utf-8",
                    data: formData,
                    contentType: false,
                    processData: false,
                    datatype: "json",
                    cache: false,
                    success: function (data) {
                        listTempExMOAPartnerScopeEdit = [];
                        $('#edit_additional_moa').modal('hide');
                        Swal.fire("Thành công",
                            "Đã sửa biên bản ghi nhớ bổ sung thành công", "success").then(function (result) {
                                if (result.value) {
                                    location.reload();
                                }
                        });
                    },
                    error: function () {
                        //alert("fail");
                    }
                });
        }
</script>

    @*partner_moa*@
<script>
        var listSpeMOAPartner = [];
        var listScopeMOAPartner = [];
        var listPartnerMOAPartner = [];
        var moa_partner_table;
        var moa_partner_id_item;
        var history_table;

    $(document).ready(function () {
        loadListPartnerMOA();
    });

    function addToList() {
        listScopeMOAPartner = [];
        listPartnerMOAPartner = [];
        $("#coop_scope option").each(function () {
            listScopeMOAPartner.push({
                scope_id: $(this).val(),
                scope_name: $(this).text()
            });
        });
        $("#partner_name_form option").each(function () {
            listPartnerMOAPartner.push({
                partner_id: $(this).val(),
                partner_name: $(this).text()
            });
        });
    }

    var rowIdxMOAPartner = 1;
    function loadListPartnerMOA() {
        moa_partner_table = $("#partner_table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false,
            sorting: [[1, 'asc']],
            ajax: {
                    url: "@Url.Action("ViewListMOAPartner", "PartnerMOA")",
                    type: "POST",
                    datatype: "json",
                    data: {
                        "partner_name": function () { return $('#search_partner_name').val() },
                        "nation": function () { return $('#search_nation').val() },
                        "specialization": function () { return $('#search_specialization').val() },
                    },
                    cache: "false"
            },
            columns: [
                {
                    render: function () {
                        return rowIdxMOAPartner++;
                    },
                    orderable: false,
                    className: 'text-center',

                },
                {
                    data: "partner_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "country_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center',
                },
                {
                    data: "specialization_name",
                    className: 'text-center',
                    render: function (data) {
                        data = data.replaceAll(',', ', <br/>')
                        return data
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                        $(td).css({ 'min-width': '90px', 'max-width': '100px' })
                    },
                    className: 'text-center',
                },
                {
                    data: "website",
                    orderable: false,
                    render: function (data) {
                        if (data == null) {
                            return "";
                        } else {
                            return '<a target="blank" href="' + data + '"><span class="svg-icon svg-icon-dark svg-icon-md"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Design/Edit.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 24 24"><g fill="none"><path d="M13.544 10.456a4.368 4.368 0 0 0-6.176 0l-3.089 3.088a4.367 4.367 0 1 0 6.177 6.177L12 18.177m-1.544-4.633a4.368 4.368 0 0 0 6.177 0l3.088-3.088a4.368 4.368 0 0 0-6.177-6.177L12 5.823" stroke="black" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/></g></svg><!--end::Svg Icon--></span></a>';
                        }
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 ')
                    },
                    className: 'text-center',
                },
                {
                    data: "contact_point_name",
                    createdCell: function (td, cellData, rowData, row, col) {
                    $(td).css('padding', '0 5px')
                },
                    className: 'text-center text-nowrap'

                },
                {
                    data: "contact_point_phone",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap'
                },
                {
                    data: "contact_point_email",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap'
                },
                {
                    data: "moa_start_date_string",
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center'
                },
                {
                    data: "scope_abbreviation",
                    className: 'text-center',
                    render: function (data) {
                        data = data.replaceAll(',', ', ')
                        return data
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 ')
                    },
                    className: 'text-center'
                },
                {
                    title: 'Hành động',
                    data:
                    {
                        moa_partner_id: "moa_partner_id",
                        moa_code: "moa_code",
                        partner_name: "partner_name"
                    },
                    orderable: false,
                    render: function (data, type, full, meta, row) {
                        return '<a onclick="show_status_history(' + data.moa_partner_id + ',\'' + data.moa_code +'\',\'' + data.partner_name + '\')" class="show-status-history" href="#moa_partner_history" data-toggle="modal"><span class="svg-icon svg-icon-dark svg-icon-sm"><!--begin::Svg Icon | path:/var/www/preview.keenthemes.com/metronic/releases/2021-02-01-052524/theme/html/demo1/dist/../src/media/svg/icons/Code/Time-schedule.svg--><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 512 512"><path d="M504 255.531c.253 136.64-111.18 248.372-247.82 248.468c-59.015.042-113.223-20.53-155.822-54.911c-11.077-8.94-11.905-25.541-1.839-35.607l11.267-11.267c8.609-8.609 22.353-9.551 31.891-1.984C173.062 425.135 212.781 440 256 440c101.705 0 184-82.311 184-184c0-101.705-82.311-184-184-184c-48.814 0-93.149 18.969-126.068 49.932l50.754 50.754c10.08 10.08 2.941 27.314-11.313 27.314H24c-8.837 0-16-7.163-16-16V38.627c0-14.254 17.234-21.393 27.314-11.314l49.372 49.372C129.209 34.136 189.552 8 256 8c136.81 0 247.747 110.78 248 247.531zm-180.912 78.784l9.823-12.63c8.138-10.463 6.253-25.542-4.21-33.679L288 256.349V152c0-13.255-10.745-24-24-24h-16c-13.255 0-24 10.745-24 24v135.651l65.409 50.874c10.463 8.137 25.541 6.253 33.679-4.21z" fill="black"/></svg><!--end::Svg Icon--></span></a> '
                            + '<a href="#edit_partner_moa" onclick=goDetailMOAPartner(' + data.moa_partner_id + ') class="btn btn-sm btn-light-primary px-6 font-weight-bold" style="margin-right: 10px;" data-toggle="modal">Sửa</a>' +
                            '<a onclick="confirm_delete_partner_moa(' + data.moa_partner_id + ')" class="btn btn-sm btn-light-danger px-6 font-weight-bold" data-toggle="modal">Xóa</a>'
                    },
                    createdCell: function (td, cellData, rowData, row, col) {
                        $(td).css('padding', '0 5px')
                    },
                    className: 'text-center text-nowrap'
                },
            ],
            initComplete: function () {
                $(this).parent().css('overflow-x', 'auto');
                $(this).parent().css('width', '100%');
                $(this).parent().css('padding', '0');
                $('.mou_table th').css('padding', '5px 15px 5px 5px')
                $('.sorting_disabled').css('padding', '5px')
                $('.header-modify').css('padding', '5px')
            }
        });
    }

    function updateListScopeMOAAdd(data) {
        $('#coop_scope').empty();
        var HTMLScopesdata = "";
        for (j = 0; j < data.length; j++) {
            HTMLScopesdata += '<option value = "' + data[j].scope_id + '">' + data[j].scope_abbreviation + '-' + data[j].scope_name + '</option>';
        }
        $('#coop_scope').append(HTMLScopesdata);
    }

    function updateListScopeMOAEdit(data) {
        $('#coop_scope_edit').empty();
        var HTMLScopesdata = "";
        for (j = 0; j < data.length; j++) {
            HTMLScopesdata += '<option value = "' + data[j].scope_id + '">' + data[j].scope_abbreviation + '-' + data[j].scope_name+ '</option>';
        }
        $('#coop_scope_edit').append(HTMLScopesdata);
    }

    function checkPartnerAddMOA() {
        var partner_id = document.getElementById("partner_name_form").value;
        var em = { partner_id: partner_id };
        $.ajax({
            url: "@Url.Action("GetMOAScopesByPartner", "PartnerMOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                updateListScopeMOAAdd(data);
                document.getElementById("add_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
        $.ajax({
            url: "@Url.Action("CheckPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == "") {

                } else {
                    document.getElementById("represent").value = data.contact_point_name == null ? "" : data.contact_point_name;
                    document.getElementById("website").value = data.website == null ? "" : data.website;
                    document.getElementById("address").value = data.address == null ? "" : data.address;
                    document.getElementById("email").value = data.contact_point_email == null ? "" : data.contact_point_email;
                    document.getElementById("nation").value = data.country_name == null ? "" : data.country_name;
                    document.getElementById("phone").value = data.contact_point_phone == null ? "" : data.contact_point_phone;
                    document.getElementById("moa_partner_id_add").value = data.partner_id == null ? "" : data.partner_id;
                    document.getElementById("specialization").value = data.specializations == null ? "" : data.specializations;
                }
                document.getElementById("add_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    function checkPartnerEditMOA() {
        var partner_id = document.getElementById("partner_name_form_edit").value;
        var em = { partner_id: partner_id };
        $.ajax({
            url: "@Url.Action("GetMOAScopesByPartner", "PartnerMOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                updateListScopeMOAEdit(data);
            },
            error: function () {
                //alert("fail");
            }
        });
        $.ajax({
            url: "@Url.Action("CheckPartner", "MOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                if (data == "") {

                } else {
                    document.getElementById("represent_edit").value = data.contact_point_name == null ? "" : data.contact_point_name;
                    document.getElementById("website_edit").value = data.website == null ? "" : data.website;
                    document.getElementById("address_edit").value = data.address == null ? "" : data.address;
                    document.getElementById("email_edit").value = data.contact_point_email == null ? "" : data.contact_point_email;
                    document.getElementById("nation_edit").value = data.country_name == null ? "" : data.country_name;
                    document.getElementById("phone_edit").value = data.contact_point_phone == null ? "" : data.contact_point_phone;
                    document.getElementById("moa_partner_id_edit").value = data.partner_id == null ? "" : data.partner_id;
                    document.getElementById("specialization_edit").value = data.specialization_name == null ? "" : data.specialization_name;
                }
                document.getElementById("edit_moa_partner_button").removeAttribute('disabled');
            },
            error: function () {
                //alert("fail");
            }
        });
    }
    var moa_partner_button_loader;
    function valMOAPartner(element) {
        moa_partner_button_loader = new LoaderBtn(element);
        moa_partner_button_loader.startLoading();
        if ($('#sign_date').val().trim() == '') {
            moa_partner_button_loader.stopLoading();
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#coop_scope').val().length == 0) {
            moa_partner_button_loader.stopLoading();
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else if (compareDate($('#sign_date').val(), $('#end_date_moa').val())) { //compare = true <=> sign_date > end_date
            moa_partner_button_loader.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn của biên bản ghi nhớ');
        }
        else {
            checkMOAPartnerAddDuplicated();
        }
    }

    function checkMOAPartnerAddDuplicated(){
            var obj =
            {
                partner_id: $('#partner_name_form').val()
            };
            $.ajax({
                url: "@Url.Action("CheckPartnerExistedInMOA", "PartnerMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data != "") {
                        moa_partner_button_loader.stopLoading();
                        toastr.error('Đối tác đã có trong biên bản ghi nhớ');
                    } else {
                        CheckMOAPartnerDateInvalid($('#sign_date').val(), $('#partner_name_form').val());
                    }
                },
                error: function () {

                }
            });
    }

    function checkMOAPartnerEditDuplicated(){
            var obj =
            {
                partner_id: $('#partner_name_form_edit').val(),
                moa_partner_id: $('#moa_partner_id_edit').val()
            };
            $.ajax({
                url: "@Url.Action("CheckPartnerExistedInEditMOA", "PartnerMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                data: JSON.stringify(obj),
                datatype: "json",
                cache: false,
                success: function (data) {
                    if (data != "") {
                        moa_partner_edit_button.stopLoading();
                        toastr.error('Đối tác đã có trong biên bản thỏa thuận');
                    } else {
                        editMOAPartnerAction();
                    }
                },
                error: function () {

                }
            });
    }

    function addMOAPartner() {
        var MOAPartnerInfo = {
                partner_id: document.getElementById("partner_name_form").value,
                sign_date_moa_add: document.getElementById("sign_date").value,
                coop_scope_add: $("#coop_scope").val()
                //partner_id: document.getElementById("moa_partner_id_add").value,
            }
            $.ajax({
                url: "@Url.Action("Add_Moa_Partner", "PartnerMOA")",
                type: "POST",
                data: JSON.stringify(MOAPartnerInfo),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#add_partner_moa').modal('hide');
                    moa_partner_button_loader.stopLoading();
                    Swal.fire("Thành công",
                        "Đã thêm đối tác thành công", "success").then(function (result) {
                            if (result.value) {
                                location.reload();
                            }
                    });
                },
                error: function () {
                    //alert("fail");
                }
            });
    }

    function CheckMOAPartnerDateInvalid(date,partner_id) {
        var obj = {
            partner_id: partner_id,
            start_date_string: date
        }
        $.ajax({
                url: "@Url.Action("CheckMOAPartner", "PartnerMOA")",
                type: "POST",
                data: JSON.stringify(obj),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (isInvalid) {
                    if (isInvalid) {
                        moa_partner_button_loader.stopLoading();
                        toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn của biên bản ghi nhớ');
                    }
                    else {
                        addMOAPartner();
                    }
                },
                error: function () {
                    //alert("fail");
                }
        });
    }

    function MOABonusIsExisted(moa_partner_id) {
        var obj = {
            moa_partner_id: moa_partner_id
        }
        $.ajax({
                url: "@Url.Action("CheckMOABonusExisted", "PartnerMOA")",
                type: "POST",
                data: JSON.stringify(obj),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (isExisted) {
                    if (isExisted) {
                        toastr.error('Không thể xóa đối tác đã có trong biên bản thỏa thuận bổ sung');
                    } else {
                        showSwalDelMOAPartner(moa_partner_id);
                    }
                },
                error: function () {
                    //alert("fail");
                }
        });
    }

    function goDetailMOAPartner(moa_partner_id) {
        addToList();
        var em = { moa_partner_id: moa_partner_id };
        $.ajax({
            url: "@Url.Action("Get_Partner_Detail", "PartnerMOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            cache: false,
            success: function (data) {
                $("#represent_edit").val(data.contact_point_name);
                $("#nation_edit").val(data.country_name);
                $("#email_edit").val(data.contact_point_email);
                $("#sign_date_edit").val(data.moa_start_date_string);
                $("#website_edit").val(data.website);
                $("#phone_edit").val(data.contact_point_phone);
                $("#address_edit").val(data.address);
                $("#specialization_edit").val(data.specialization_name);
                $("#moa_partner_id_edit").val(moa_partner_id);
                //moa_partner_id_item = moa_partner_id;
                loadDataMOAPartnerForEdit(data);
            },
            error: function () {
                alert("fail");
            }
        });
    }

    function loadDataMOAPartnerForEdit(input) {
        //add html to partner_input
        $('#partner_name_form_edit').empty();
        var partner_id = input.partner_id;
        var HTMLPartnerdata = "";
        for (k = 0; k < listPartnerMOAPartner.length; k++) {
            if (partner_id == listPartnerMOAPartner[k].partner_id) {
                HTMLPartnerdata += '<option value = "' + listPartnerMOAPartner[k].partner_id + '" selected>' + listPartnerMOAPartner[k].partner_name + '</option>'
            } else {
                HTMLPartnerdata += '<option value = "' + listPartnerMOAPartner[k].partner_id + '">' + listPartnerMOAPartner[k].partner_name + '</option>'
            }
        }
        $('#partner_name_form_edit').append(HTMLPartnerdata);

        //add html to scopes input
        var em = { partner_id: input.partner_id };
        $.ajax({
            url: "@Url.Action("GetMOAScopesByPartner", "PartnerMOA")",
            type: "POST",
            data: JSON.stringify(em),
            contentType: "application/json;charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#coop_scope_edit').empty();
                //add all options.
                //split and add choice
                var token = (input.scopes + '').split(',');
                for (j = 0; j < data.length; j++) {
                    var isSelected = false;
                    for (i = 0; i < token.length; i++) {
                        if (token[i] == data[j].scope_id) {
                            isSelected = true;
                            var newOption = new Option(data[j].scope_abbreviation+'-'+data[j].scope_name, data[j].scope_id, true, true);
                            $('#coop_scope_edit').append(newOption).trigger('change');
                            break;
                        }
                    }
                    if (!isSelected) {
                        var newOption = new Option(data[j].scope_abbreviation + '-' + data[j].scope_name, data[j].scope_id, false, false);
                        $('#coop_scope_edit').append(newOption).trigger('change');
                    }
                }
            },
            error: function () {
                //alert("fail");
            }
        });
    }

    function confirm_delete_partner_moa(id) {
        checkLastPartnerMOA(id);
    };

    function checkLastPartnerMOA(id) {
        $.ajax({
                url: "@Url.Action("isLastPartnerMOA", "PartnerMOA")",
                type: "POST",
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (isLast) {
                    if (isLast) {
                        toastr.error('Một biên bản thỏa thuận phải có ít nhất 1 đối tác');
                    } else {
                        MOABonusIsExisted(id);
                    }
                },
                error: function () {
                    //alert("fail");
                }
        });
    }

    function showSwalDelMOAPartner(id) {
        var link = '@Url.Action("deletePartnerMOA", "PartnerMOA")'
            Swal.fire({
                title: "Cảnh báo",
                text: "Dữ liệu sẽ bị xóa và không thể khôi phục",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Đồng ý",
                cancelButtonText: "Đóng",
                reverseButtons: true
            }).then(function (result) {
                if (result.value) {
                    $.ajax({
                        url: link,
                        data: { moa_partner_id : id },
                        success: function (data) {
                            if (data = "") {
                                Swal.fire("Good job!", "You clicked the button!", "error");
                            } else {
                                Swal.fire("Thành công",
                                    "Đã xóa thành công.", "success").then(function (result) {
                                        if (result.value) {
                                            location.reload();
                                        }
                                });
                            }
                        },
                        error: function (data) {
                            Swal.fire("Good job!", "You clicked the button!", "error");
                        },
                    })
                }
            })
    }

    function show_status_history(moa_partner_id, moa_id, partner_name) {
        var rowIdx = 1;
        $('#moa_id_history').val(moa_id);
        $('#partner_name_history').val(partner_name);
        if ($.fn.DataTable.isDataTable('#history-table')) {
            history_table.destroy();
        }
        history_table = $("#history-table").DataTable({
            oLanguage: {
                oPaginate: {
                    sPrevious: "Trang trước",
                    sNext: "Trang sau"
                },
                sEmptyTable: "Không có dữ liệu",
                sInfo: "Đang hiển thị từ _START_ đến _END_ của _TOTAL_ bản ghi",
            },
            searching: false,
            lengthChange: false,
            ajax: {
                    url: "@Url.Action("Get_MOA_History", "PartnerMOA")",
                    type: "POST",
                    data: { moa_partner_id: moa_partner_id },
                    datatype: "json",
                    cache: "false"
                },
            columns: [
                {
                    render: function () {
                        return rowIdx++;
                    },
                    className: 'text-center'
                }
                ,
                {
                    data: "content",
                    className: 'text-center'
                },
                {
                    data: "full_name",
                    className: 'text-center'
                },
                {
                    data: "add_time",
                    render: function (data, type) {
                        if (type === "sort" || type === "") {
                            return data;
                        }
                        return moment(data).format('DD-MM-YYYY hh:mm:ss A');
                    },
                    className: 'text-center'
                }
            ]
        });
    }

    function searchMOAPartner() {
        rowIdxMOAPartner = 1;
        moa_partner_table.ajax.reload();
    }

    var moa_partner_edit_button;
    function editMOAPartner(element) {
        moa_partner_edit_button = new LoaderBtn(element);
        moa_partner_edit_button.startLoading();
        if ($('#partner_name_form_edit').val().trim() == '') {
            moa_partner_edit_button.stopLoading();
            toastr.error('Đối tác chưa được chọn');
            return;
        }
        else if ($('#sign_date_edit').val().trim() == '') {
            moa_partner_edit_button.stopLoading();
            toastr.error('Ngày ký kết chưa được chọn');
            return;
        }
        else if ($('#coop_scope_edit').val().length == 0) {
            moa_partner_edit_button.stopLoading();
            toastr.error('Phạm vi hợp tác chưa được chọn');
            return;
        }
        else if (compareDate($('#sign_date_edit').val(), $('#end_date_moa').val())) { //compare = true <=> sign_date > end_date
            moa_partner_edit_button.stopLoading();
            toastr.error('Ngày ký kết phải sớm hơn ngày hết hạn của biên bản ghi nhớ');
        }
        else {
            checkMOAPartnerEditDuplicated();
        }
    }

    function editMOAPartnerAction() {
        var MOAPartnerEdited = {
                scopes: $('#coop_scope_edit').val(),
                partner_id: $('#partner_name_form_edit').val(),
                sign_date_string: $('#sign_date_edit').val(),
                moa_partner_id: $("#moa_partner_id_edit").val()
            }
            $.ajax({
                url: "@Url.Action("Edit_Moa_Partner", "PartnerMOA")",
                type: "POST",
                data: JSON.stringify(MOAPartnerEdited),
                contentType: "application/json;charset=utf-8",
                datatype: "json",
                cache: false,
                success: function (data) {
                    $('#edit_partner_moa').modal('hide');
                    moa_partner_edit_button.stopLoading();
                    Swal.fire("Thành công",
                        "Đã chỉnh sửa thông tin đối tác thành công", "success").then(function (result) {
                            if (result.value) {
                                location.reload();
                            }
                    });
                },
                error: function () {
                    //alert("fail");
                }
            });
    }

</script>
}

